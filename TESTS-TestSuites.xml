<?xml version="1.0" encoding="UTF-8" ?>
<testsuites>
  <testsuite errors="0" failures="0" id="0" name="AccountControllerTests" package="" tests="1" time="0.727">
  
    <properties></properties>

      <testcase classname="AccountControllerTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="1" name="AccountTests" package="" tests="1" time="0.012">
  
    <properties></properties>

      <testcase classname="AccountTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="2" name="BlogControllerTests" package="" tests="1" time="0.0060">
  
    <properties></properties>

      <testcase classname="BlogControllerTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="3" name="BlogEntryControllerTests" package="" tests="1" time="0.0080">
  
    <properties></properties>

      <testcase classname="BlogEntryControllerTests" name="testSomething" time="0.0010"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="4" name="BlogEntryTests" package="" tests="1" time="0.0060">
  
    <properties></properties>

      <testcase classname="BlogEntryTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="5" name="BlogTests" package="" tests="1" time="0.0070">
  
    <properties></properties>

      <testcase classname="BlogTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="6" name="CommentControllerTests" package="" tests="1" time="0.027">
  
    <properties></properties>

      <testcase classname="CommentControllerTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="7" name="CommentTests" package="" tests="1" time="0.021">
  
    <properties></properties>

      <testcase classname="CommentTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="8" name="ImportServiceTest" package="" tests="1" time="0.256">
  
    <properties></properties>

      <testcase classname="ImportServiceTest" name="testImport" time="0.245"></testcase>

      <system-out><![CDATA[Starting test..
Importing /Users/glen/Desktop/glen-20071203.zip
Importing 2003/09/15/1063660844000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Same Guy, New Weblog</title>
<excerpt/>
<body><![CDATA[It's been way too long since I've blogged regularly. But I've now got MT up and running, life is good again. Now I just need to track down some cool MT templates. Watch this space.&#x5d;&#x5d;&gt;</body>
<date>16 Sep 2003 07:20:44:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/09/17/1063768445000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Catching Signals</title>
<excerpt/>
<body><![CDATA[Ever wanted to catch O/S Interrupts in your Java code? Things like CTRL-C on Windows or various SIGs on your fave brand of Unix. Well it turns out you can!<br/>
<br/>
A friend from work tipped me off to a feature introduced in JDK 1.3 where you can call Runtime.addShutdownHook(Thread yourHook). You pass in the thread unstarted, and when the VM gets a shutdown signal, it'll start your thread.<br/>
<br/>
<pre><br/>
		Runtime rt = Runtime.getRuntime();<br/>
		rt.addShutdownHook(new Thread() {<br/>
			public void run() {<br/>
				System.out.println("Ah-ha! You killed it!");<br/>
				System.out.flush();<br/>
			}<br/>
		});<br/>
</pre><br/>
<br/>
Neat, huh!  For more info check out http://java.sun.com/j2se/1.3/docs/guide/lang/enhancements.html#hooks&#x5d;&#x5d;&gt;</body>
<date>17 Sep 2003 13:14:05:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/09/18/1063853639000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>SNMP Libs</title>
<excerpt/>
<body><![CDATA[Have had to add some SNMP capabilities to an app recently (basically the ability to generate traps when bad things happen), so I've done a bit of scouring for available libs on the net.  I originally looked at SNMP adaptors for JMX, but haven't found any open source ones out there. (Anyone?)<br/>
<br/>
Of the three or four SNMP libs that I looked at, I settled on Jon Sevy's package at: http://edge.mcs.drexel.edu/GICL/people/sevy/snmp/snmp.html<br/>
<br/>
What I like about it is that it's *simple* to use. Which is what you want in an *S*NMP package. Also comes with some nice little demo apps that generate and catch traps, and interrogate SNMP services on remote hosts. Very cool stuff. Recommended.&#x5d;&#x5d;&gt;</body>
<date>18 Sep 2003 12:53:59:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/09/18/1063921429000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>dnsjava - a DNS Library</title>
<excerpt/>
<body><![CDATA[If the limitations of InetAddress get you down, you can go the whole hog and interrogate your DNS Zone! Ever wanted to find out the MX record for a given domain programmatically? Now you can!<br/>
<br/>
Came across this groovy little "dnsjava" library while looking into java mail servers. Download the source from http://www.dnsjava.org/<br/>
<br/>
Even comes with a port of dig written in Java... This guy is very sharp!&#x5d;&#x5d;&gt;</body>
<date>19 Sep 2003 07:43:49:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/09/22/1064197771000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>DataStudio (useful query tool)</title>
<excerpt/>
<body><![CDATA[<p>I've been using AquaFold's cool little Java-based query tool - DataStudio (<a href="http://www.aquafold.com">http://www.aquafold.com</a>). Very neat. What I like about it:</p><br/>
<ul><br/>
<li>SQL Command Completion (including your own table/field names)</li><br/>
<li>Editable result sets</li><br/>
<li>100% Java - so use it on your platform of choice</li><br/>
<li>Free for personal/educational use</li><br/>
</ul><br/>
<p>Worth a look. Just drop in your own JDBC driver and you're good to go. I've tested against mySQL and Sybase and it works a treat. </p>&#x5d;&#x5d;&gt;</body>
<date>22 Sep 2003 12:29:31:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/09/24/1064438340000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>jFreeChart</title>
<excerpt/>
<body><![CDATA[Have been wanting to investigate a decent charting component (for both Web and Swing use) for a while, but haven't had the time. Did a bit of surfing, and I've just come across jFreeChart (<a href="http://www.jfree.org/jfreechart/">http://www.jfree.org/jfreechart/</a>) which looks just sensational.<br/>
<br/>
Tried out the demo app that ships with the product and it does a truly *amazing* number of charts, in a very tight amount of code. The dynamic charting stuff looks truly funky. Can't wait to take it for a test drive.&#x5d;&#x5d;&gt;</body>
<date>25 Sep 2003 07:19:00:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/10/09/1065738635000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>PocketPC one month on...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[About a month ago, after years of faithful service, my Psion Revo Plus died. After looking for a suitable replacement, I ended up with a HP Ipaq 1940. Very cool little pda - ultralight/thin with bluetooth built in, and came with 128 Mb SD thrown in.<br/>
<br/>
Well, I never thought I would be able to live without an actual keyboard, but it definitely can be done. At first I used the on-screen keyboard, which was kinda cool with autocompletion, but still too slow when compared with the real thing. Then I got hooked on transcriber - and I'm loving ever second of it.<br/>
<br/>
I gave up on Pocket Outlook on the first day since it couldn't give me the week at a glance view I was so used to with the Psion. Entering start and end times was so painful I just gave up. No support for a tree view of tasks. The list goes on. Ended up replacing it with <a href="http://www.pocketinformant.com/">Pocket Informant</a> (which is one amazing PIM).  I gave me week-at-a-glace, notes with preview, categorised tasks with priorities, it's just amazing. And ALL the interfaces are useful. Meeting entry is a dream - those guys have really done their homework. Absolutely essential.<br/>
<br/>
The next essential app, was a decent Battery Monitor.  The built in one just tells you %, and becomes a pain when you get to < 25%. Enter <a href="http://www.omegaone.com/">Battery Pack Pro</a> from Omega One. Gives you minutes remaining in your task bar, adds some very snazzy diagnostics to your Today page, and let's you set up an App bar on your today page for launching your fave apps without having to pull down menus. Also gives you an on-screen power-off button to save wear on your device. Great app. I charge me device much less frequently cause I actually know how much life is left in the battery based on my usage pattern.<br/>
<br/>
Now I just need to find a password storage app with crypto that I can use for my banking stuff, and life is great.<br/>
&#x5d;&#x5d;&gt;</body>
<date>10 Oct 2003 08:30:35:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<tags></tags>
</blogEntry>

Importing 2003/10/15/1066256222000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>POPing with JavaMail</title>
<excerpt/>
<body><![CDATA[I've been toying with building a simple Java spam filter for a while, and last night I actually got things off the ground. First things first, I need to get the stuff off the server, so I had a scout for some POP3 libs. Turns out there's a few out there, but I figure that JavaMail from Sun has got to be worth a look (and I've got Elliotte Rusty Harold's excellent "Java Network Programming" sitting around with a whole chapter on it).<br/>
<br/>
One of the advantages of going with JavaMail is that the transport is pluggable. I can change between the Pop3 store and the Imap store *relatively* painlessly. The other advantage is that you get serious message parsing for free. Rather than have to do your own parsing of the message contents using RegExp or whatever, Sun have implemented the RFC for you, so you get to recipients as an Address[]. Loving their work. Need to get to the source contents of the message? Message.writeTo(OutputStream) .. in my case a ByteArrayOutputStream... but whatever. It's there and it's good.<br/>
<br/>
The javadoc says that the Message objects I'm getting back are "lightweight" - meaning their contents only gets filled when you make a call against a getter. Not sure if it *really* works like that (maybe for Imap, unlikely for Pop3). Must give it a try.<br/>
<br/>
Anyways, my messages are now downloading. Next step is to get them into a db or filesystem so I can keep them around till in case the engine I develop is too aggressive. ;-)&#x5d;&#x5d;&gt;</body>
<date>16 Oct 2003 08:17:02:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/10/20/1066634933000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>First Experiences with JNI</title>
<excerpt/>
<body><![CDATA[Never done any JNI before, but recently had a need, and it turns out that it's a whole lot more straightforward than I was anticipating. In my case, I needed to make some mods to an existing Win32 DLL, so YMMV.<br/>
<br/>
In a nutshell, the process goes like this:<br/>
<ul><br/>
<li>Define the methods you need as <b>public native</b> in your Java class. These guys are just stubs to the C calls you'll be making down the track, do don't put in any method body (just like an interface!) </li><br/>
<li>Define a static initializer for your class which contains a call to your relevant library: <code>System.loadLibrary("myWinDll"); // but without the .DLL bit </code><br/>
<li>Compile up your class so you get yourself a class file.</li><br/>
<li>Run <code>javah</code> over your compiled class. Which is going to give you a header file</li><br/>
<li>Implement the header file methods in your C source.</li><br/>
<li>Compile it up!</li><br/>
<li>Make sure the DLL your access is in your path... then start up your Java app!</li><br/>
</ul><br/>
<br/>
I was doing all this in VC 6.0, and found that when I used a Debug build I generated GPFs., the release builds worked fine.<br/>
<br/>
If you're looking for a very cool JNI how-to (which is Unix-centric, but the same principles apply), check out <a href="http://www.ringlord.com/publications/jni-howto">ringlord.com</a>.&#x5d;&#x5d;&gt;</body>
<date>20 Oct 2003 17:28:53:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/10/26/1067143904000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Tomcat, JNDI, JSTL, and "No suitable driver"</title>
<excerpt/>
<body><![CDATA[Been mucking around with getting JSTL to use a JNDI data source, and Tomcat has been giving me all sorts of grief. I knew my web.xml was right... and I'd created the JNDI source using Tomcat's own admin interface, so I *figured* that was ok.<br/>
<br/>
But every time I gave it a whirl, I'm getting the dreaded:  <code>DataSource invalid: "No suitable driver"</code> deal. The mysql jar file was happily in CATALINA_HOME/common/lib, so it wasn't that.<br/>
<br/>
Turns out you need to have <code>commons-dbcp.jar</code> and <code>commons-pool.jar</code> in your /common/lib directory as well. I wasn't specifying dbcp as my connection factory, so I don't know what gives with the dependency there.  But, whatever. It's fixed now.<br/>
<br/>
Anyways, that's the story.  I'm documenting this so that when I forget what the fix is I can hopefully find it via Google. ;-)<br/>
<br/>
&#x5d;&#x5d;&gt;</body>
<date>26 Oct 2003 15:51:44:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/11/12/1068676529000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Fun with Apache JMeter</title>
<excerpt/>
<body><![CDATA[Don't know if you've ever had a need to do scalability testing, but I've always been a bit interested, and I thought I'd track down some tools.<br/>
<br/>
Anyways, last night I began playing around with <a href="http://jakarta.apache.org/jmeter/">Apache JMeter</a> and it's pretty darn cool. It'll simulate a bunch of threads/users, and give you a cool graph to check out as well. It's a bit of a pain to configure (but the manual is very good), and you can set it up as a proxy and just capture your script directly from your browser (which is pretty darn cool - and time saving).<br/>
<br/>
One this I have noticed is that Jmeter runs slow under JDK 1.3. Every time it hits a redirect it waits for 20 seconds. Run it under 1.4, and life is great! Must have been some tweeking in URL timeouts between those versions.<br/>
<br/>
Anyways, recommended.<br/>
&#x5d;&#x5d;&gt;</body>
<date>13 Nov 2003 09:35:29:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/11/16/1069021358000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Pumped about SWT..</title>
<excerpt/>
<body><![CDATA[Just curious, anyone doing any SWT these days (the native-ish widget set that comes with Eclipse)?<br/>
<br/>
I've come to the conclusion that it's not really the speed that bugs me about Swing, or that fact that the API is so mammoth, or the fact that GridBayLayout is ridiculously complex to deal with for someone who doesn't do GUIs all that often (like me). To be honest, I can write that off to not being smart enough, and I can live with all that.<br/>
<br/>
But I've tracked down what I really don't like about it. It's the fact that it's just plain ugly.<br/>
<br/>
I've been playing with Apache JMeter to do some web scalability testing on my MightyBlog app (JMeter is one flippin cool tool BTW), but the GUI is just ugly. Any it's not the layout, which is just fine. It's the widgets themselves! What is the go with Tree widget?<br/>
<br/>
Anyways, so I'm going to have a play with SWT and see what I can come up with for the little spam filtering app I'm working on. Apparently they've even ported it to PocketPC, so I can deploy native-looking J2ME apps to the Ipaq. How cool would that be?<br/>
<br/>
So, anyone done any SWT? I'm keen for others experiences, since the doco is pretty light on.  <a href="http://www.madbean.com/blog/">Matt</a> pointed me to the Online doco that comes with Eclipse, which actually looks really good, and I've CVS'ed the example tree from dev.eclipse.org, so that should be more than enough to get started.<br/>
<br/>
Very pumped.&#x5d;&#x5d;&gt;</body>
<date>17 Nov 2003 09:22:38:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/11/19/1069279462000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Loving Remote Debugging</title>
<excerpt/>
<body><![CDATA[People have told me about Remote Debugging before, but yestday I set it up and it absolutely rocks!<br/>
<br/>
On very large server-side code, it is *so* much cooler (and faster) to be able to set a breakpoint in the middle of a massive call stack (rather than just keep inserting logging code).<br/>
<br/>
I picked up the required switches on the Tomcat site (<a href="http://jakarta.apache.org/site/idedev-rdtomcat.html">Setting up Tomcat for Remote Debugging</a>), and used the technique on a bunch of non-web apps. Also discovered you need to use the ant task <jvmargs> to make all this happen from ant.<br/>
<br/>
Eclipse is one rocking IDE, and it just keeps getting better. Setting up Remote Debugging is as simple as /Debug/Remote Debugging/New... Gotta love that. Give it the same port that you specified when lauching the remove JVM and you are in business.<br/>
<br/>
Extremely cool!&#x5d;&#x5d;&gt;</body>
<date>20 Nov 2003 09:04:22:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/12/03/1070491920000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Ultra lightweight http server</title>
<excerpt/>
<body><![CDATA[I'm developing some software that needs an embedded http server, and I've been looking around for tiny options. Give that it's all java, I've looked at tiny versions of tomcat, jetty, and other minimalist solutions. Most stuff weights in over a meg.<br/>
<br/>
But now I've found something just my size: 1 file! Check out <a href="http://elonen.iki.fi/code/nanohttpd/">Nanohttpd</a>. I put it into the system last night, subclassed it, and plugged in my own serve() routine in the descendant and bingo! Instant HTTP - and under a BSD license to boot.<br/>
<br/>
&#x5d;&#x5d;&gt;</body>
<date>04 Dec 2003 09:52:00:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/12/04/1070576395000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Embedded db advice?</title>
<excerpt/>
<body><![CDATA[I need to track down a small database for embedded use. I'm hearing that hsql gets a fair bit of traction, and I've read stuff about McKoi too.<br/>
<br/>
Anyone got any recommendations? The constraints are: (1) Must run in-process/embedded (2) Must support multiple tables (3) Must handle modest size dbs (eg 20 Mb) (4) If commercial, must not be royalty-based<br/>
<br/>
All options welcome!&#x5d;&#x5d;&gt;</body>
<date>05 Dec 2003 09:19:55:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/12/11/1071180356000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Loving hsqldb</title>
<excerpt/>
<body><![CDATA[Been in the marked for an embedded Java database technology and have started playing with <a href="http://hsqldb.sourceforge.net/">hsqldb</a>. I've gotta say it's a very nice little tool. Uses JDBC, writes to text files, and the SQL support is way beyond what I expected (including referential integrity!). Comes with a couple of nice little admin tools to boot!<br/>
<br/>
I've given it a hammering with <a href="http://jakarta.apache.org/jmeter/">JMeter</a>, and whilst it's nowhere near as performant as MySQL (~200 transactions/minute vs ~12000 transactions a minute on the same hardware with a 10 user load), for embedded apps it's just awesome. I'm wanting to use it as a scratch database for Unit testing which it will be ideal for. Great job guys!&#x5d;&#x5d;&gt;</body>
<date>12 Dec 2003 09:05:56:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/12/15/1071531162000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Powerfinger Rock Canberra</title>
<excerpt/>
<body><![CDATA[Ok. Not strictly Java, but caught <a href="http://www.powderfinger.com">Powerfinger</a> in Canberra last night on the Vulture Street tour. They guys are an Aussie act from Brisbane who've made it good on the world stage. Outstanding show... and definitely worth catching live if they hit your area.<br/>
<br/>
The support act, <a href="http://www.johnbutlertrio.com/">The John Butler Trio</a> were also sensational. I've got to get some of their stuff on shiny disc.<br/>
<br/>
Anyways, back to the 1's and 0's.&#x5d;&#x5d;&gt;</body>
<date>16 Dec 2003 10:32:42:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/12/16/1071614818000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Native code compilers for Windows?</title>
<excerpt/>
<body><![CDATA[We're developing a product that we'd like to offer as a download without the client needing to also download another 10 meg of JVM runtime. Anyone done any stuff with native code compilers on Windows? The app doesn't have a GUI (uses HTTP), so there's no need for Swing support.<br/>
<br/>
I know that <a href="http://www.excelsior-usa.com/jet.html">Excelsior</a> have a product, but it's unclear whether you *still* need to bundle a whole bunch of support DLLs there too.  I'm told gcc also supports some kind of Java compilation via gcj, but is that going to work on Windows? Or will I need to bundle a whole bunch of Cygwin stuff with it?<br/>
<br/>
Any war stories out there?<br/>
&#x5d;&#x5d;&gt;</body>
<date>17 Dec 2003 09:46:58:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2003/12/22/1072078213000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Anyone got Sitemesh working on Tomcat?</title>
<excerpt/>
<body><![CDATA[Looking at some presentation options for Struts, the frontrunners being Tiles and SiteMesh.<br/>
<br/>
I really like the idea of SiteMesh, even more so after playing with Tiles (which adds its own management problems into the equation with the requirement to edit tiles-defs.xml for each new page, and forcing you to author html fragments rather than real McKoy valid pages). Sitemesh look very elegant and ultra-low-maintence when adding new pages!<br/>
<br/>
Unfortunately, though, I can't Sitemesh to run under Tomcat (either 4.1.24 or 5.0.16). Both give the same deal:<br/>
<br/>
<pre><br/>
org.apache.jasper.JasperException: getOutputStream() has already been called for this response<br/>
...<br/>
at com.opensymphony.module.sitemesh.filter.PageFilter.applyDecorator(PageFilter.java:169)<br/>
</pre><br/>
<br/>
The readme makes noice about using jsp rather than html for page extensions, but even changing that just gives me..<br/>
<br/>
<pre><br/>
org.apache.jasper.JasperException: Cannot call getWriter() after getOutputStream()<br/>
</pre><br/>
<br/>
at the same line. The readme also notes that Sitemesh has issues on WebSphere, WebLogic, and other containers... so I may just be one of the unlucky ones.<br/>
<br/>
Anyways, I'm not doing anything tricky, just autodeploying the sitemesh-example.war that comes with the package.<br/>
<br/>
Anyone got it working on Tomcat? I'm playing with sitemesh-2.0.1.&#x5d;&#x5d;&gt;</body>
<date>22 Dec 2003 18:30:13:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/01/12/1073901332000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Finally on ISDN</title>
<excerpt/>
<body><![CDATA[After ages and ages on 28.8kb, I've finally managed to step up to 128kb ISDN (can't get ADSL or Cable in my area, so the options were Sat or ISDN.. and ISDN is much better pricing).<br/>
<br/>
Now to do some serious downloading of the latest version of every Java library imaginable...&#x5d;&#x5d;&gt;</body>
<date>12 Jan 2004 20:55:32:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/01/12/1073901527000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Tomcat 5.0.16 considered safe</title>
<excerpt/>
<body><![CDATA[Well, the upgrade from 4.1.26 to 5.0.16 was certainly painless. Location of XML deployment fragments changes in this version, but everything else looks pretty straightforward...  Stuts still runs... and sitemesh 1.5 is still a goer too.<br/>
<br/>
Can't wait to take advantage of the JSP 2.0 options....&#x5d;&#x5d;&gt;</body>
<date>12 Jan 2004 20:58:47:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/01/12/1073901669000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Cool Java Gantt Software</title>
<excerpt/>
<body><![CDATA[If you're looking for an open source Microsoft Project (minus the file compatibility), check out the very slick looking <a href="http://ganttproject.sourceforge.net/">GanttProject</a>. 100% Java, XML file format, and a very slick Swing UI (which says a lot coming from me!).<br/>
<br/>
Check it out!<br/>
<br/>
&#x5d;&#x5d;&gt;</body>
<date>12 Jan 2004 21:01:09:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/01/14/1074120131000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Our first staffer (and our Java Spamfilter)</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[Well, it's finally happened. Bytecode has employed its first non-Glen developer. Welcome <a href="http://www.bytecode.com.au/blogs/nick/">Nick Wheatstone</a>.<br/>
<br/>
For a while I've been tinkering away on a Java spam filter for the desktop (since I just can't find one that really does it for me). I've decided to put in some dollars and get the app to a commercial stage... actually first to get it working... and then to get it to a commerial stage ;-). We're also hoping to use the engine itself for a server product, but that's further down the road.<br/>
<br/>
Nick a sensational young developer from University of Canberra, who's relatively new to Java, but has plenty of developer runs on the board. He'll be blogging about his progress, so if you're new to Java or Spamfiltering, he'll have lots to share. We're hoping to ship a product by the end of June (and we'll be asking for some testers closer to the time).<br/>
<br/>
It's great times at Bytecode!&#x5d;&#x5d;&gt;</body>
<date>15 Jan 2004 09:42:11:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<tags></tags>
</blogEntry>

Importing 2004/01/15/1074152409000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Newbie Struts Question</title>
<excerpt/>
<body><![CDATA[Doing a fair bit of work with Struts at the moment, but there's a fairly basic question that still bugging me. What is the best strategy for handling generic success messages?<br/>
<br/>
So for example, say you've got an Action that does AddUser, one for EditUser, and one for DeleteUser.  Do you need to supply specific JSPs for each of the success results?<br/>
<br/>
At the moment, I've got something like:  addUser.jsp >> AddUserAction >> addUserSuccess.jsp if AddUserAction returns success (or back to addUser.jsp with an errors collection on failure if something wasn't quite right).<br/>
<br/>
But that means every JSP has a corresponding blahSuccess.jsp, which seems like a lot more editing than I'd like. How do people handle that in bigger apps? Do you use a generic success.jsp and pass in some kinda message telling the user all was fine?<br/>
<br/>
Ideas welcome!&#x5d;&#x5d;&gt;</body>
<date>15 Jan 2004 18:40:09:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/01/17/1074311212000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Java Hosting Recommendations</title>
<excerpt/>
<body><![CDATA[Anyone got any good recommendations for JSP hosting?<br/>
<br/>
I've heard good things about  <a href="http://www.kgbinternet.com/">KGBInternet</a>, but they've got fairly small traffic limits - but apparently very switched on as far as Java Web hosting goes, and terriffic support. By contrast, <a href="http://www.hostforweb.com/hosting_supreme.html">HostForWeb</a> offer a 50Gb limit, but only give you ONE tomcat context to play with - with extra monthly fees for each context that you add, and their turn around on answering emails is several days.<br/>
<br/>
Both have pretty good pricing at around $20/month USD.<br/>
<br/>
Anyone else got any good recommendations?&#x5d;&#x5d;&gt;</body>
<date>17 Jan 2004 14:46:52:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/01/21/1074673782000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Moved to Java hosting</title>
<excerpt/>
<body><![CDATA[Thanks to all the folk who made recommendations on JSP hosting providers. To summarise, I hear nothing but good things about <a href="http://www.kgbinternet.com/">KGBInternet</a> - pretty much total control of your Tomcat config, running on a private JVM for $20/month Canadian. People RAVE about the support they receive there, and the operators are very Java-savvy.<br/>
The only neg is the 1Gb traffic limit (which is probably heaps if you're just running a blog, but if you're offering downloads I think you'll get to that pretty quickly.<br/>
<br/>
The guys at <a href="http://www.webappcabaret.com/premium.html">WebAppCabaret</a> look pretty competitive too, giving you. 10Gb traffic, private VM, a couple of subdomains and a database for around $20US/month.<br/>
<br/>
I've ended up going with <a href="http://www.hostforweb.com/hosting_supreme.html">HostForWeb</a> simply because they give a 50Gb monthly allowance for $20USD/month. Even cheaper if you pay for 12 months, and at the current Aussie dollar exchange rate, I could get a year of hosting for about $22/month AUD.  Their biggest neg is that you only get one Tomcat context (on a shared VM) and basically no control over your config.<br/>
<br/>
You do however get 750Mb of disk, unlimited MySQL databases, unlimited subdomains, and a pretty smooth operation. I'll let you know how things pan out once I've tried deploying a Struts app or something.&#x5d;&#x5d;&gt;</body>
<date>21 Jan 2004 19:29:42:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/01/21/1074674751000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Matt Raible is the man!</title>
<excerpt/>
<body><![CDATA[I was checking out <a href="http://www.raibledesigns.com/page/rd">Matt Raible's</a> AppFuse code earlier today and geez that guy can write clean code!<br/>
<br/>
One very neat thing that caught my eye was also in his build script. Get this, he has an Ant task that buddles his FAQ, Release Notes, and HOWTOs directly from his Wiki into a local html file.<br/>
<br/>
Basically he uses the &lt;get&gt; task to a URL like http://yourwiki/wikitohtml.jsp?Install&ReadMe&FAQ&HowTo where the JSP must just piece together the various Wiki pages into a single HTML file. You've gotta love that!<br/>
<br/>
Another neat trick is to modify your log4j config to have a pattern like @@APPNAME@@ %c %p %d %m%n  and use the &lt;replace&gt; task to sub in your app name at build time. Very neat for when you're watching a Tomcat console logger!<br/>
<br/>
+1 to the Matt Raible fan club. His code rocks!&#x5d;&#x5d;&gt;</body>
<date>21 Jan 2004 19:45:51:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/02/10/1076399715000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>The Joy of JNI, DLLs, and XP</title>
<excerpt/>
<body><![CDATA[We've got an Applet that makes a JNI call to a DLL. Been working happily on several hundred Windows NT (don't ask) boxes out there for some time. Good good. Then we start testing against XP... and the core dumps begin...<br/>
<br/>
I've been using debug mode in VC++ and stepping through the whole call trace. All good.  Then I build a Release version of the DLL. Unlucky - crashes IE straight away. So I inserted a stack of OutputDebugString() in the DLL to see where it fails... and it fails in different locations on different invocations.. and sometimes it doesn't fail at all.<br/>
<br/>
So I linked against a static version of the C Runtime instead of a shared DLL version. No problems. Buggered if I know what the problem is. I know there are problems when you new() with one version and delete with a different one, so maybe that's got something to do with it...<br/>
<br/>
All this whole exercise proved to me was how much I *love* coding in Java. Memory allocation is *such* a deal to track down problems with.<br/>
<br/>
In other news, <a href="http://www.jniwrapper.com/index.jsp">JNIWrapper</a> looks like an interesting little product. When we're looking at Windows integration for our SpamFilter product I'll definitely be evaluating!&#x5d;&#x5d;&gt;</body>
<date>10 Feb 2004 18:55:15:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/02/12/1076585403000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Commercial Swing Components?</title>
<excerpt/>
<body><![CDATA[I'm interested in hearing any reviews from people who've used commercial (or otherwise) Swing component libraries. I'm after a slick set of controls that are easy to use and visually spot on. Surprisingly, Google doesn't seem to be turning up too many Swing component libraries out there.<br/>
<br/>
The <a href="http://www.infragistics.com/products/jsuite_portal.asp">JSuite</a> stuff looks pretty darn nice... but fairly expensive.  I'd love to get a nice OutlookBar style guy, as well as an ultra-flexible grid control... and I'm willing to pay the money if it's something the company can re-use.<br/>
<br/>
So, any of you guys used any commercial Swing stuff? I'm all ears...&#x5d;&#x5d;&gt;</body>
<date>12 Feb 2004 22:30:03:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/02/18/1077141599000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Cool Swing-ish Stuff</title>
<excerpt/>
<body><![CDATA[After a ton of interesting feedback last time, I've scoped out some interesting Swing bits and pieces. I've got most of what I needed, but here's the summary so far:<br/>
<ul><br/>
<li>JGoodies <a href="http://www.jgoodies.com/freeware/forms/index.html">Forms</a> for layout management - I finally have found a layout manager that I understand and that does what I want!</li><br/>
<li><a href="http://www.l2fprod.com/software/l2fprod-common/index.php">l2fProd</a> provides exactly the button bar I was after (very Mozilla-ish)</li><br/>
<li><a href="http://www.ej-technologies.com/products/exe4j/overview.html">exe4j</a> is a very polished little exe maker for Windows to give you that nice icon/launch option. </li><br/>
</ul><br/>
<br/>
Still looking for a nice grid... but something will come up...<br/>
<br/>
Loving the Swing... Hope to have some screenshots to post of our new Spam filter by the end of the month. Still early days, but the pieces are coming together.&#x5d;&#x5d;&gt;</body>
<date>19 Feb 2004 08:59:59:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/02/27/1077846479000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Icons for Swing Apps</title>
<excerpt/>
<body><![CDATA[We're chasing a few icons for our Swing GUI, and I'm surprised about the relatively few sites that do bundles of commercial icons. Most people will price you *per icon*, but that ends up being quite a big figure (in the order of $50USD per icon).<br/>
<br/>
Anyways I'm looking for a bundle that I can buy for the Bytecode that we can use on future projects too, and I've shortlisted the candidates to two options:<br/>
<br/>
<ul><br/>
<li><a href="http://www.iconexperience.com/">IconExperience</a> who have some fantastic icon bundles and who specialise in the Java deal (these guys did the Alloy L&F); and </li><br/>
<li><a href="http://www.glyfx.com/">glyFX</a> who also do some great bundles (and seem to be an Aussie company - yeh!) - but who don't have the same range as IconExperience.</li><br/>
</ul><br/>
<br/>
Sun also supply a bunch of icons at the <a href="http://java.sun.com/developer/techDocs/hi/repository/">Look and Feel Repository</a>... but they look pretty dated, and really only suite the Metal Look and Feel.<br/>
<br/>
So, anyone else recommend any good icon packs out there? I don't mind spending the dollars - especially for the standard of icons that IconExperience and glyFX are producing. &#x5d;&#x5d;&gt;</body>
<date>27 Feb 2004 12:47:59:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/03/22/1079985366000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>MockEJB - Testing Outside the Container</title>
<excerpt/>
<body><![CDATA[I've never really had much joy unit testing EJBs. I've had a look at Cactus, but never found it that easy to understand (I mean, testing inside the container has to be a good thing for accuracy, but it has to be a pain to regularly deploy test suites to your container on every run?). Inevitably I end up give up after stuffing around for a while.<br/>
<br/>
Anyways, I've since discovered <a href="http://www.mockejb.org/">MockEJB</a> and it is one very neat little mock library for EJBs. Getting a basic test of my SLSB outside the container was a snap... and not it just runs as part of my standard JUnit test suite (without a stack of dependencies on other infrastructure being up and running).<br/>
<br/>
Another neato feature is a relatively complete Mock JNDI Context. I'm registering little local datasources against the JNDI names the bean is expecting and it works just great.<br/>
<br/>
The other great thing about it is that it comes with some very nice example code of common things you're likely to want to do, and enough documentation to get you hitting the ground running. Recommended. Great job Alexander!&#x5d;&#x5d;&gt;</body>
<date>23 Mar 2004 06:56:06:0 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2004/05/10/1084169515000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Loving MockRunner</title>
<excerpt/>
<body><![CDATA[I've blogged earlier about my love for <a href="http://www.mockejb.org/">MockEJB</a>... and I've since come across <a href="http://mockrunner.sourceforge.net/index.html">MockRunner</a> which not only lets you test EJBs outside the container... it lets you test Servlets, Tags and Struts apps to boot (it actually uses MockEJB to do the underlying EJB stuff, but gives you a nice high level facade to make it happen). Comes with a mock JDBC layer as well (to mock in your DB implementation).<br/>
<br/>
I have a servlet which called a session bean, passing in some info gathered from the HttpSession scope, and now I've got unit tests for the whole process running entirely outside the container. You've just gotta love that.  The best part is that it passes the Glen Smith "just works" test - up and running within the hour courtesy of some nice example code from their web site.<br/>
<br/>
A little heavy on the dependent jars (commons-just-about-everything.jar), but we don't have to ship em right? Just for for our Ant test classpathref.<br/>
<br/>
Good stuff, lads. A very neat library. &#x5d;&#x5d;&gt;</body>
<date>10 May 2004 16:11:55:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2004/05/17/1084779102000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>BeanShell? Did you say...</title>
<excerpt/>
<body><![CDATA[Ok, so I know the world is in the grip of Groovy madness right now, but for the rules engine of our little spam filter app I'm leaning towards <a href="http://www.beanshell.org/">BeanShell</a>.<br/>
<br/>
The big sell for me is the lightweight story - less than 200k for the whole thing - including Swing editor - with no other dependencies. Plus I don't really need to learn any new syntax! It's groovy in it's own way ;-)<br/>
<br/>
The other thing I really like is that it's very straightforward to extend the language with your own commands. Need a stripHtml command for a spam rule? Piece of cake. Define a stripHtml.bsh, fill it with:<br/>
<br/>
<code><br/>
import org.apache.regexp.RE;<br/>
<br/>
stripHtml( String textToStrip ) {<br/>
	RE r = new RE("<[^>]+>");<br/>
	String replaced = r.subst(textToStrip, "", RE.REPLACE_ALL);<br/>
	return replaced;<br/>
}<br/>
</code><br/>
<br/>
Then just use a <code>stripHtml();</code> in your scripts wherever you like (with an <code>importCommands("/path/to/commands"); </code> somewhere in your setup). Good to go.  Simple. Straightforward. Small. Just works.<br/>
<br/>
I'm doing a combo talk with <a href="http://www.madbean.com/blog/">Matt</a> next month at our <a href="http://www.cjugaustralia.org">Canberra Java User Group</a> which is going to be "Java Scripting - Groovy and Beanshell" - he's doing the Groovy bit, I'm doing the Beanshell bit. Should be a fun time. If you're in town, drop by!&#x5d;&#x5d;&gt;</body>
<date>17 May 2004 17:31:42:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/05/21/1085178429000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>XML Pull Parsers Zoom!</title>
<excerpt/>
<body><![CDATA[I've been playing around with profiler technologies, and recently started having a look at <a href="http://www.ej-technologies.com/products/jprofiler/overview.html">JProfiler</a> - attaching it my ejb running insider JBoss and then running my unit tests. The interesting thing was that I was burning a ton of time inside my XML parser (dom4j).<br/>
<br/>
Some of that time I can put down to being a little too keen on XPath, but a good swag was inside <i>parseDocument</i>, so it's not like I'm going to be able to tune that!<br/>
<br/>
Anyways, just for kicks, I started to have a look at <a href="http://www.extreme.indiana.edu/xgws/xsoap/xpp/mxp1/">XPP3</a> - one of these "XML Pull Parser" technologies. I notice that <a href="http://xstream.codehaus.org/">XSteam</a> have switched to using it - so I thought it was worth a go.<br/>
<br/>
Put some metrics in my unit test for the XML->Object conversion and the stats went from 407 ms (dom4j) to 49 ms (XPP). I love dom4j's API - but these lightweight parsers sure are zippy. For time critical portions of code, I'm going to look at turning them with XPP.<br/>
<br/>
Worth a look.&#x5d;&#x5d;&gt;</body>
<date>22 May 2004 08:27:09:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
</blogEntry>

Importing 2004/06/06/1086507046000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Now hosting on Linode with Pebble!</title>
<excerpt/>
<body><![CDATA[<p>
I'm now hosting my blog on my own <a href="http://www.linode.com">Linode</a> which is basically a hosted Unix service where you have root access. Fantastic stuff. I've installed my own DNS and mail servers, an instance of Tomcat, my <a href="http://wiki.bytecode.com.au">wiki</a> (a <a href="http://www.jspwiki.org/">JSPWiki</a>) and now some new Java blogging software - <a href="http://pebble.sf.net">Pebble</a>. If you're looking for Java hosting ... and don't mind getting dirty with a little Linux, you can't do better than root access! Ultimate flexibility.
</p>
<p>
Now, the only thing left to do is port my old MoveableType content over to Pebble, which I'll get around to over the next week or so. Or let me know if anyone's written a script to do the same.
</p>
<p>I've gotta say that Pebble looks very neat. It's got all the features I need in a blog, is 100% Java, and it's well documented. Installation was a 5 minute process (and that's the multi-user version - cause <a href="http://blogs.bytecode.com.au/nick">Nick</a> will be here soon too). Fantastic stuff.
</p>&#x5d;&#x5d;&gt;</body>
<date>06 Jun 2004 17:30:46:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Now hosting on Linode with Pebble!</title>
<body><![CDATA[Hello Glen,

How much RAM did you get with your Linode account? (They offer 64M, 128M, etc.)

I once had a virtual BSD host, and it was great for running services written in Lisp or Smalltalk, but I could not run Tomcat due to memory limitations.

-Mark&#x5d;&#x5d;&gt;</body>
<author>Mark Watson</author>
<email>markw@markwatson.com</email>
<website/>
<ipAddress/>
<date>07 Jun 2004 01:31:41:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Now hosting on Linode with Pebble!</title>
<body><![CDATA[<p>
Mark, I went for the minimum option. $USD20/month for 64Mb of RAM and a couple of gig of disk. I setup Debian with 512 MB of swap, but everything else was pretty vanilla. 
</p>
<p>I'm only really running Tomcat, MySQL, DNS and mail, so maybe that's why I've got space. Or maybe they've just upgraded their services lately. Anyways, things seem pretty responsive from the shell. We'll see how it goes over time.
</p>

&#x5d;&#x5d;&gt;</body>
<author>Glen</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress/>
<date>07 Jun 2004 06:32:47:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Now hosting on Linode with Pebble!</title>
<body><![CDATA[Hi Glen,
We're using Linode as well, but noticing that the JVM that Tomcat runs in seems to grow in size with time.

Have you noticed anything, or have any strategies to reduce the amount of memory that Tomcat/JVM uses on Linode? (Are you using a special JVM, or any special configurations?)

Thanks,
&#x5d;&#x5d;&gt;</body>
<author>Andrew McGhee</author>
<email>andrew.mcghee@geniushealth.com</email>
<website>http://www.geniushealth.com</website>
<ipAddress/>
<date>09 Jul 2004 11:25:54:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/06/08/1086732572000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>New Company Logo</title>
<excerpt/>
<body><![CDATA[<p>
This year I'm really making an effort to get Bytecode's image up to scratch as an Aussie Java company, so I've tracked down a sensational Aussie Web Designer - <a href="http://www.themaninblue.com">Cameron Adams</a> to help lift our image.
</p>
<p>
First stop was getting the corporate id sorted out. Cameron has put up with my incessant tweaking and come up with something that I just love. You read it first here! Check it out (the black is his recommended option and I agree):
</p>
<p>
<img src="./images/BytecodeLogoWhite.jpg"/> <br/>
<img src="./images/BytecodeLogoBlack.jpg"/> <br/>
</p>
<p>
I can highly recommend Cameron. Very reasonable rates, easy to work with, and fantastic output. You should see the new web site he's putting together for us. Two words: Sen-sational. If you're in the market for a CSS specialist or graphic designer, check out his <a href="http://www.themaninblue.com">blog</a>.
</p>

&#x5d;&#x5d;&gt;</body>
<date>09 Jun 2004 08:09:32:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2004/06/13/1087110402000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Porting my MoveableType data to Pebble</title>
<excerpt/>
<body><![CDATA[<p>
I've just spent the arvo moving my data over from MoveableType to Pebble, and after some gotchas it should all be good. 
</p>
<p>I took a longer route than most since I had to go via phpMyAdmin to get an XML dump of my MT data first (since I don't have shell access to the mysql box, and I can't get to it from remote hosts).
</p>
<p>The basic operation was:
<ul>
<li>Work out the naming of Pebble entries (all good, turns out to be a simple Calendar.getTimeInMillis() deal)</li>
<li>Work out the file format of Pebble entries (only two gotchas here - some custom formatting of Date entries which can be handled by SimpleDateFormat, and the CDATA sections in blog comments - where MT used PCDATA here. There were also some issues in swapping MT cr/lfs with first class br elements, but that's another story).</li>
<li>Write some <a href="http://www.xmlpull.org">XML Pull</a> to make the glue happen.</li>
<li>I also learned about File.makeDirs() which turns out to be a very useful little comment for making all required parent directories to a particular location. Useful, say, if you need to create /2004/06/13/ in a directory tree. BTW, took me a while to work out the "06" story, and not "6" which causes all sorts of pebble issues when trying to browse to a particular entry.</li>
</ul>
</p>
<p>
So I have to say it again, XML Pull Parsers are very, very handy for hacking together some parsing code. The XML stuff was the easiest part of the port - which was not always the case for me in the past. And, of course, <a href="http://www.simongbrown.com/pebble.html">Pebble</a> - just rocks.
</p>&#x5d;&#x5d;&gt;</body>
<date>13 Jun 2004 17:06:42:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2004/06/20/1087770213000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>SAX, Stacks and XML Parsing Patterns</title>
<excerpt/>
<body><![CDATA[<p>
I used to be a hardcore DOM-style man, and <a href="http://www.dom4j.org">dom4j</a> remains my favourite XML API, but these days I've been doing a lot of performance and load sensitive stuff in the middle tier, which means that I tend to go for streaming solutions like <a href="http://www.xmlpull.org">XML pull</a> and SAX. My basic lesson has been that streaming = performance. I mean, the numbers just don't lie - we're talking at least 3 times faster than any DOM-based solution in my benchmarking, often up to 10 times faster - depending on what you're doing. The other big plus for SAX is that you get it for free with 1.4 so you don't need to bundle stuff.
</p>
<p>The painful thing about SAX (and XML pull), which puts most people off, is that you end up tracking your own state while processing things. I used to end up setting a whole bunch of booleans "nowInsideName = true", "nowInsideAddress = true", then I bumped into a guy at our local <a href="http://www.cjugaustralia.org">JUG</a> who gave me a killer tip "Why don't you use a Stack for state tracking?". Duh! What a great idea.
</p>
<p>So here's the gist:
<ul>
<li>When you hit a start tag, push it onto the stack; </li>
<li>When you hit an end tag, pop the stack; </li>
<li>When you hit an "characters" or "text" entry, do a peek of the stack to see what element you're in. </li>
</ul>
</p>
<p>
When I wrote the little app that converted my MoveableType XML over to Pebble blog format, I used this "Stack" type approach. I used XML pull, but exactly the same concepts work for SAX. Here's an extract of the source:
</p>
<pre>
        Stack tagStack = new Stack();
        int eventType = xpp.getEventType();
        while (eventType != xpp.END_DOCUMENT) {
            if (eventType == xpp.START_TAG) {
                tagStack.push(xpp.getName());

            } else if (eventType == xpp.END_TAG) {
                tagStack.pop();
                if (xpp.getName().equalsIgnoreCase(mte.ENTRY_TAG)) {
                    mtList.add(mte);
                    mte = new MoveableTypeEntry();
                }

            } else if (eventType == xpp.TEXT) {
                String tagName = (String) tagStack.peek();
                String tagValue = xpp.getText();
                if (tagName.equalsIgnoreCase(mte.TITLE_TAG)) {
                    mte.setEntryTitle(tagValue);
                } else if (tagName.equalsIgnoreCase(mte.TEXT_TAG)) {
                    mte.setEntryText(tagValue.replaceAll("\n", "<br/>\n"));
                } else if (tagName.equalsIgnoreCase(mte.DATE_TAG)) {
                    mte.setEntryCreatedOn(tagValue);
                }
            }
            eventType = xpp.next();
        }
</pre>

<p>There are some constraints on this approach, right? You have to assume that you know some stuff about the documents structure (validating against a DTD can help here!), and in the example above, I don't cater for elements of the same name in different portions of the document (Although you can do a <code>Stack.search(parentTag);</code> to find out that info if you need to confirm it).
</p>
<p>Overall, I reckon this is a good way to go for SAX and pull type processing. I don't know what other ways people do this sort of stuff, but it's certainly a lot more maintainable than state tracking with a billion boolean fields!
</p>&#x5d;&#x5d;&gt;</body>
<date>21 Jun 2004 08:23:33:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2004/06/22/1087895949000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>My New Java Stickpin! (and use of the Java logo)</title>
<excerpt/>
<body><![CDATA[<p>
Been there, done that, got the stick pin. I'm now officially a Java Certified Programmer - and I've got the card to prove it! It was certainly a fun exam, and it took me the whole two hours just to get the thing finished. I probably should have studied harder, but hey, I passed, and I'm very happy. Also learned a lot more than any man should about scope rules relating to inner classes, and more esoteric uses of the wait()/notify() calls. 
</p>
<p>
<img src="./images/JavaStickPin.jpg"/>
</p>
<p>
The kicker is that I actually did this cert just to put the logo on my Business Card (hey, our company is called Bytecode, it would be nice to have a Java logo on it!). To actually *use* the logo, however, I've got to sign a strict license agreement which, in part, requires me to also place the following phrase on my card under the logo:
<pre>The Sun Certified Professional Logo is a trademark of Sun Microsystems, Inc.</pre>
Now, I'm all for protecting your brand, but come on, we're talking a lot of card real estate here. There's also rules on where on your card the logo can be placed, how big it must be ("it must appear smaller than your name and personal information combined"). Serious!  Looks like I'll be sticking with the <a href="./images/BytecodeLogoBlack.jpg">Bytecode dog</a>!
</p>
<p>I still highly recommend the certification deal. Probably won't get you a job, and it's probably not even that good measure of your technical skill (I reckon about 50% are "trick" questions - where the most natural answer is actually wrong because of some subtle complexity/variable shadowing/omission of a break; or whatever) - but it is stretching, and does get you familiar with some less used features of the language (ask me about signed and unsigned bit shifting operators. Go on. Anything. I dare you!).
</p>&#x5d;&#x5d;&gt;</body>
<date>22 Jun 2004 19:19:09:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2004/06/23/1087966067000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Relative URI can not be resolved without a document URI</title>
<excerpt/>
<body><![CDATA[<p>
This post is just a placeholder so I can google for this SAX error later and remember how I fixed it. 
</p>
<p>
You get one of these errors from SAX when you have an XML document that uses a relative reference to its DTD. So, say you've got a <code>filter-config.xml</code> which contains something like:
<pre>
    &lt;!DOCTYPE security PUBLIC "-//Bytecode Pty Ltd//Spam Filtering Components//EN" 
        <b>"filter-config.dtd"</b> &gt; 
</pre>
And you've put <code>filter-config.dtd</code> in the same directory as <code>filter-config.xml</code>. Fair enough. The only problem is that when you try and feed it to SAX, you get shafted with an error like:
<pre>
    org.xml.sax.SAXParseException: Relative URI "yourfile.dtd"; can not be resolved 
        without a document URI.
</pre>
Which wasn't really what you had in mind. The problem here is that you are trying to access the file like this:
<pre>
    xmlReader.parse(new InputSource(new FileReader(configFile)));
</pre>
Which SAX thinks is unreasonable since it can't work out where exactly things are supposed to be loaded from (in network terms). 
</p>
<p>
What you want to do is to feed a URL to your InputSource, with something like this:
<pre>
    URL configUrl = new File(configFile).toURL();
    InputSource is = new InputSource(configUrl.toString());
    xmlReader.parse(is);
</pre>
SAX can use the URL in resolving the DTD reference and life is good again. So if you're having problems with finding your DTD (even though it's in the same directory), go the URL path.
</p>
&#x5d;&#x5d;&gt;</body>
<date>23 Jun 2004 14:47:47:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Relative URI can not be resolved without a document URI</title>
<body><![CDATA[THANKS :=) !!!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>213.135.241.130</ipAddress>
<date>13 Jul 2005 02:11:15:518 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/06/30/1088600561000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Exceptions crossing Tiers (and using ResourceBundles with Exceptions)</title>
<excerpt/>
<body><![CDATA[<p>Well, I've been doing tons of reading on exception handling to try and develop a standard set of practices. I've got two immediate problems that I need to address and haven't found much advice on:
</p>
<p><b>1. Exceptions Crossing Tier Boundaries:</b> Many of our systems are n-Tier and exceptions visible in the most remote layers aren't necessarily available in the presentation tier. What to do? 
</p>
<p>I want to preserve the stack trace if at all possible, so I'm thinking of wrapping just the stack trace in another (presentation-tier-visible) exception and passing that on.
</p>
<p>Alternatively, I can just log the exception (and stack trace), then rethrow a brand new exception to the client (with some sort of user-meaningful error message).
</p>
<p><b>2. Externalising Error Codes and Messages:</b> From a helpdesk point of view, it would be nice to be able to associate a numeric id with each exception. Then a client can report <i>"Error 67: Internal Data Store Problems" appears on my screen</i>, but the helpdesk knows that error 67 actually relates to incorrect database credentials, or whatever. 
</p>
<p>My initial thoughts are maybe to use something like a ResourceBundle, but maybe some custom descendant like a JDBCResourceBundle - where I could keep all my messages in a database (except for if the database fails ;-). My code could then pass a constant like DB_CREDENTIAL_FAILURE to the bundle and retrieve a nice-ish message like "Internal Data Store problems have been encountered talking to server {0}." And do some nice MessageFormat calls to tidy things up. 
</p>
<p>Anyways, I'm interested to hear what you guys are doing with Cross-Tier exceptions and externalising Error strings. All ideas welcome.
</p>&#x5d;&#x5d;&gt;</body>
<date>30 Jun 2004 23:02:41:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Exceptions crossing Tiers (and using ResourceBundles with Exceptions)</title>
<body><![CDATA[We have been using logging errors and identifying them with error codes that end-users can report to us in our new application. In addition, an e-mail is sent whenever an error occurs (unless the error is with the mailing itself). 

This has been working great for us and cut debugging time by multiple factors.  &#x5d;&#x5d;&gt;</body>
<author>Eddy Young</author>
<email>jeyoung@priscimon.com</email>
<website>http://coding.mu</website>
<ipAddress/>
<date>01 Jul 2004 03:24:36:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/07/19/1090275801000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Database caching in Struts apps</title>
<excerpt/>
<body><![CDATA[<p>
In a JSP, it's easy enough to implement a caching strategy, since there's a wealth of cool caching taglibs that will help you out. But what about Struts apps?
</p>
<p>
In a struts app, all your database logic is accessed via the action (or more typically via a DAO type pattern in the action, but you get my gist). So, how do you implement caching in the action?
</p>
<p>I guess you could roll your own by keeping a private Date field of the last time you did a lookup (even keep that in your base action class), but it's not that clean.
</p>
<p>I've heard good things about <a href="http://jcache.sf.net">JCache</a> - that it can help with this sort of stuff. So I'll be having a look over the next week or so. Anyone else have any good pointers for this type of scenario?</p>&#x5d;&#x5d;&gt;</body>
<date>20 Jul 2004 08:23:21:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Database caching in Struts apps</title>
<body><![CDATA[Try OSCache - http://www.opensymphony.com.  I've used it to get 300%+ performance boosts :)&#x5d;&#x5d;&gt;</body>
<author>Morgan</author>
<email>morgan.catlin@valtira.com</email>
<website>http://www.valtira.com</website>
<ipAddress/>
<date>21 Jul 2004 00:58:53:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Database caching in Struts apps</title>
<body><![CDATA[Hmm, if you are using Struts then caching of Data should be in the Model (data) layer and not in the action, so put it in your DAO (iBaits and Hibreanate do caching).

.V&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress/>
<date>21 Jul 2004 13:59:43:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Database caching in Struts apps</title>
<body><![CDATA[I disagree - I'd say many times you can just stick with caching parts of the view - and this is where OSCache comes in (esp. its taglibs)&#x5d;&#x5d;&gt;</body>
<author>Grzegorz Mucha</author>
<email/>
<website/>
<ipAddress/>
<date>21 Jul 2004 15:21:34:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Database caching in Struts apps</title>
<body><![CDATA[Thanks for the suggestions guys. I guess I'm less interested in JSP cacheing, and more interested in caching the actual DAO work which happens from calls originating in the action. <p/>

Anyways I've come across a great resource at <a href="http://www.manageability.org/blog/stuff/jdbc-proxy-drivers">Manageability</a> which gives me heaps of food for thought.&#x5d;&#x5d;&gt;</body>
<author>Glen</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress/>
<date>21 Jul 2004 20:48:20:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/08/24/1093386612000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Why is there no J2ME stack for PocketPC?</title>
<excerpt/>
<body><![CDATA[<p>
Every few months I Google for a J2ME stack for Pocket PC. Palm has one, why has no other vendor (Sun included) committed to the bigger handheld market? Apparently they had an early version of the stack for WinCE, but later support was dropped. Maybe licensing issues?
</p>
<p>
I know that phones are definitely the ultimate mass market, but PDAs offer such a rich GUI, it screams to be taken advantage of. I know there's always <a href="http://www.superwaba.com">Superwaba</a>, which I may yet have a play with since it seems to really be coming along. The early versions I played with had a horrible GUI, and couldn't use integrated handwriting/keyboard inputs, but I've heard things are pumping in that community, so I'm still tempted.
</p>
<p>
IBM have some kind of Websphere product for Pocket PC too, so I might suss that out as well. I know there's a commercial offering out there too, but why develop an app that you can't share with anyone unless they purchase their own Runtime? Superwaba is looking inviting.
</p>

&#x5d;&#x5d;&gt;</body>
<date>25 Aug 2004 08:30:12:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Why is there no J2ME stack for PocketPC?</title>
<body><![CDATA[Hm, you could take KaffeCE, which is a kaffe port to WindowsCE, merge it into the main Kaffe tree, and combine it with me4se for the ME apis. Or ask the kangaroo developers for their Kaffe/ME sources and work from that.
<p>
cheers,
dalibor topic&#x5d;&#x5d;&gt;</body>
<author>Dalibor Topic</author>
<email>robilad@kaffe.org</email>
<website/>
<ipAddress/>
<date>25 Aug 2004 22:01:08:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/08/27/1093597803000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Cool Plugin: JAR Class Finder</title>
<excerpt/>
<body><![CDATA[<p>
I've been wanting one of these for ages! You know the name of the class, but not which jar it lives it (I've always had problems finding the jar containing the JNDI naming provider for Websphere 4/5 - especially with about 6 different IBM JDKs on my PC!)
</p>
<p>
This <a href="http://www.alphaworks.ibm.com/tech/jarclassfinder">Jar Class Finder plugin</a> is just what I was looking for! Search in a given directory (and subdirectories) for Jars/Zips/properties files containing the given Class. Integrates with a nice little toolbar button, and a nice tabular view of the matching files. 
</p>
<p>
Sensational piece of work. This is going to be a standard part of my toolkit forever! Great find.
</p>&#x5d;&#x5d;&gt;</body>
<date>27 Aug 2004 19:10:03:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2004/09/01/1094036441000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Pebble 1.5.1 - Slick and smooth</title>
<excerpt/>
<body><![CDATA[<p>
Upgraded from Pebble 1.4 to the slick new Pebble 1.5.1. If you're in the market for some nice Java blogging software, I can recommend Pebble very highly. Easy to install, great interface, and you can manage the whole thing via the web. Great stuff, Simon!</p>
<p>For those looking to upgrade, things went fairly smoothly. Some of the entries previously in web.xml seem to have migrated to a properties file in WEB-INF/classes, but that probably only affects you if you run in multiuser mode.
</p>
<p>I had enormous performance hits on my <a href="http://www.linode.com/">64Mb Linode</a> the first time I hit any page (must the JSPs compiling for the first time). By serious I mean: type a URL, wait 90 seconds, get a page. But once that's done once everything's working just great. I love the slick new colour scheme, and the new stats page is much nicer (showing Google hits as the terms rather than the raw URL, ditto for the RSS hits). </p>
<p>Worth the upgrade. Can't wait for the new Swing authoring app that's coming with 1.6, that'll be a blast!</p>&#x5d;&#x5d;&gt;</body>
<date>01 Sep 2004 21:00:41:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Pebble 1.5.1 - Slick and smooth</title>
<body><![CDATA[Thanks Glen - hope you like the even slicker scheme in 1.6 (<a href="http://www.simongbrown.com/blog/">for example</a>) and the new logging features that make gathering stats even easier. :-)&#x5d;&#x5d;&gt;</body>
<author>Simon Brown</author>
<email/>
<website>http://www.simongbrown.com/blog/</website>
<ipAddress/>
<date>03 Sep 2004 02:29:44:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Pebble 1.5.1 - Slick and smooth</title>
<body><![CDATA[Thanks Glen - hope you like the even slicker scheme in 1.6 (<a href="http://www.simongbrown.com/blog/">for example</a>) and the new logging features that make gathering stats even easier. :-)&#x5d;&#x5d;&gt;</body>
<author>Simon Brown</author>
<email/>
<website>http://www.simongbrown.com/blog/</website>
<ipAddress/>
<date>03 Sep 2004 02:31:48:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/09/13/1095112694000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Migrating from Tomcat to Jetty</title>
<excerpt/>
<body><![CDATA[<p>
I've been having ongoing hassles with Tomcat 5 on my 64Mb <a href="http://www.linode.com/">Linode</a> - and it's the only software on that box that's been unreliable. <p/>
After getting sick of killing the thing off, I've made the jump to <a href="http://jetty.mortbay.org/jetty/index.html">Jetty</a>. It's smaller, faster, and hopefully more robust. Configuration is a snack - once you workout that the XML format just mirrors the API calls it support. My subdomains are working just great, but now I just need to work out how to configure the root context. BTW Jetty starts in around 4 seconds. Nuff said.
<p/>
Pebble even ships with <a href="http://pebble.sourceforge.net/docs/installation.html">instructions</a> on how to configure Jetty for Pebble use. 
<p/>
And best of all, it's a Aussie product. Aussie, Aussie, Aussie, Oi, Oi, Oi!!!
</p>&#x5d;&#x5d;&gt;</body>
<date>14 Sep 2004 07:58:14:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Migrating from Tomcat to Jetty</title>
<body><![CDATA[If your Linode was running on RH 9 (or something based on RH 9), you needed the usual LD_ASSUME_KERNEL=2.4.1 environment variable. Don't know if that was your problem, but it's quite likely. For the startup time issue, you can remove the admin webapp if you're not using it.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress/>
<date>14 Sep 2004 23:54:54:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Migrating from Tomcat to Jetty</title>
<body><![CDATA[Thanks dude. I'm actually running on very lean and mean Debian. I wasn't aware of the env variable. Thanks for the tip. <p/>
But I've gotta say Jetty runs *heaps* faster than Tomcat on this config. I'll wait to see how long it stays up.&#x5d;&#x5d;&gt;</body>
<author>Glen</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress/>
<date>15 Sep 2004 07:37:52:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/09/14/1095153317000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Commercial-friendly Embedded Db Options</title>
<excerpt/>
<body><![CDATA[<p>
For our little spam filter app, we've been evaluating embedded storage options. For commercial apps, the options are surprisingly few. HSQL and McKoi are nice but neither sports a commercial-friendly license. Axion shows a lot more promise (but it's dependent on an older version of commons-collection).
</p>
<p>
Of the commercial options, you've got <a href="http://daffodildb.com/">Daffodil</a> and <a href="http://www.objectdb.com/">ObjectDb</a> which both look very good, but have prohibitivly high <b>per seat</b> licensing options - which is no good for a desktop app. Ditto for <a href="http://www.borland.com/jdatastore/">JDataStore</a>. And <a href="http://www.pointbase.com/">Pointbase</a> seems to have their download links broken. I've filled out their forms numerous times, but it still won't let me download an Eval copy. So they're out too. If that's their download approach, their support is probably going to be big trouble.
</p>
<p>
One left-field option is <a href="http://boilerbay.com/infinitydb/">InfinityDb</a> which is a non-relational BTree-based API that <a href="http://www.madbean.com/">Matt</a> recommended. Unusual API, but it's got a decent royalty-free price. It stores it's data compressed. It's incorruptable. The schema is dynamically updatable (so no version probs). And the support is just wonderful. I just received a two-page reply from their support giving numerous options for my implementation problem. 
</p>
<p>
So, anyone out there using an Embedded DB in their commercial app? What have you had good experience with?
</p>&#x5d;&#x5d;&gt;</body>
<date>14 Sep 2004 19:15:17:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Commercial-friendly Embedded Db Options</title>
<body><![CDATA[<p>Derby ( http://incubator.apache.org/derby/ ) is on the ramp up for their first open source binary release. Svn HEAD is very stable from what I hear. Right now it is only really usable as an embedded DB as IBM chose not to release network drivers with it, only embedded drivers. I expect this will be fixed quickly.
</p>
<p>
-Brian
</p>&#x5d;&#x5d;&gt;</body>
<author>Brian McCallister</author>
<email>brianm@apache.org</email>
<website>http://blog.skife.org/</website>
<ipAddress/>
<date>14 Sep 2004 21:57:10:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Commercial-friendly Embedded Db Options</title>
<body><![CDATA[You can get a commercial license for McKoi which isn't very costlh at all. You can contact them for details and they're very helpful. The source code is also quite readable with many comments and relatively easy to get into if you need to make some changes.
Daffodil seems to be a product with many problems for the testing that we've done and it's quite slow, so I'd really not consider it.
Derby's transactional model leaves much to be desired (based solely on locking), so I'd stay away from it too. Also, it has been actively crippled when IBM adapted it from Cloudscape.&#x5d;&#x5d;&gt;</body>
<author>Geert Bevin</author>
<email>gbevin@uwyn.com</email>
<website>http://uwyn.com/blog</website>
<ipAddress/>
<date>14 Sep 2004 22:27:41:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Commercial-friendly Embedded Db Options</title>
<body><![CDATA[There is db4o which is an object database that works well in-memory. There licensing structure is flexible.&#x5d;&#x5d;&gt;</body>
<author>Martin Crawford</author>
<email>m.crawford@bemisguided.com</email>
<website>http://www.bemisguided.com/</website>
<ipAddress/>
<date>14 Sep 2004 22:39:20:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Commercial-friendly Embedded Db Options</title>
<body><![CDATA[<p>I'm not sure what all of your criteria are for selecting an embeddable database but you might want to check out <a href="http://www.sleepycat.com/products/je.shtml">Berkeley DB, Java Edition</a>.  It uses a B+tree in memory coupled with an LFS-based persistent store.&#x5d;&#x5d;&gt;</body>
<author>John D. Mitchell</author>
<email>johnm-blogs@non.net</email>
<website>http://today.java.net/pub/au/9</website>
<ipAddress/>
<date>15 Sep 2004 01:55:25:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Commercial-friendly Embedded Db Options</title>
<body><![CDATA[You've lost me on HSQLDB. It appears to just be a standard BSD license. How much more commercial friendly could you want?

I'm not trying to be argumentative, but I use BSD licenses on most everything I put out for this very reason. I want to allow both commercial and non-commercial use of what I write.&#x5d;&#x5d;&gt;</body>
<author>John Munsch</author>
<email>e1-vxtr-b371-fpwt@emailias.com</email>
<website>http://www.johnmunsch.com</website>
<ipAddress/>
<date>15 Sep 2004 06:14:17:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Commercial-friendly Embedded Db Options</title>
<body><![CDATA[Just to beat the dead horse further:

<p>This section out of their FAQ is a bit of a giveaway, "May I use HSQLDB in a commercial product?<br><br>

HSQLDB is Open Source and free to use in any commercial product so long as the terms of the Licenses are met. The License of Hypersonic SQL (on which HSQLDB is based) is based on the old BSD License. The HSQLDB Licence is based on the new BSD License."</p>&#x5d;&#x5d;&gt;</body>
<author>John Munsch</author>
<email>e1-vxtr-b371-fpwt@emailias.com</email>
<website>http://www.johnmunsch.com</website>
<ipAddress/>
<date>15 Sep 2004 06:16:54:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Commercial-friendly Embedded Db Options</title>
<body><![CDATA[Thanks for the feedback guys. I didn't realise that HSQL was a BSD license. I was more concerned about the underlying Hypersonic License (which isn't BSD), but the FAQ does seem to give it the all clear on the derived work (not sure how that works, but whatever).<p/>
Last time I checked BerkeleyDB were charging $30000 for a commercial license, so they are out (but I havn't ruled out using InfinityDb which is also a Btree job). I'm still waiting to hear back from some of the others. <p/>&#x5d;&#x5d;&gt;</body>
<author>Glen</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress/>
<date>15 Sep 2004 07:34:23:0 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Commercial-friendly Embedded Db Options</title>
<body><![CDATA[I think before deciding upon anything you should give a try to Daffodil their product is good and what i gathered from their sales guys is that they have a flexible licensing policy wherein you just have to pay an initial amount of around 999$ and after that you can pay them a royality on each copy sold  which will be 8-10% of your license cost or 80% of their license cost which ever is less.. If you are looking at huge volumes than i suppose this licensing will fit your requirements. &#x5d;&#x5d;&gt;</body>
<author>Jacob</author>
<email/>
<website/>
<ipAddress/>
<date>16 Sep 2004 00:10:59:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/09/16/1095304397000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Supressing XDoclet tags in Javadoc (from Ant)</title>
<excerpt/>
<body><![CDATA[<p>
If your project uses XDoclet and you're sick of seeing those warnings like:
<pre>
warning - @web.servlet is an unknown tag.
</pre>
then what you're after is the new Ant 1.6 
&lt;tag&gt; element of the &lt;javadoc&gt; task. You can use this bad boy by embedding something like:
<pre>
   &lt;tag name="web.servlet" scope="all" <b>enabled="false"</b>/&gt;
</pre>
in your source. Be warned, though, if you're trying to ignore a hyphen separated tag, (say <code>web.servlet-mapping</code>), you're out of luck. It will interpret it without the hyphen. This is apparently a <a href=http://issues.apache.org/bugzilla/show_bug.cgi?id=26539">known bug</a> with javadoc on JDK 1.4. </p>
<p>I'm thinking that this tag is just a wrapper of the <code>-tag</code> commandline arg (<a href="http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/javadoc.html#tag">more info</a>) of the javadoc executable, and that javadoc.exe internally has issues with parsing it's own commandline. Those pesky embedded hyphens... ;-)
</p>&#x5d;&#x5d;&gt;</body>
<date>16 Sep 2004 13:13:17:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Supressing XDoclet tags in Javadoc (from Ant)</title>
<body><![CDATA[It's not a bad idea to write your own custom tag handler; it's not hard and gets rid of these errors.

The irony, however, is that XDoclet went from using ':' to '.' as the seperator because under JDK 1.4.1, the '.' syntax wasn't highlighted as a missing tag. Then Sun changed it in 1.4.2... *shrug*&#x5d;&#x5d;&gt;</body>
<author>Robert Watkins</author>
<email>robertdw@twasink.net</email>
<website>http://twasink.net</website>
<ipAddress/>
<date>16 Sep 2004 21:01:23:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/09/18/1095467744000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>ehcache is one funky cache</title>
<excerpt/>
<body><![CDATA[<p>
I've started exploring some of the available cache software out there, and kicked things off with <a href="http://ehcache.sourceforge.net/">ehcache</a>. I've gotta say that first experiences have been excellent!
</p>
<p>
It's been very easy to learn, (create a CacheManager, create a Cache, add the Cache to the CacheManager, presto!), and it's a very tight implementations (50Kb). Persists itself to disk. Handles expiry of elements from the Cache. It's battle tested (looks like the guys from <a href="http://www.wotif.com">Wotif.com</a> have opened it to the world), and very accessible. Hey, it's even used in Hibernate and Gavin is a committer!
</p>
<p>
It's not JSR 107 compliant, and it doesn't support distributed cache work out of the box. But it's fast, it works, it's small, and I was productive in 10 minutes. The doco is good, and the API has had no surprises so far. An all-round excellent piece of work. Kudos to the lads at Wotif!
</p>&#x5d;&#x5d;&gt;</body>
<date>18 Sep 2004 10:35:44:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2004/09/21/1095756918000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>(P)Reviewing Jakarta Commons in Action</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I'm doing a review of a new Manning Book called "Jakarta Commons in Action" and it is one sensational piece of work. This is the ultimate missing manual to the Commons suite, and there is stacks to learn here, even if you've used a few of the commons suite in your projects.
</p>
<p>
What I *love* about this book is not just the content but also the writing style. All of the examples I've seen are first class - the way they deal with JMX and Commons-Modeller would be worth the price of the book for me. I finally have some sense of how Dynamic MBeans work!
</p>
<p>
There's plenty of reference tables in there, but the book's not about that. It really is an "In Action" title, with a style that tells you about the concepts, then how it's implemented, and then here's some ways you can use it. 
</p>
<p>I've only reviewed about five chapters so far, but if the rest of this title is the same standard (and so far it's been remarkably consistent across the board), then this will be title you'll want to add to your collection when it eventually hits the shelves. Great stuff! 
</p>&#x5d;&#x5d;&gt;</body>
<date>21 Sep 2004 18:55:18:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2004/09/30/1096531571000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>JMX + JBoss + Commons Modeler = Baby!</title>
<excerpt/>
<body><![CDATA[<p>
Ok. I'm extremely pumped. I've just used commons modeler to deploy an MBean to JBoss and it's actually working! Commons Modeler makes JMX so incredibly simple compared to doing this stuff by hand, that I had to see the thing running before I believed it.
</p>
<p>
Now, JBoss has its own way of deploying MBeans via a declaritive XML mechanism, which is cool, but I'm after something that I can play with on JBoss then deploy on Websphere, so portable APIs work for me.
</p>
<p>
I've been playing around with <a href="http://jakarta.apache.org/commons/modeler/">Commons Modeler</a> after reading the early review copy of Manning's Jakarta Commons In Action (top book!), but the examples show creating your own Http Adaptor. I knew JBoss had a nice Html Adaptor out of the box, but was wondering how I could registerer my MBean with it.
</p>
<p>Well here's some sample JMX, JBoss and Commons Modeler action: <br/>
<pre>
    void register() {
        URL url =
            this.getClass().getResource(
                "/MyCoolServiceStatistics.xml");
        if (url == null) {
            log.error("Bugger. Couldn't find config file. JMX disabled.");
            return;
        }

        try {

            Registry registry = Registry.getRegistry(null, null);

            /* Details of this procedure on http://www.jboss.org/wiki/Wiki.jsp?page=FindMBeanServer */
            MBeanServer server =
                (MBeanServer) MBeanServerFactory.findMBeanServer(null).get(0);

            registry.setMBeanServer(server);

            registry.loadMetadata(url);

            statsAppName =
                new ObjectName("MyCoolService:name=statistics");

            registry.registerComponent(
                this,
                statsAppName,
                "au.com.bytecode.ejb.MyCoolServiceStatistics");

        } catch (Exception e) {
            log.error("Errors registering component", e);
            throw new RuntimeException(e);
        }
    }
</pre>
</p>
<p>
I create my little Stats object when the App Server creates the related EJB, and then make some calls to it when methods are invoked on the EJB to keep track of useful stats. The magic sauce was the <code>findMBeanServer()</code> gear which I nicked off the JBoss Wiki <a href="http://www.jboss.org/wiki/Wiki.jsp?page=FindMBeanServer">here</a>. Basically once you add it to the MBean server, it appears in the Http Adaptor that JBoss gives you out of the box. Sensational! </p>
<p>
Not sure if it works on Websphere, I'll give it a go tomorrow.  Not even sure Websphere 5.1 *has* a Http Adaptor for JMX. I had a quick look in the Admin console and only saw Soap and RMI adaptors, but it all looks pluggable, so I should be able to slot one in. 
</p>&#x5d;&#x5d;&gt;</body>
<date>30 Sep 2004 18:06:11:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: JMX + JBoss + Commons Modeler = Baby!</title>
<body><![CDATA[Actually, you don't need:
registry.setMBeanServer(server);
and
registry.loadMetadata(url); (as long as your descriptor is a mbean-descriptors.xml which you put in the same package as your objects)
You can also replace:
 MBeanServer server =
                (MBeanServer) MBeanServerFactory.findMBeanServer(null).get(0);
with:
MBeanServer server = registry.getMBeanServer();

You can also do without descriptors, in which case commons-modeler (1.1+) will introspect everything. Also don't forget your components can implement MBeanRegistration if they want to do JMX stuff and be aware of their object name without any hacks.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress/>
<date>01 Oct 2004 06:46:43:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/10/05/1097011942000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>JMX Console Recommendations?</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've been playing with <a href="http://mc4j.sf.net">mc4j</a> to see if I can get a decent JMX console that works with Websphere 5.1, and it's a great little app. I've been playing with beta 5 (apparently 6 is out), and the version I'm playing with certainly has some negs, so I'm keen for when this one gets out of beta. My issues so far:
<ul>
<li>Custom installer (I'd much rather just unzip)</li>
<li>Mega-buggy GUI (slow, and keeps crashing)</li>
<li>Binary config file (if it was XML or text I could fix the classpath entries required to get to my app server working cause the GUI crashes if you try and change them after completing the "New Connection" wizard.)</li>
<li>Did I mention it's very slow?</li>
</ul>
</p>
<p>But all that said it's got a cool little GUI with nice grouping of attributes and some cool dynamic refresh options. Overall, but for the tricky config, it's a very handle little tool!
</p>
<p>So, anyone got any other recommendations for JMX consoles they have had success with? I'd love to get one hosted as a WSAD/Eclipse plugin, but whatever.
<p>&#x5d;&#x5d;&gt;</body>
<date>06 Oct 2004 07:32:22:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2004/10/13/1097670264000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Running Jetty on Linux</title>
<excerpt/>
<body><![CDATA[<p>
Old news to hard-core Jetty users, but I've only just discovered <code>/bin/jetty.sh</code> in the <code>jetty-all</code> distro. This neat little shell script lets you manage all sorts of Jetty goodness straight from the command line including start, stop, restart and check (jar paths, home dirs, etc).
</p>
<p>
I've previously been doing dodgy stuff with:
<pre>
    java -jar start.jar &
</pre>
from the command line and have been having all sorts of unexpected results over time. I'm hoping this slick little script is going to help me out.
</p>
<p>
In another hot tip, I found that creating a "work" directory in my $JETTY_HOME will tell Jetty to put temp files there rather than in /tmp. The problem with /tmp is that it may get swept by cron jobs every so often - causing your web apps to crash and burn. It's in the FAQ, but I hadn't come across it before. 
</p>
<p>
In yet other news, today's outage was due to a botched upgrade to Jetty 5. Having all sorts of problems running Pebble on 5 (some related to commons logging clashes, but others related to straight page compilation). I'm going to do some more testing on my local PC before attempting another deploy. For now, I'm sticking with 4.2.x (I know, where's my sense of adventure?).
</p>&#x5d;&#x5d;&gt;</body>
<date>13 Oct 2004 22:24:24:0 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Running Jetty on Linux</title>
<body><![CDATA[<p>
If you are using Linux or *nix, I highly recommend managing these systems with daemontools (http://cr.yp.to).  Rather than merely starting and forgetting the service, daemontools watches the process and restarts as necessary.  We use this for most managed customers so it is pretty "battle tested".
</p>
<p>
Email me (matthew.porter AT contegix DOT com) if you need specific setups for Jetty or almost any other J2EE server. 
</p>&#x5d;&#x5d;&gt;</body>
<author>Matthew E. Porter</author>
<email/>
<website>http://www.contegix.com</website>
<ipAddress/>
<date>14 Oct 2004 08:28:25:0 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/11/09/1099989308632.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Starting to learn SWT</title>
<excerpt/>
<body><![CDATA[<p>
I've started reading <a href="http://www.apress.com/book/bookDisplay.html?bID=351">The Definitive Guide to SWT and JFace</a> in an effort to get a feel for SWT programming. The first impressions have been pretty good. The widget set is awesome, can't wait to get me some CoolBar action!
</p>
<p>
It's kinda weird seeing a main routine with a standard Windows-like message pump. Takes me back to my Win32 days. And the need to free non-contained resources is a probably going to be a bit of a pain. But the payback is a true native look and feel, and the option to use GCJ to generate a native binary. Baby!
</p>
<p> 
Anyways, the book is definitely a good read. Seems to have pretty comprehensive coverage of the libraries and a good helping of practical advice. I've just finished the chapter on layout managers, and I'm missing <a href="http://www.jgoodies.com">JGoodies</a> Forms already. Fortunately, there's an <a href="http://ffxml.net/swtforms/">SWT Port of Forms</a>. Gotta check it out. I *love* that layout manager.
</p>&#x5d;&#x5d;&gt;</body>
<date>09 Nov 2004 19:35:08:632 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Starting to learn SWT</title>
<body><![CDATA[I liked what I saw of SWT recently as well.  Unfortunately, I don't know when I'll get to write a GUI app again.  But SWT will definately be a contender.

Check out <a href="http://galbraiths.org/">Ben Galbraith</a>'s SWT talk at NoFluffJustStuff if you go to one and he's there.&#x5d;&#x5d;&gt;</body>
<author>Vik</author>
<email/>
<website>http://blog.vikdavid.com</website>
<ipAddress>198.151.13.8</ipAddress>
<date>10 Nov 2004 06:53:35:457 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Starting to learn SWT</title>
<body><![CDATA[After grasping the basics of SWT, you should check out JFace. It's a layer built on top of SWT, making developer's life a bit easier. No more manual message pumping and paying attention to details that should be taken care for you. You can get the JFace libraries from the latest Eclipse release, see plugin directory. Web is full of nice tutorial pages, this is a good one:

http://www.java-tutor.com/java/swtlinks.html
&#x5d;&#x5d;&gt;</body>
<author>nnevatie</author>
<email/>
<website/>
<ipAddress>213.243.187.149</ipAddress>
<date>10 Nov 2004 19:44:10:441 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Starting to learn SWT</title>
<body><![CDATA[Hi Glen, how did you get on with the Apress book you were reading? I'd love to hear more about what you thought - and if you're looking for another Java book soon, drop me an email and I'd be delighted to send you a free copy.
&#x5d;&#x5d;&gt;</body>
<author>Stephanie at Apress</author>
<email>sparker@apress.com</email>
<website>http://www.apress.com</website>
<ipAddress>62.255.32.9</ipAddress>
<date>16 Feb 2005 07:47:07:396 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/11/10/1100085495608.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>PocketPC JVM Options</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
In my endless quest for some kinda JVM for my Ipaq 1940, I've come across two new contenders (and found out more about a third): 
<ul>
<li><a href="http://www.nsicom.com/Default.aspx?tabid=159">Creme</a> - which I've downloaded and successfully installed an eval of (I'm waiting to here back pricing); and</li>
<li><a href="http://www.handango.com/PlatformProductDetail.jsp?productId=48776">Jeode for Dell Axim</a> - which, despite what the Handago page says, apparently runs on PocketPC 2003s of most varieties. Retails for around $50. Apparently Sun have some licence agreement with Esmertec that stops them selling their VM to anyone but Device OEMs, hence the work around</li>
<li><a href="http://www-306.ibm.com/software/wireless/wsdd/features.html">Websphere Studio Device Developer</a> - which, after endless browsing on the IBM site, appears to retail for around $600. Which is pretty hefty to just get a JVM (it's bundled with a whole WSAD Style IDE, hence the big ticket).</li>
</ul>
</p>
<p>
Anyone running any of these bad boys on their own Ipaq's? Be interested to hear your experienced. Now that I've started playing with SWT, I'm keen to run an SWT app on my PocketPC. How cool would that be!!
</p>&#x5d;&#x5d;&gt;</body>
<date>10 Nov 2004 22:18:15:608 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: PocketPC JVM Options</title>
<body><![CDATA[<p>I have some experience with this.  The good news is that all 3 JVMs do work!</p>

<p>Here are some things I know from personal experience:</p>

<p>- Esmertec/JEODE works, but check if Esmertec has updated it since they bought it from Insignia.  Last time I checked (9 months ago), JEODE was a bit dated.</p>
<p>- Creme, a very nice JVM owned by an Israeli company NISCOM.  For 1000-unit bulk, expect to pay $15/unit.  They do have a developer license which gives you a few units for something reasonable like $50.</p>
<p>- J9, by IBM.  Don't believe IBM's pitch that you need the WSAD IDE for this.  You can just copy the .exe/.jar's to your PocketPC and be done with it (google for intall steps).  I thought this was on sale on Handango for $10/pop, not $600.</p>

<p>I've heard there's a SWT port for PocketPC project, but have not looked into it.  I'm eager to hear how your experiement goes.</p>

<p>There aren't too many JAVA folks paying attention to PocketPC.  It's all MIDLET mania.</p>&#x5d;&#x5d;&gt;</body>
<author>Vik</author>
<email>vkfilter94-corp@yahoo.com</email>
<website>http://blog.vikdavid.com</website>
<ipAddress>198.151.13.8</ipAddress>
<date>11 Nov 2004 02:08:31:97 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: PocketPC JVM Options</title>
<body><![CDATA[We investigated the jvms for pocketpc earlier and came to the conclusion that superwaba is the best. They have a massive amount of extra libraries not included with other jvms and its free.

It runs fast on all platforms and will soon support symbian. Give it a go - theres even an eclipse plugin.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>218.101.14.68</ipAddress>
<date>11 Nov 2004 06:40:52:489 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: PocketPC JVM Options</title>
<body><![CDATA[I remember reading that superwaba code is modified Java.  Ie, it will not run on sun's J2SE JDK.  Is that true?&#x5d;&#x5d;&gt;</body>
<author>Vik</author>
<email>vkfilter94-corp@yahoo.com</email>
<website>http://blog.vikdavid.com</website>
<ipAddress>198.151.13.8</ipAddress>
<date>11 Nov 2004 07:00:37:470 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: PocketPC JVM Options</title>
<body><![CDATA[<p>
Thanks for the tip, Vik! I've paid my $5.99 and I'm downloading (the 80Mb) <i>Websphere Everyplace Micro Environment</i> as I write this. Awesome tip, buddy. Saved me heaps. 
</p>
<p>
BTW, The update on CrEme was that their minimum sell is 40 units (again, to do with Sun licencing facism on J2ME stuff) which retails at $1000. Shame, since it looks like a cool product.
</p>
<p>
I have installed Superwaba before and the non-native widget set killed me. I'm sick of writing Java apps that don't look native, hence the SWT exploration, and I don't want to start writing dodgy-looking PocketPC apps! That said, the Superwaba community is pretty pumping, so that's a plus.
</p>
<p>
Busting to write my first PocketPC Java app with J9, though...
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@glensmith.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.122.220.85</ipAddress>
<date>11 Nov 2004 07:35:13:9 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: PocketPC JVM Options</title>
<body><![CDATA[<p>You're welcome! It occurred to me that it would help a lot of people for me to blog my Java-on-PocketPC project experiences.</p>

<p>When I was working on the PocketPC project I used to wish there was more blogging on this topic - precisely so I wouldn't have to bang my head to learn 'facts' like J9 works without WSAD.</p>

<p>So now that I have a blog, I'll get around to it... :-)</P>&#x5d;&#x5d;&gt;</body>
<author>Vik</author>
<email>vkfilter94-corp@yahoo.com</email>
<website>http://blog.vikdavid.com</website>
<ipAddress>198.151.13.8</ipAddress>
<date>11 Nov 2004 07:45:56:159 +1100</date>
<state>approved</state>
<parent>1100118913009</parent>
</comment>
<comment>
<title>Re: PocketPC JVM Options</title>
<body><![CDATA[I'm not clear on the difference between the MIDP version and the Personal Profile version.  Which do I need if I want to build PPC apps in Java?&#x5d;&#x5d;&gt;</body>
<author>M. Williams</author>
<email>zebonebo@gmail.com</email>
<website/>
<ipAddress>168.180.96.8</ipAddress>
<date>13 Nov 2004 08:23:41:448 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: PocketPC JVM Options</title>
<body><![CDATA[The Personal profile gives you java.sql and java.awt which you do NOT get with MIDP.  If you want to write a more powerful app, then use the Personal profile.  There are several mobile databases available for Java on PocketPC's.  Some are free, some are pure Java even.&#x5d;&#x5d;&gt;</body>
<author>Vik</author>
<email>vkfilter94-corp@yahoo.com</email>
<website>http://blog.vikdavid.com</website>
<ipAddress>198.151.13.8</ipAddress>
<date>13 Nov 2004 08:34:54:265 +1100</date>
<state>approved</state>
<parent>1100294621448</parent>
</comment>
<comment>
<title>Re: PocketPC JVM Options</title>
<body><![CDATA[We have project sing J9 here, and this is good product, but PocketPC's ActivSync is not stable if you create a web services stuff, always crash here. but in Palm.&#x5d;&#x5d;&gt;</body>
<author>Frans Thamura</author>
<email>frans@intercitra.com</email>
<website/>
<ipAddress>202.53.234.12</ipAddress>
<date>07 Dec 2004 13:06:05:248 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/11/14/1100468897135.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>First Pocket PC SWT App</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
After having a good read of <a href="http://www.eclipse.org/articles/Article-small-cup-of-swt/pocket-PC.html">A Small Cup of SWT</a>, I've decided to test out one of the sample apps to see what's doable. The good news is that it's all very doable! Look at the nativeness of this:
</p>
<p>
<img src="./images/MyFirstSWTPocketPCApp.gif" alt="My First SWT Pocket PC app"/>
</p>
<p>
After paying my $US5.99, and downloading 80Mb IBM's J9 Runtime from Handago I was in business. Setup Eclipse to use the J9 as it's runtime so I could check I was only using the right subset of java.*, downloading the pocket pc SWT from the Eclipse site (I used the J2SE version of the Pocket PC stuff to get maximum capability). 
</p>
<p>
Compiled up my sample class (HelloSWT.class) on the PC, then copied the .class file to my device. The only magic required was to create the Hello.lnk file per the FAQ. The spaces in the paths needed some sorting, so I ended up with some interesting quoting (and what's the leading 68# for? A filetype thingy?):
</p>
<pre>
68#"\Program Files\J9\PPRO10\bin\j9w.exe" -jcl:ppro10 
   -cp "\My Documents\Java\swt.jar;\My Documents\Java" 
   HelloSWT
</pre>
<p>
and I was in business. Haven't worked out how to change the icon yet to something non-IBM, but still, it's working!
Big thanks to <a href="http://blog.vikdavid.com/">Vik</a> for tipping me off on J9. 
</p>

<p>
BTW, if you need a free Screen Capture app for Pocket PC, I can recommend <a href="http://www.cetoolbox.com/PocketScreenCapture/index.html">Pocket Screen Capture v1.0</a> from cetoolbox.com. Good stuff - you  just need to make sure you can set up your screen grab in the five seconds they give you to get ready!
</p>&#x5d;&#x5d;&gt;</body>
<date>14 Nov 2004 21:48:17:135 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Glen,

You're making me want to get a PocketPC now!  I wonder if Palm is going to release an SWT port soon.

BTW, The Definitive Guide to SWT and JFace is a good book.  I've read through a lot of it and refer to it while I develop.

<a href="http://www.luisdelarosa.com">Luis</a>&#x5d;&#x5d;&gt;</body>
<author>Luis de la Rosa</author>
<email>comment@luisdelarosa.com</email>
<website>http://www.luisdelarosa.com</website>
<ipAddress>208.58.71.133</ipAddress>
<date>16 Nov 2004 05:52:48:310 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Wohoo!  Thanks for showing that you can write native looking PocketPC apps in Java.  I've put up a little page with J2ME/CDC/PocketPC links where I've added a link to this blog entry:
<a href="http://www.vikdavid.com/mobile/">http://www.vikdavid.com/mobile/</a>&#x5d;&#x5d;&gt;</body>
<author>Vik</author>
<email>vkfilter94-corp@yahoo.com</email>
<website>http://www.vikdavid.com/mobile/</website>
<ipAddress>70.17.91.36</ipAddress>
<date>17 Nov 2004 04:37:41:431 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>More details, please :-)</title>
<body><![CDATA[I'm so close to getting this to work, but I'm having a problem. I _can_ get a simple helloworld class to run on my device, but when I try something with SWT, it's no-go. It seems my j9 is just not finding SWT, even though I set up swt.jar in my classpath just like you did.

Where exactly did you put the SWT dll file? Mine isin the same directory as the J9 dll files. I tried putting it in /windows but got the same error.

Would you mind doing a step-by-step tutorial on compiling on Eclipse and running it on Windows Mobile?&#x5d;&#x5d;&gt;</body>
<author>JavaBurt</author>
<email>jim@burtcom.com</email>
<website></website>
<ipAddress>161.7.78.22</ipAddress>
<date>18 May 2005 23:04:21:340 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[<p>
I put my copy of the swt dll in the same directory as my application (ie. same directory as my launching shortcut and .class file).  Hope it helps.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website></website>
<ipAddress>192.168.1.9</ipAddress>
<date>19 May 2005 07:43:08:689 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: More details, please :-)</title>
<body><![CDATA[<p>Arrgh! I tried putting the dll in the same directory as the class file, and still no joy...</p>

<p>You're putting your class file, the dll and the swt.jar in "\My Documents\Java", correct?</p>

<p>The name of the dll you're using is "swt-win32-3064.dll", I hope -- that's what I get when I download the latest file from the eclipse site.</p>

<p>I assume you're using the exact same code thats posted on the "A Small Cup of SWT" page? (for the "Application resizing when the virtual keyboard shows up" section) That's what I'm trying too. It compiles and runs just fine on my Windows box</p>

<p>Sorry for all the questions :-)</p>

<p>BTW: the "68#" on the link file is supposed to be the number of bytes in the link command. I think it's actually ignored on Pocket PC OS. I usually just set it to 255#</p>&#x5d;&#x5d;&gt;</body>
<author>JavaBurt</author>
<email>jim@burtcom.com</email>
<website></website>
<ipAddress>161.7.97.244</ipAddress>
<date>19 May 2005 16:25:47:43 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[<p>Got it to work!</p>
<p>As mentioned above, the name of the latest dll from Eclipse is "swt-win32-3064.dll"</p>
<p>However, j9 expects it to be "swt-win32-3050.dll" for some reason.</p>
<p>I changed the name of the dll on my device, and the application launched with no problem.</p>
<p>Thanks, Glen, for the blog that got me started with all this in the first place :-)</p>&#x5d;&#x5d;&gt;</body>
<author>JavaBurt</author>
<email>jim@burtcom.com</email>
<website></website>
<ipAddress>161.7.97.244</ipAddress>
<date>19 May 2005 17:33:40:80 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[<p>
Great stuff! Yeah the dll version has to match the jar version. Since it's a JNI call to use the native stuff, inside the swt.jar there's going to be some Java call like System.loadLibrary("swt-xxxxx.dll") which will be hard coded to a particular dll. Glad you got it up and running!
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website></website>
<ipAddress>192.168.1.9</ipAddress>
<date>19 May 2005 21:06:40:121 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Awesome 'tutorial' Glen!! Without it I'm sure I would have spent weeks getting it all to work. Thanks for making this info available.&#x5d;&#x5d;&gt;</body>
<author>Colin</author>
<email></email>
<website></website>
<ipAddress>203.36.166.152</ipAddress>
<date>17 Jun 2005 01:52:13:423 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Did you work out how to change the icon, from the IBM standard Icon&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>gps@edbgruppen.dk</email>
<website></website>
<ipAddress>195.249.126.40</ipAddress>
<date>08 Sep 2005 09:50:45:505 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[No. Never did. Post it here if you work it out, though. &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>09 Sep 2005 23:16:31:15 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Hi

how to create a .lnk file for my app
on the device so tht i can run it with a tap.

Thanks
DC&#x5d;&#x5d;&gt;</body>
<author>DC</author>
<email>dhiraj_ck@hotmail.com</email>
<website></website>
<ipAddress>61.246.38.181</ipAddress>
<date>26 Sep 2005 10:18:14:609 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[DC, You just create a text file with the specified content on your desktop and call it Hello.lnk or whatever, then copy/sync it with your device.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>26 Sep 2005 20:44:41:956 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Has anyone gotten the MySaifu J2SE JVM for PocketPC to work using the SWT PocketPC J2SE - swt-3.1-win32-wce_ppc-arm-j2se.zip?
Ive gotten J9 and the SWT PocketPC J2SE to work but not with the MySaifu JVM.  I get a native exception at address 0. I'm trying the Hello World app listed on http://www.eclipse.org/swt/faq.php#pocketpcstart.
&#x5d;&#x5d;&gt;</body>
<author>Daniel King</author>
<email>apothmus@hotmail.com</email>
<website></website>
<ipAddress>68.119.117.6</ipAddress>
<date>17 Oct 2005 06:40:43:385 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Is there any other way to install the J9 on a pocket pc besides synching, copying it over and clicking on the cab file? I'm looking for over the air kinda like jnlp.  I can't seem to find anything on this using google.&#x5d;&#x5d;&gt;</body>
<author>Daniel King</author>
<email>apothmus@hotmail.com</email>
<website></website>
<ipAddress>68.119.117.6</ipAddress>
<date>05 Nov 2005 23:24:08:780 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Hi All, 
Do you know if it is possible to resize the shell, when the keyboard appears, with a Intel x86 processor?

Thanks&#x5d;&#x5d;&gt;</body>
<author>Vladi</author>
<email></email>
<website></website>
<ipAddress>201.1.58.206</ipAddress>
<date>13 Dec 2005 13:11:38:212 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Can anybody tipping me where to get the J9?&#x5d;&#x5d;&gt;</body>
<author>SkyManager</author>
<email>skymanager111@yahoo.com</email>
<website></website>
<ipAddress>220.246.39.225</ipAddress>
<date>06 Jan 2006 08:50:23:882 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[You can purchase from Handango... see <a href="http://www.handango.com/PlatformProductDetail.jsp?siteId=1&jid=68A1AFF3F814E43F3E5AEABB96ECDEF3&platformId=2&productId=140997">this page</a> for ordering details.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>165.89.84.86</ipAddress>
<date>13 Jan 2006 18:01:23:97 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1136537423882</parent>
</comment>
<comment>
<title>SWT dll version?</title>
<body><![CDATA[I only get this to work with the "swt-win32-3050.dll" file.  I am using the swt.jar that came from the Eclipse download page: "swt-3.1.1-win32-wce_ppc-arm-j2se.zip" which includes the "swt-win32-3139.dll"

Any ideas how to get to use the latest dll?
&#x5d;&#x5d;&gt;</body>
<author>Joe</author>
<email></email>
<website></website>
<ipAddress>71.193.210.129</ipAddress>
<date>12 Feb 2006 19:14:21:940 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>SWT dll version?</title>
<body><![CDATA[<p><a href="http://awareness.ics.uci.edu/~rsilvafi/pocketPC/index.html">http://awareness.ics.uci.edu/~rsilvafi/pocketPC/index.html</a></p>
<p>&nbsp;</p>
<p><a href="http://forum.java.sun.com/thread.jspa?messageID=3981289">http://forum.java.sun.com/thread.jspa?messageID=3981289</a></p>
<p>this will give u a fair idea.</p>&#x5d;&#x5d;&gt;</body>
<author>Sanil Paul</author>
<email>sanilpaul@gmail.com</email>
<website></website>
<ipAddress>68.36.237.229</ipAddress>
<date>04 Aug 2006 17:40:36:30 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1139771661940</parent>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[Hello. <br />
<br />
I see more and more people get interested in Pocket PC and SWT. Check my site with instructions about setup. <br />
http://home.elka.pw.edu.pl/~pboetzel<br />
<br />
I have added link to this site.&#x5d;&#x5d;&gt;</body>
<author>Piotr</author>
<email></email>
<website></website>
<ipAddress>84.10.42.169</ipAddress>
<date>08 Oct 2006 14:48:25:194 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First Pocket PC SWT App</title>
<body><![CDATA[<a href="http://home.elka.pw.edu.pl/~pboetzel">http://home.elka.pw.edu.pl/~pboetzel</a>&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>74.135.168.109</ipAddress>
<date>31 Dec 2006 06:13:21:72 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2004/12/16/1103189786850.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>UML for Java Programmers</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Been putting together some UML for developer docs and I've gotta say that <a href="http://www.objectmentor.com/UMLFJP">UML For Java Programmers</a> is one very cool book. I've never really grokked UML, so it's been pretty hard work going at any of the more hardcore texts.
</p>
<p>
The neat thing about this book is that it lets you reverse engineer. It gives you some simple sample Java code using some common coding idiom, like classes which contain a Collection of some other class, and gives you the diagram that matches the code.
</p>
<p>
The other thing I really like about this book is its "real worldliness". Plenty of solid advice on when NOT to diagram (eg. cause you feel guilty for not using UML is NOT a good reason! If the pic doesn't add value to anyone, why are you doing it?)
</p>
<p>
It remains the only UML book that I continue to open. Great stuff.
</p>
<p>
Can I add one more plug for Aussie company <a href="http://www.sparxsystems.com.au/">Sparx Systems</a> who put out one kickin UML tool for very sane dollars. Enterprise Architect is my tool of choice for UML these days, and it's the only tool I've used that I don't have to spend hours with getting the lines to layout properly. Great stuff, guys!
</p>&#x5d;&#x5d;&gt;</body>
<date>16 Dec 2004 20:36:26:850 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: UML for Java Programmers</title>
<body><![CDATA[Fowler's "UML Distilled" (3rd ed.) is another great one.&#x5d;&#x5d;&gt;</body>
<author>Paul Holser</author>
<email>pholser@yahoo.com</email>
<website>http://cleveralias.blogs.com</website>
<ipAddress>67.166.253.45</ipAddress>
<date>18 Dec 2004 02:55:24:690 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2004/12/22/1103708367708.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Versioning Jars with JReleaseInfo</title>
<excerpt/>
<body><![CDATA[<p>
You use CVS and tag your stuff every release right? But it can be a pain for your clients to get at your version info in your jar file once it's out there in the wild.
</p>
<p>I've tried a couple of ways. You can use jar manifest entries for <code>Implementation-Version</code> or you can call your jar <code>myjar-1.2.3.jar</code>. The former is not very accessible for clients to get to, the later can be a pain for clients since they can't just drop in the new jar as a replacement cause their IDE may barf. I've found neither is ideal.
</p>
<p>
I've recently come across <a href="http://jreleaseinfo.sf.net">JReleaseInfo</a> which seems to be a nice little solution. This little bad boy runs as an Ant task, and embeds your specified version info along with a tiny Swing viewer right inside your jar. Add a <code>Main-Class</code> entry to your jar Manifest, and you've got yourself a self-executing jar that displays a nice GUI deal with all your vital signs. Check out the <a href="http://jreleaseinfo.sourceforge.net/intro_e.html">grab</a> on their site.
</p>
<p>
Looks like holding a lot of promise. Doesn't support commandline output at the moment (which would be nice for Unix boxes that you've only got ssh to), but I've submitted a feature request and the boys think it could be doable. Check out the screen grabs. It's pretty impressive, and clients just love double clicking on stuff. Elegant.
</p>
&#x5d;&#x5d;&gt;</body>
<date>22 Dec 2004 20:39:27:708 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/01/02/1104697535621.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Writing Maintainable Swing Apps?</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
In the heart of writing a moderate sided Swing app at the moment, and it's a jungle in there. You've got Panels, Models, Frames, Event Handlers, Actions. It's easy to get into trouble quickly.
</p>
<p>
All that stuff is pretty straightforward in a small forms based app. But when you add a stack of complex panels and models things start getting very busy. Has anyone read any good articles on writing maintainable swing apps? Or has worked on any moderate sized swing apps and has some good battle-tested tips to share?
</p>
<p>
My latest thinking is to explore IoC frameworks like Spring to see if I can externalise a lot of the magic to an understandable XML file (eg the Actions would becoming much cleaner rather than manually injecting their related panels/models/or whatever from some other code deeply nested inside a Panel class somewhere). Even the Panel creation logic would probably become a little cleaner.
</p>
<p>
Interested to hear ideas from people who've walking this scary road.
</p>&#x5d;&#x5d;&gt;</body>
<date>03 Jan 2005 07:25:35:621 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Writing Maintainable Swing Apps?</title>
<body><![CDATA[Have you taken a look at <a href="http://www.springframework.org/spring-rcp.html">Spring Rich</a>?

Alternatively, if you have the option, I would investigate doing what you want in Eclipse, especially on the Rich Client Platform (RCP).  The plug-in framework helps your code be more modular.  Also, the frameworks for helping you manage actions, views, editors, etc makes the kind of development you are doing easier.&#x5d;&#x5d;&gt;</body>
<author>Luis de la Rosa</author>
<email>comment@luisdelarosa.com</email>
<website>http://www.luisdelarosa.com</website>
<ipAddress>208.58.71.133</ipAddress>
<date>03 Jan 2005 07:45:21:321 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Writing Maintainable Swing Apps?</title>
<body><![CDATA[<p>Hi</p>
<p>
For a form based application <a href="https://forms.dev.java.net/">JGoodies Forms</a> helps to layout components in a clean, concise, and readable form.</p>

<p>For the binding and the validation part,  <a href="https://binding.dev.java.net/">JGoodies Binding</a> helps alot.</p>

<p>Although that these two frameworks do not directly address what you're looking for, they certainly make Swing apps cleaner, more maintainable, and more readable.</p>&#x5d;&#x5d;&gt;</body>
<author>Behrang Saeedzadeh</author>
<email>behrangsa@gmail.com</email>
<website>http://www.jroller.com/page/behrangsa</website>
<ipAddress>213.217.39.87</ipAddress>
<date>03 Jan 2005 09:20:24:630 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Writing Maintainable Swing Apps?</title>
<body><![CDATA[For each package I write, lets say screenshot for this example, I create subpackages:

com.screenshot.actions
com.screenshot.model
com.screenshot.view
com.screenshot.controller

1. I always have an ActionFactory which creates actions for controllers.

void buildActions(IController controller);

 This separates the actions (i.e. TakeScreenshotAction) from the controller implementation. If you write them extending runnable, and have an interface for the controller, you can reuse them when you build web,j2me or pda apps. 

When you have a new logical structure - lets say screenshot organiser - you simply create a new subpackage:

com.screenshot.organiser

with the actions,model,view,controller subpackages. While it takes time you save a lot in the long run, and compilation is faster also. This was a problem when I started having all my actions in the controller classes - the more anonymous actions, the longer the compile time.. when you have >50 it makes a big difference.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>222.152.128.198</ipAddress>
<date>03 Jan 2005 11:04:51:380 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Writing Maintainable Swing Apps?</title>
<body><![CDATA[I have worked with the various types of apps that the other comments indicate. Of all, the easiest most maintainable for me is the plugin based architecture. It allows your application to be broken up into smaller modular parts. It helps you break it into separate areas. For example, you may have a reports section of code and want to be able to extend it. That is a separate plugin. Help can be a separate plugin. User configuration can be a separate plugin. So far there isn't much that can't be broken into a plugin. More so, breaking things out like this does two things I find extremely helpful. First, it makes code more manageable cause it is separated a bit more. You generally can almost think of each plugin as a mini application. Not always, of course, but a goal should be to separate it and test it separately as much as possible so that it works on its own as much as possible. Another thing is, for team development I find working on plugins makes getting an application done faster yet still more maintainable. Developers can usually work on specific plugins and not be bothered by other developer's plugins. Some, such as core plugins, of course affect most others, but those are far fewer than the "extending" plugins you build on top of core functionality. For example, a report system in a plugin would be a "core" plugin. You then add plugins to add new types of reports. This can be applied to a number of areas of application development.

As for frameworks, there is the Eclipse RCP which is very good, Spring RCP is on the rise, and my own framework is in the works, The Platonos Application Framework (www.platonos.org). It's still just starting out, but we are working quickly on the plugin engine lately, fixing some issues with multi-threading and such, and are working on the basic core UI framework that can then be extended by other plugins to provide application functionality.

Check it out, join up if you are interested!

&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>65.198.47.68</ipAddress>
<date>04 Jan 2005 08:17:31:29 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/02/12/1108169609271.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>I've written my last Swing app... (SWT is *so* the business...)</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've spent the last month getting to know SWT, and I've gotta say that I've written my last Swing app. After spending far too long messing with Swing MVC pattern and writing modeller code for my damn combo boxes, that's it. I've had it. I've come to the conclusion that I'm just not smart enough to grok Swing.
</p>
<p>
But I was still missing a decent sized SWT app that would prove me to that humans could write SWT apps and that I could model off for my own mid-sized project. Then I had a good look at the source to <a href="http://www.rssowl.org/">RSSOwl</a> - one very funky SWT RSS Reader - and I'm really starting to get a feel for SWT. Full kudos to those guys for putting together a very spunky app with a very nice source structure. One that I can pick up after a little digging and that looks very maintainable.
</p>
<p>
Booned to know that this thing looks good in the large, and to get a feel for SWT in the small, I ported a small Swing utility app that does some crypto stuff. It's got a combo, couple of buttons, and couple of text fields to hold the input and output text. Total port time: 1.5 hours. In the process I managed to dump the two third party libs I was using to make the thing look good (JGoodies forms and JGoodies looks). 
</p>
<p>I initially did the layout with the SWT FormsLayout, and later made the switch to a straight SWT GridLayout since the overhead of layout data for FormsLayout was starting to urg me (and the layout was a simple grid anyways, really). The app was snappier to start up (half the time of the swing app on JDK 1.4.2 on Win32), and best of all looks completely native. Ran it through <a href="http://www.ej-technologies.com/products/exe4j/overview.html">exe4j</a> to get a nice little binary launcher and I was in business.
</p>
<p>
The only dramas I had was getting the form icon to look right (there still seems to be some issues with PNG transparency and SWT on Windows, and I couldn't really be bothered converting things to GIFs so I'm just living with it).
</p>
<p>So my take is that I'm ditching Swing and running with SWT for all further GUI jobs. The Layout managers are great, the widgets are native (and have simple APIs that I could use mainly from autocomplete), and the doco is abundant. 
</p>
<p>More info here when my experience grows, and my mid-sized project gets the facelift that I've been putting off. I gotta say, though, after my first experiences of a small port, SWT just gets me excited about the desktop again!</p>
&#x5d;&#x5d;&gt;</body>
<date>12 Feb 2005 11:53:29:271 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[I had the same feeling when i started using SWT. The things are pretty much easy in SWT. The only problem is when come to something when need to create some thing like a database designer or a work flow editor (similar to GEF) i have been hanging on eclipse.org news group but didnt find any help from them either. Also one superiority that SWT has over Swing/AWT is the interaction from user. The GUI is quite fast and ther is no degradation in performance also.

&#x5d;&#x5d;&gt;</body>
<author>Muhammad Mansoor</author>
<email/>
<website>http://jroller.com/page/mmansoor</website>
<ipAddress>202.88.44.199</ipAddress>
<date>14 Feb 2005 16:44:46:841 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[It's not so bad for a couple af buttons, but for the real things I prefer Swing.

Try to make something like looking over the combo while you are typing in it with sync to some table...

First you have to look over all the combo items to find which item to select... then to find one in a table.

Without MVC you always need to keep a copy your data.

In swing I can make the same model for both list and table (as well as a renderer) so once I type a key I search over collection (my model can implement comparable) and once I got it from list I have the OBJECT not the index or some text represention...

About the renderer - few days ago I've been asked to make JList and JTable to have the same colored info. Can you put it in Combo in SWT? I can easy put an html in ListRenderer and (I as I told before reuse the same class for both!!).

SWT just looks to be easy for the small project, but after while I came back to swing. One thing I hate in swing is a SUN policy that doesn't permit to complile it with excelsior jet compiler, So if you need JRE-less Java application - it's the only way to go. And OLE integration in SWT (for win) is easy enough.
&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>80.58.47.235</ipAddress>
<date>15 Feb 2005 00:08:35:624 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[There are some swing samples at sandraSF.com (and MVC code)

There is ... JDNC.

.V
&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>68.94.25.176</ipAddress>
<date>15 Feb 2005 00:23:05:513 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[I truely don't understand the problems
that people have with swing. 
I'll wait to see if SWT really makes
it any farther than AWT did. 

See this article...
http://www.builderau.com.au/program/work/0,39024650,39176462,00.htm&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>163.192.21.45</ipAddress>
<date>15 Feb 2005 01:47:04:430 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA["I'll wait to see if SWT really makes it any farther than AWT did. See this article..." <br/>
--> You should take a look at this blog:<br/>
<a href="http://onthethought.blogspot.com/2005/02/gosling-on-swt.html">http://onthethought.blogspot.com/2005/02/gosling-on-swt.html</a>
<br/>James Gosling's point of view is obviously biased...&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>194.250.98.243</ipAddress>
<date>15 Feb 2005 02:23:07:226 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>SWT on non-windows systems</title>
<body><![CDATA[Have you tested your app on other OSes? Under X11, SWT is very slow, for example in Eclipse there is a noticable key lag.&#x5d;&#x5d;&gt;</body>
<author>Slava</author>
<email/>
<website>http://factor.sf.net</website>
<ipAddress>24.43.80.135</ipAddress>
<date>16 Feb 2005 13:54:10:560 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[R U sure? In my experience, SWT is buggy as hell (well i do not say SWING is flawless, but besides the parser which is awful, the rest od the FW is decent).

SWT is far not so flexible as SWING: Try to put items to a Combo, where every item  consists of a picture and formatted text (but there are even more exotic settings).  I am sure you can do it somehow (or maybe not so sure) but it is far from being natural (whereas in SWING it is). 

ATM i am developing a browser based on swt.Browser+Mozilla and i have to say that swt.Browser is quite buggy...

All in all SWT is a nice stuff - but i agree wit ppl that mainly for smaller apps....&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>128.131.111.197</ipAddress>
<date>17 Feb 2005 21:14:32:484 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[SWT for smaller apps?
Huh, how 'bout Eclipse, guys?? It's a pretty large app, and it does quite well, thank you very much. 

Also, Thinking that SWT is not MVC is ignoring JFace. Granted, Swing uses MVC to a much larger extent, but that's its failing as much as it is its strength.

Swing is very good in theory. But for large client apps, it still has not proven that it can deliver (see NetBeans, which is still way too slow to be useful IMHO). So I would reverse the comment made by some people: Swing for small apps, SWT for large ones (esp. with the help of the RCP).
&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>207.228.164.136</ipAddress>
<date>03 Mar 2005 03:35:42:297 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA["SWT for smaller apps? Huh, how 'bout Eclipse, guys??"
I agree Eclipse is a hog.. but SWT doesn't require eclipse. In fact you don't even need the JRE.. so you can even compile it down to a binary with gcc .. or better yet Excelsior Jet.

Did I mention no JRE?&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>200.85.34.114</ipAddress>
<date>02 Apr 2005 04:27:42:235 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[On the comments on NetBeans.  NetBeans 4.0 with JDK 1.5 is so fast I can hardly believe it.  I agree that NetBeans < 3.5 on a 1 GHz machine was not so quick, but the new JDK really seems to have helped the speed of Swing apps.  I have no complaints with MODERN Swing in performance or model.  On deployment, think about the difference between something like JBidWatch and Azureus Bittorrent Client.  One download for JBidwatch and you run it with "java -jar".  Azureus has 7 different architectures.  4 Linux targets...  OMG!  And I couldn't even get the one for gtk running because my gtk libs were too new.  If it weren't for that downside I'd consider using SWT.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>207.141.5.253</ipAddress>
<date>02 Apr 2005 10:35:06:380 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[I like the Eclipse RCP verry mutch, but it seems to work only well on the Windows platform. For applicatins that have to run on heterogeneous operating systems I think Swing is the better solution.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>83.129.183.24</ipAddress>
<date>06 Apr 2005 19:55:26:145 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[I'm with you man. Check out azureus... piece of cake. (thanks azureus guys!)&#x5d;&#x5d;&gt;</body>
<author>codeater</author>
<email/>
<website/>
<ipAddress>80.58.33.44</ipAddress>
<date>28 Apr 2005 22:48:42:128 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: I've written my last Swing app... (SWT is *so* the business...)</title>
<body><![CDATA[currently, I really prefer swing because thats what i am use to. ... but i have issues with slow startup time, memory usage and some simply things joptionpane dose not operate like its native counterpart ... So swt looks like a good alternative... but the though of converting all my forms is painful...  i will wait and see if the next version of java will bring any acceptable performance otherwise i will have to convert those forms.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>cgregjam@hotmail.com</email>
<website/>
<ipAddress>72.27.74.3</ipAddress>
<date>01 Feb 2006 07:43:42:514 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/02/16/1108578422883.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>The shocking truth about ejbRemove()</title>
<excerpt/>
<body><![CDATA[<p>
ejbRemove() doesn't *always* get called, at least on WebSphere 5.0. Well... it's shocking truth to me, but probably to none of you guys, and I'm not sure that it even should. I don't know why I assumed that it did, it just *seemed* that it would given that it's a lifecycle method.
</p>
<p>
I've been using a strategy where I register a JMX object in ejbCreate() and unregister it in ejbRemove(). Seemed pretty reasonable thing to do.... until I found all these lingering JMX objects without matching EJBs. Hmmm... A little bit of googling and <a href="http://www.whizlabs.com/websphere/websphere-notes.html">there you go</a>:
</p>
<p>
<i>
A session bean can miss a call to ejbRemove() if there is a container crash or the bean throws a runtime exception. Source: HF-EJB 221 (HF refers to Head First EJB by Bert Bates and Kathy Sierra)
</i>
</p>
<p>
Bugger. Now I wrap the body of each exposed interface method with a catch block for Runtime Exceptions, release my resources, then rethrow the exception. I ain't pretty, but it's more reliable.
</p>&#x5d;&#x5d;&gt;</body>
<date>17 Feb 2005 05:27:02:883 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/02/21/1108977237313.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>My Favorite Developer Book of 2004</title>
<excerpt/>
<body><![CDATA[<p>
And it's not about software development.... directly... but it has helped my productivity more than any other title I've read in my career. 
</p>
<p>
It's called <a href="http://www.amazon.com/exec/obidos/tg/detail/-/0735620407">Take Back Your Life</a> and it's a book on using Outlook to get your world it order. Don't be put off by the Outlook thing, the ideas work in any software package that offers categorised tasks, calendar and contacts, so Evolution would work great too.
</p>
<p>
The ideas in this book have, quite honestly, changed my entire thinking about getting organised and staying organised. What gets me is that the thing is so readable, and so practical. Some of the ideas that really shifted me were:
<ul>
<li><b>To-Dos without Dependencies</b>: Instead of putting incredibly broad items in your lists, make sure ever item has no dependencies. Don't write "Fix lightbulb", write "Purchase 75W Bulb at Hardware".</li>
<li><b>Categorise by Place</b>: Categorise the items in your todo list by the place where you actually do them! All my "online" stuff goes together, all my "desk" stuff goes together, all my "call people" stuff goes together. It saves stacks of time.</li>
<li><b>Turn off the ding</b>: It's not realistic to respond to all emails within 5 minutes. So turn off the popup ding. Do your email once or twice a day. If you get email after 5, and then reply at 9 the following morning, they're waiting 16 hours already. So why not formalise and make sure that people get a response once a day. You'll get more work done, and you'll get more respect from them. Ditto for your phone, turn it off and give yourself some blocks of hours to get "in the zone". </li>
<li><b>Collection points</b>: Most of us have around 25 collection points in our life - places we keep incoming information and notes. Multiple inboxes, voicemail boxes, sticky notes, notebooks from design meeting, bits of paper that we leave on the dining room table, you name it. The biggest of all is our head. The thing about your head is that all that stuff you cram in and seem to forget about goes into your subconscious and comes back to you when there's space. Normally at 2AM in the morning. So instead of 25 collection points narrow it a half dozen. Everything actionable in my world goes into "Categories: None" - the Outlook "catch all" category. It stays here till I categorise it (by location, you'll recall). These days, with the PDA around me most of the time, my recall is pretty much 100%. It all get captured. And in a single place. Even emails that require action get dragged there, so my inbox is no longer my "todo" list.</li>
<li><b>And much, much, more</b>. I've gotta say this book is an essential read if you feel your world is disorganised. It is *so* worth it. 
</p>
</ul>
<p>
I've been at "the program" for around 5 months and I'm still loving it. This one essential developer resource, and, for mine, the book that has most helped me improve my software delivery in 2004. Recommended.
</p>
&#x5d;&#x5d;&gt;</body>
<date>21 Feb 2005 20:13:57:313 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/02/25/1109361856615.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>First Experiences with CruiseControl</title>
<excerpt/>
<body><![CDATA[<p>
After reading <a href="http://www.pragmaticprogrammer.com/starter_kit/auto/index.html">Mike Clark's</a> amazing book on Automation, I've been pumped to take a look at Continuous integration with <a href="http://cruisecontrol.sourceforge.net/">CruiseControl</a>. We've been using Anthill for our build process, so that'll give me a benchmark to compare.
</p>
<p>
First of all, my experience with Anthill has been pretty sensational.  Its got a very smick UI and seems to work pretty well as spec'd on the tin. The install is a matter of dragging the war file into your webserver, and (mostly) using the web ui to configure the rest. Little bit of commandline CVS stuff for your project by hand, but largely pretty much "just works" - so bit kudos to those guys.
</p>
<p>
CruiseControl is a little more work for your result. There are xml config files to build and edit, there are cvs commandline things to do to get your directories setup (if you don't want to hardcode passwords, etc). But you a rewarded with abuntant power for your investment. The doco is solid, and if you follow the worked example you'll stay mostly out of trouble.
</p>
<p>
To capture some of the dramas I had: (all of which were resolved with the latest <a href="http://confluence.public.thoughtworks.org/display/CC/Frequently+Asked+Questions">FAQ</a>)
<ul>
<li>Couldn't find my junit task in ant.... turns out I needed to modify my launching config.xml to use the <a href="http://confluence.public.thoughtworks.org/display/CC/AntScriptAttribute">AntScript</a> attribute so that ANT_HOME was actually being located properly. 
<li>Couldn't get CVS to recognise any changes in a tagged branch in my respository... which turns out needing to specify the "tag" attribute to match my branch name in the cvs call in config.xml.
<li>Integrating nicely as a service under unix. I managed to find a nice Unix shell script via the FAQ that let's you do all those nifty start/stop operations (and sets up the ports for the JMX console, which, if you don't specify a -port on startup, ends killing off the Console page in your webapp).

</ul>
</p>
<p>
Overall I'd say that, on first impressions, CC seems a lot more powerful than Anthill. The GUI definitely isn't as nice, but the power is pretty unbelievable. 
</p>
<p>As a straight nightly build system, I'd probably go with Anthill (since it's a snap to install and very easy to learn for developes). But for raw power, there's something very flexible about cruisecontrol. One feature that I love is the ability to see who has done commits since the last automated build. Great for identifying "you broke the build" candidates, who, at the current site I'm at, need to put a $1 in a jar.
</p>
<p>
More impressions once we've given cruise a bit more of a workout, but definitely worth a look if you've been thinking about setting up a continuous build process.
</p>&#x5d;&#x5d;&gt;</body>
<date>26 Feb 2005 07:04:16:615 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/03/04/1109973628009.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Getting very native with JNIWrapper...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
After much delay, I finally bought a copy of <a href="http://www.jniwrapper.com/">JNIWrapper</a>, which is one very cool piece of software. Basically, it's a set of libraries that gives you access to the Win32 libraries without the need of writing your own C wrapper classes for JNI.
</p>
<p>
And it's not just for Win32 either - COM is supported out of the box! Run their nifty swing app, select the COM library you want to use (from the list they prepopulate from your registry!), set where you want it dump the Java wrapper classes, and boom. Java COM Factory wrappers, interfaces, and concrete classes are all there, ready to go - including all those dodgy Win32 BStr classes you need when calling COM. You can even tell your COM factories to instantiate ApartmentThreaded, Multithreaded and all that other Win32 goodness that really only David Chappell understands anyway.
</p>
<p>
Best of all, the documentation and tutorial examples are first class. By the end of my first session, I had created Java stubs for the COM object I was into, and made a few calls to see all was working as planned. Any that's with pretty vanilla Win32 skills on my end. 
</p>
<p>
If you're not into COM, and need to call straight Win32 stuff, types are provided for all the standard Window enums, and you can roll your own if you have to. The exception handling is awesome, Win32 faults get converted to Java exceptions, <code>getLastError()</code> works, and it's all memory-safe to boot. 
</p>
<p>
They even ship with a "WinPack" library that puts a Java wrapper round a ton of common Win32 things you're likely to want to do (like the Registry, Filesystem Watches, Window operations like transparency, Tray icons and all that nativey stuff). But if what you want is not in there already, it's pretty trivial to call *any* Win32 routine if you know the signature.
</p>
<p>
If Win32 is not your bag, it ships with versions for Linux/Mac too! I am loving the power, and at $US120 for a bundle of *both* Win32 and Unix libraries, it's an absolute steal - and we don't have to mix up any C code in our project! Great work, guys!
</p>&#x5d;&#x5d;&gt;</body>
<date>05 Mar 2005 09:00:28:9 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Getting very native with JNIWrapper...</title>
<body><![CDATA[I looked at JNI wrapper and strongly considered using it.  It looks like the best of the various commercial alternatives.  In the end, I found the <a href="http://java.sun.com/docs/books/jni/html/stubs.html">shared stubs</a> method in Sun's JNI book easier to use.  It's really a great starting point for someone just getting started with JNI.<p>
Since I'm a bit of a type-safety nut, I modified the shared stubs code to be completely package private.  Instead, the package exposes a mechanism where users supply an interface and a library to supply the native functions.  As long as the method signatures in your interface match the function signatures in the library everything is good.  In short, you get type-safety all through the Java code.<p>
The hard part for someone with little C experience like me, was rewriting the SPARC and x86 assembly language part of shared stubs in portable C.  Now, the same C code supports SPARC, x86, and MIPS.  Additional processors are hopefully just a recompile away.
<p>
Bug me if you're interested an I'll try to get permission to release it as open-source.  If you need COM support, <a href="https://com4j.dev.java.net/tutorial.html">com4j</a> may also be worth your while.
<p>
Does anybody know anything about the rumored fast-and-easy JNI Sun developed.  Is it just a rumor?&#x5d;&#x5d;&gt;</body>
<author>Curt Cox</author>
<email>curt@developerx.com</email>
<website/>
<ipAddress>192.160.145.4</ipAddress>
<date>05 Mar 2005 10:26:43:324 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Getting very native with JNIWrapper...</title>
<body><![CDATA[I have tried to use Winpack, however there is a problem.  Some of Winpack's classes imports other packages which were not in Winpack itself... 
Example:
Import com.jniwrapper.util.EnumItem
import com.jniwrapper.util.Logger
"util" is not included in Winpack.
Thank you!&#x5d;&#x5d;&gt;</body>
<author>pepedocs</author>
<email>pepedocs@yahoo.com</email>
<website/>
<ipAddress>192.146.101.26</ipAddress>
<date>27 Oct 2005 16:58:21:354 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Getting very native with JNIWrapper...</title>
<body><![CDATA[You need to include jniwrap.jar in your classpath along with winpack.jar. Winpack relies on jniwrap to perform the actual Win32 calls.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>28 Oct 2005 05:26:08:145 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/03/14/1110784325715.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Fun with StatCVS</title>
<excerpt/>
<body><![CDATA[<p>
I first learned about <a href="http://statcvs.sourceforge.net/">StatCVS</a> on a <a href="http://www-128.ibm.com/developerworks/library/j-statcvs/">developerWorks</a>, and it looked pretty darn cool. Basically it's a tiny Java app that crunches CVS logs and produces a bunch of neat HTML reports. It produces stuff for your project as a whole, and by individual developer. You can see who works the most in what parts of the source tree, what time of day you do your most commits, what percentage of mods vs new classes are committed, and all sorts of cvs-related administrivia.
</p>
<p>
It certainly passes the "Just Works" test - I was up and running in under 5 minutes - and the graphs it produces are really quite cool. Interesting to know that my most prolific commits happen between 9-10 AM and 3-4 PM, and typically on a Thursday. Whatever that means. I also spend 40% of my time on maintance and 60% on new code, which means we must have added a stack of features in the last year!
</p>
<p>
The only thing lacking is a way to start a date range after the initial import of your project (since we migrated a stack of source from another version control system to CVS, all the stats are skewed for the guy who did the original commit).
</p>
<p>
Anyways, a very nifty utility to play with for a bit of fun.
</p>&#x5d;&#x5d;&gt;</body>
<date>14 Mar 2005 18:12:05:715 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Manual trackback</title>
<body><![CDATA[<p>Trackback didn't make it through ... <a href="http://dowhatimean.net/2005/03/statcvs-passes-glen-smiths-just-works-test">Actually, you can limit the date range.</a></p>

<p>Cheers, Richard</p>&#x5d;&#x5d;&gt;</body>
<author>Richard Cyganiak</author>
<email>richard@cyganiak.de</email>
<website>http://dowhatimean.net/</website>
<ipAddress>217.88.120.235</ipAddress>
<date>15 Mar 2005 04:24:02:638 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>I Should Have Read the Manual!</title>
<body><![CDATA[<p>
Richard, that's sensational news! I've giving it a go today! I can't believe I didn't scan the manual, just the commandline args. You've actually got a top-level section titled "Setting a Start and End Date". Feel free to punch me in the arm next time you're in Canberra.
</p>
<p>
<a href="http://www.madbean.com/blog">Matt Quail</a> also dropped me a line saying that I must have an eval of <a href="http://cenqua.com/fisheye/">FishEye</a> - which I will do at some point. I am a huge clover fan, and this product also looks pretty sharp.
</p>
<p>StatCVS has really opened my eyes to some new management reporting options which I'm keen to explore a little more as part of our nightly build. And the guys on the dev teams love looking at graphs of their progress. Who wouldn't? Very motivating.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>15 Mar 2005 05:33:55:890 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/03/17/1111089675871.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Findbugs Rocks.. and clone() can sure be tricky..</title>
<excerpt/>
<body><![CDATA[<p>
After watching a <a href="http://findbugs.sourceforge.net/">FindBugs</a> session on JavaOne Online (2004), I am totally hooked. I've played with <a href="http://pmd.sf.net">PMD</a> and 
<a href="http://checkstyle.sf.net">CheckStyle</a> before (and they are both very cool), but the neat thing about FindBugs is that it runs on your bytecode rather than your source - so it picks up a bunch of things the other tools don't.
</p>

<p> 
I have seen Findbugs before, and even downloaded it, but it didn't seem as "slick" as the other options, so I didn't really give it the time it deserved. After giving it a workout of our source tree, I'm totally impressed. This thing is definitely the goods - and the false positives are really very low.
</p>

<p>
One thing that it did flag wildly about were a few of my pojos that returned arrays. For example, stuff like:
</p>

<p>
<pre>

    public Foo[] getFoos() {
        return foos;
    }

</pre>
</p>

<p>
which looks pretty innocuous to me... but then you realise that <code>foos</code> (the array itself) is mutable, so your clients can do stuff like:
</p>

<p>
<pre>
    foo[0] = new Foo("Do Evil", -1);
</pre>
</p>

<p>
Eeek. Not so good. So I did <a href="http://www.javapractices.com/Topic3.cjp">some</a> <a href="http://renaud.waldura.com/doc/java/array-operations.shtml"> reading</a>. So one simple fix might be to clone it:
</p>

<p>
<code>

    public Foo[] getFoos() {
        return (Foo[]) foos.clone();
    }
</code>
</p>

<p>
The gotcha is that clone() is only shallow. So the Foo instances themselves are still subject to tampering... which was fine for me, since each Foo instance in my array was actually immutable (only getters which return primitives). 
</p>

<p>
But what to do if the objects themselves are mutable? Trickier problem. Maybe write a copy constructor for Foo, then roll your own "iterate, copy, and append to a fresh array" type code? Could be nasty on the performance front.
</p>

<p>
Anyways, big props for the FindBugs guys. Very cool tool and definitely part of my toolkit from now on.
</p>&#x5d;&#x5d;&gt;</body>
<date>18 Mar 2005 07:01:15:871 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/03/19/1111195473434.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>How To Speed Up PDF Reader on Windows</title>
<excerpt/>
<body><![CDATA[<p>
Ok. Not strickly Java-related, but since a lot of Java tools ship with PDF manuals, you need Adobe Reader. What's been bugging me is how long Adobe Reader takes to start up (on Windows). It loads a stack of plugins that you probably won't need for the majority of your work - and on my Thinkpad takes forever just to start up.
</p>
<p>Well enter <a href="http://www.tnk-bootblock.co.uk/prods/misc/">Adobe Speed Up</a> - a neat little freeware utility that you can run once to disable all your excess plugins. It's configurable, but the default options are great. I've tried it with Reader v6 & v7 and it works outstandingly. My Adobe reader now starts up in under a second. 
</p> 
<p>
Great tool. Just works. Recommended.
</p>&#x5d;&#x5d;&gt;</body>
<date>19 Mar 2005 12:24:33:434 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Wow!</title>
<body><![CDATA[Truly amazing. It just started in no time at all (well ;). The best tip I got this year. Thanks!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>84.216.43.200</ipAddress>
<date>07 Apr 2005 18:35:08:180 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/03/24/1111637482096.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>First Experiences with IBatis SQL Maps</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I've been playing around with Perisistence frameworks lately, after been inspired by a Hibernate presento at our local <a href="http://www.cjugaustralia.org">JUG</a>. After messing around with Hibernate config issues for ages, I decided to scout around for a lighter weight alternative for my little app and had my first experience with <a href="http://www.ibatis.com/common/sqlmaps.html">iBatis SQL Maps</a>. All I can say is... Wow!
</p>
<p>
I've played around with Hibernate before, and it is power unlimited. But rather than getting lost in the Hibernate magic for a little lightweight app I'm working on, I thought I'd shoot for something a little less complicated. Enter SQL Maps...
</p>
<p>
What I love about this product is that:
<ol>
<li> it's only a coupla jars; </li>
<li> it's simple to see what is going on, and tune your SQL statements accordingly; </li>
<li> your code gets all the semantic goodness/cleanness of an O/R solution; and </li>
<li> there is very little magic. </li>
</ol>
Essentially, it's a very lightweight persistence solution that gives you most of the semantics of an O/R Mapping toolkit, without all the drama.
</p>
<p>
The general gist is that you develop up a little bit of XML sauce to handle the actual query marshalling, ala:
</p>
<p>
<pre>
<escape>
   <select id="getAllMessageDTO" resultClass="au.com.bytecode.messaging.value.MessageDTO"> 
        SELECT id, author, sentdate as sentDate, storagedate as storageDate, subject, content 
        FROM messages 
        ORDER by storagedate DESC
    </select>
</escape>
</pre>
</p>
<p>
Then you call the library with something like...
<pre>
   List allMsgs = sqlMap.queryForList("getAllMessageDTO",null);
</pre>
and get back a list of populated objects. Admittedly not quiet as elegant as Hibernate, as the list isn't live, but cool none the less. 
</p>
<p>
You can, of course, put #property# type tags in the SQL which will map to an introspected Javabean property of the object you pass in, so it's very simple to do all standard db select/insert/update/delete goodness.
</p>
<p>
The doco is very solid, with tutorial/reference/developer PDFs all in good form. As a lightweight persistence library, where Hibernate would be overkill, but where JDBC is just clunky, this library has really found a sweet spot. I'm sold. Very good stuff.
</p>&#x5d;&#x5d;&gt;</body>
<date>24 Mar 2005 15:11:22:96 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: First Experiences with IBatis SQL Maps</title>
<body><![CDATA[Good intro for IBATIS :) *applause*&#x5d;&#x5d;&gt;</body>
<author>Ian Lim</author>
<email>mallim.ink@gmail.com</email>
<website>http://www.mallim.per.sg</website>
<ipAddress>202.156.2.210</ipAddress>
<date>25 Mar 2005 12:17:20:635 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: First Experiences with IBatis SQL Maps</title>
<body><![CDATA[I like iBatis too.  I just wonder why so many people want to use Hibernate instead.

I looking forward for the next iBatis version 2.2 or up.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>72.134.254.89</ipAddress>
<date>31 May 2006 21:06:58:872 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/03/29/1112098541341.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Virus Scanning on Windows (Go F-Prot!)</title>
<excerpt/>
<body><![CDATA[<p>
Well, my McAfee license has expired and I'm in the market for a new Virus Scanner. This time I'm after something that won't bring my machine to a grinding halt, but still has current signature goodness. Enter <a href="http://www.f-prot.com/">F-Prot</a>.
</p>
<p>
These guys have been around forever - I remember their DOS software running on our PC Labs in undergrad circa '92 - but their current offerings are just great. You can get editions for Windows, Linux & BSD (the Unix variants are free for home use), and their Windows software is just $29 - with a liberal license that allows you to install it on up to 5 machines. How good is that?
</p>
<p>
Add to the mix that it was designed from the group up to be resource friendly (both in memory consuption and CPU) - and you've got yourself one sensational virus scanning option - that won't strangle your PC while running.
</p>
<p>
I've been trialing it for the last couple of weeks, and it's just great. I'm be happily registering when my trial expires, and installing on my two home PCs plus a notebook. Great stuff!
</p>&#x5d;&#x5d;&gt;</body>
<date>29 Mar 2005 22:15:41:341 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>General</category>
</blogEntry>

Importing 2005/04/12/1113302819366.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>SWT Designer is unbelievably good software!</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
If you develop SWT apps, or you wish you good develop non-sucking Java GUIs, then you *have* to have a look at 
<a href="http://www.swt-designer.com/">SWT Designer</a>. This Eclipse plug-in is so good I just want to rave. 
</p>
<p>
Some of the things I just want to rave about are:
<ol>
<li>There are no magic "untouchable" sections of your codebase (ala my early JBuilder experiences where you had all these <code>//DO NOT EDIT</code> sections)</li>
<li>Refactoring all still works - in fact the two-way code editing is first class. I added a setHeaderVisible() to my table viewer by hand in the source, and when I switch back to design view it had picked up the changes. </li>
<li>No need to create any special "Designer" projects to use the tool. Open up your current hand-developed codebase, right click on the java file and select /Open With.../Designer. Just works. (That said, there are also wizards for common tasks, but I haven't taken them for a spin yet).</li>
<li>The GUI editor just rocks. I can drag and drop layouts and composites and controls - and the visual hierarchy of components really helps me understand how the underlying codebase hangs together. The Properties/Events tab is also very nicely implemented (including changing properties of your layout data). You can also right click on an object and select the event you want to handle - whatever works for you!</li>
<li>No special jars to ship with your app - this baby just *understands* SWT apps. That means if you buy a copy, your buddies on the CVS who do this stuff by hand don't need to - and you won't stuff things for them. </li>
<li>Performance is great. On my two year old Athlon box, this thing is a little slow to start, but after that I don't notice it</li>
<li>Comes with a "Preview" mode - so you can see your design "running" without the need to launch your app.</li>
<li>JFace support is out of the box. I do most of my stuff in JFace these days to get that touchy-feely MVC goodness - and the support for JFace stuff is excellent. Select a TableViewer and then click on the ContentProvider? You get a list of classes in your project that implements the interface. Small stuff, but the stuff that screams "this was developed by people who know how to work smarter". </li>
</ol>
</p>
<p>
I've only used it for two days but I've been wanting this tool for my entire Java life. In darker days I used to program Visual Basic for a living - and this tool is *easily* as good from a GUI point of view, and heaps better from a two-way coding perspective. 
</p>
<p>I've <a href="http://blogs.bytecode.com.au/glen/2005/02/12/1108169609271.html">raved about SWT before</a>, in particular how I think it is the great hope of the Java Desktop... but if you've given up on Java Desktop apps, it's definitely time to have a second look. SWT/JFace plus SWT  Designer is just a killer combination. It's certainly not cheap at $USD249 - but I'm going to play with my eval copy for another 12 days, and I think by then I will probably be totally infected. 
</p>
<p>
Kudos to the boys at Instantiations. First class product. Give it an eval - you'll be pleasantly surprised.
</p>
&#x5d;&#x5d;&gt;</body>
<date>12 Apr 2005 20:46:59:366 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: SWT Designer is unbelievably good software!</title>
<body><![CDATA[$249 sounds like a pretty great deal if the product is as good as you say!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>65.215.72.62</ipAddress>
<date>13 Apr 2005 00:46:59:602 +1000</date>
<state>approved</state>
</comment>
<trackback>
<title>Glen Smith - SWT Designer is unbelievably good software!</title>
<excerpt><![CDATA[<p><a href="http://blogs.bytecode.com.au/glen/2005/04/12/1113302819366.html">Glen Smith - SWT Designer is unbelievably good software!</a>:</p>
<blockquote><p>
If you develop SWT apps, or you wish you good develop non-sucking Java GUIs, then you *have* to &#x5d;&#x5d;&gt;</excerpt>
<url>http://www.weimo.de/node/136</url>
<blogName>Markus Weimer online</blogName>
<ipAddress>212.227.127.28</ipAddress>
<date>12 Apr 2005 23:03:45:437 +1000</date>
<state>approved</state>
</trackback>
</blogEntry>

Importing 2005/04/14/1113510049579.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Converting .ico files for use in SWT apps</title>
<excerpt/>
<body><![CDATA[<p>
So you've got yourself a snazzy .ico file that you'd like to use in your funky new SWT app. Next step is to find an app that lets you convert .ico files to .gif files (or .png or whatever) that will play with SWT.
</p>
<p>
To save you some time, if you're a Windows user, let me point you to the freeware <a href="http://www.irfanview.com/">IrfanView</a> which will let you <i>batch convert</i> a whole directory of ico files to gif, png, or whatever. It will also let you set the transparency colour and all that other goodness.
</p>
<p>
If you're looking for some icons for your commercial apps, let me just point you to <a href="http://www.iconexperience.com/">IconExperience</a> and tell you that the money is so worth it. I bought the whole set and they come as .ico and .png (with a pdf catalog to browse). They are just awesome.
</p>
<p>
If you're just after some funky window .ico file for free, check out that ones at <a href="http://www.foood.net/">Fooods Icons</a>. The iCandy Junior set looks pretty darn funky.
</p>
&#x5d;&#x5d;&gt;</body>
<date>15 Apr 2005 06:20:49:579 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
<comment>
<title>Re: Converting .ico files for use in SWT apps</title>
<body><![CDATA[you don't have to. SWT can read .ico files and does so on all platforms, according to a post in the eclipse.platform.swt newsgroup today.&#x5d;&#x5d;&gt;</body>
<author>Frank Sauer</author>
<email/>
<website>http://www.volantec.biz</website>
<ipAddress>24.73.61.162</ipAddress>
<date>15 Apr 2005 12:10:25:340 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Converting .ico files for use in SWT apps</title>
<body><![CDATA[<p>
Frank, You are so right! I don't know why I thought it wouldn't. I'm even working on Eclipse 2.x and that supports it too. I've just tested this and it's just fine. Now if only it honored the transparency....
</p>
<p>
Thanks for the tip!
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>18 Apr 2005 05:21:03:167 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/04/17/1113771814864.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Learning the Art of GUI Design...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Like many of you, I spend the vast majority of my time working on backend code. Hacking infrastructure libraries, EJBs, web framework code and all the unit tests that live along side them.
</p>
<p>
One thing I don't have, and have never really had, is any real sense of GUI design. Even in my VB days, I was the king of the FrankenGUI. But since getting so pumped about <a href="http://www.eclipse.org/articles/Article-SWT-Design-1/SWT-Design-1.html">SWT</a> (after reading the excellent <a href="http://www.apress.com/book/bookDisplay.html?bID=351">The Definitive Guide to SWT and JFace</a>) and then finding the most incredible GUI tool on the planet (<a href="http://www.swt-designer.com/">SWT Designer</a>) - I've come to realise I'm learning all the tech of GUI design without the softer "arty" design and usability skills.
</p>
<p>
To that end, I've bought a copy of <a href="http://web-bloopers.com/gui-bloopers/">GUI Bloopers</a> by Jeff Johnson. Despite the terrible name, this book is actually designed for programmers without GUI skills to learn the basics of usable design. Don't be turned off by the title, there is a gold mine of info in here, and I'm really excited about learning some basic design skills that can help sharpen my new GUI passion. 
</p>
<p>
Anyone else got any good resources/ideas for learning the skills of a slick and usable GUI design?
</p>&#x5d;&#x5d;&gt;</body>
<date>18 Apr 2005 07:03:34:864 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>More Resources</title>
<body><![CDATA[I provide a set of Don't and Do's that address the most frequent visual design problems I've seen in design reviews. See "First Aid for Swing" at http://www.jgoodies.com/articles/

<p>
I like Jeff's Bloopers book too and often recommend it. Professionals just need to read the contents and check back if they don't know/remeber a blooper.

<p>
I can wholeheartly recommend the thin book "Designing Visual Interfaces" by Kevin Mullet & Darrel Sano. They describe almost everything necessary to design well. 

<p>
If it comes to design with an emphasis on usability Joel Spolsky's "User Interface Design for Programmers" is useful and fun to read.&#x5d;&#x5d;&gt;</body>
<author>Karsten Lentzsch</author>
<email>karsten@jgoodies.com</email>
<website>http://www.jgoodies.com</website>
<ipAddress>84.141.188.11</ipAddress>
<date>20 Apr 2005 04:42:16:607 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Learning the Art of GUI Design...</title>
<body><![CDATA[<p>
Karsten, thanks for the resources! 
</p>
<p>It's weird, but I was just watching your talk on GUI Design at JavaOne Online yesterday (they still haven't put up your data binding talk yet - which I'm very interested in exploring).
</p>
<p>
Awesome presentation by the way. Very accessible. 
</p>
<p>
For others who posted comments to this entry yesterday, a blog crash yesterday took them out without saving. I'm reposting those contributions here from my email notifier.
</p>
<p>
<hr/>
Comment from Anonymous on 19 Apr 2005 15:25:59 EST in response to Learning the Art of GUI Design...
</p>
<p>
Johnson is a good start for a "thou shalt/thou shalt not" casting of some of the issues involved in writing GUIs. Check out Alan Cooper's <a href="http://www.amazon.com/exec/obidos/tg/detail/-/0764526413/qid=1113887791/sr=8-2/ref=sr_8_xs_ap_i2_xgl14/102-9720628-8236922?v=glance&s=books&n=507846">About Face 2.0</a> and Larry Constantine's <a href="http://www.amazon.com/exec/obidos/tg/detail/-/0201924781/qid=1113887996/sr=1-1/ref=sr_1_1/102-9720628-8236922?v=glance&s=books">Software for Use</a> for more diving/surfacing potential. Also start to notice what makes a usable or non-usable GUI when YOU are the user. 
</p>
<p>
<hr/>
Comment from Marty Backe on 19 Apr 2005 10:29:47 EST in response to Learning the Art of GUI Design...
</p>
<p>
I second your thoughts on GUI Bloopers. One of the best books on GUI considerations that I've read.
</p>
<p>
<hr/>
Comment from Tom C. on 19 Apr 2005 06:51:50 EST in response to Learning the Art of GUI Design...
</p>
<p>
I haven't read it, but Joel Sposky's book on ui design is very popular. If you look for it on Amazon, you'll find references to other books, so even if you don't get Joel's book, it can help find others. 
</p>
<p>
<hr/>
Comment from Anonymous on 19 Apr 2005 06:50:43 EST in response to Learning the Art of GUI Design...
</p>
<p>
<a href="http://developer.apple.com/ue/">http://developer.apple.com/ue/</a>
</p>
<p>
<hr/>
Comment from <a href="http://www.clientjava.com/">Scott Delap</a> on 18 Apr 2005 23:25:27 EST in response to Learning the Art of GUI Design...
<p>
Glen, you might want to go back through some of the posts on my site <a href="http://www.clientjava.com/">www.clientjava.com</a>. I've posted a number of links to sites over the last 6 months that have examples of visual GUI patterns. 
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>20 Apr 2005 06:38:06:815 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/04/21/1114122871436.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Two Support Experiences Worth Raving About...</title>
<excerpt/>
<body><![CDATA[<p>
Time to brag about two companies that I've been dealing with lately that have offered me exceptional support.
</p>
<p>
The first great experience was from the guys at <a href="http://www.minq.se/products/dbvis/">DbVisualizer</a> (one very cool database query tool with an astoundingly good Swing interface). For $99, this tools is really great value, and well worth the dollars. What has surprised me is that, even at the lower end of the $ spectrum, the support has also been absolutely outstanding. 
</p>
<p>
I've been having problems with DB2 nicknames on a quite old verson of DB2. Each time I've emailed Minq I've had a response same day with updates and fixes that won't "officially" be released till later in the year. No fobbing off, just genuine interest and concern with the problem - even though our version of DB2 is pretty ancient. These guys are quality - full stop.
</p>
<p>
My second great support experience has been with the guys at <a href="http://www.swt-designer.com/">SWT Designer</a>. I've sent a bunch of emails to support and all of them have been answered in a few hours (I don't know when they sleep since I'm in GMT+10) with, again, a genuine interest in helping out. They're also including a bunch of my recommendations in the next release of the product (which seems to be every few weeks). Again, awesome product, awesome service.
</p>
<p>
I'm interested whether this is just an "excellence" as a culture thing. If you put out a first class product, do you have a culture of "first class" that translates to the pride you take in your support operations too?
</p>
<p>
Interested in hearing any other recommendations from people that have had "first class" experiences dealing with a Java vendor. To qualify, they have to be "support experiences worth raving about". 
</p>&#x5d;&#x5d;&gt;</body>
<date>22 Apr 2005 08:34:31:436 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/04/29/1114816185894.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Progress on SWT Port of PasswordSafe</title>
<excerpt/>
<body><![CDATA[<p>
Things are going well on my little porting project of <a href="http://passwordsafe.sf.net/"/>PasswordSafe</a> to SWT. Here are some grabs of the screenshots so far running on Linux:
</p>
<p>
<img src="./images/2005/LinuxMainWindow.gif" alt="SWT on Linux Main Window">
</p>
<p>
<img src="./images/2005/LinuxEditDialog.gif" alt="SWT on Linux Edit Dialog">
</p>
<p>
As a point of comparison, here's the original Win32 application that I've been trying to clone:
</p>
<p>
<img src="./images/2005/WindowsMainWindow.gif" alt="Windows Main Window">
</p>
<p>
<img src="./images/2005/WindowsEditDialog.gif" alt="Windows Edit Dialog">
</p>
<p>
First time I ran it on Linux, I found that the SWT Dialog object was completely blank. Turns out I wasn't calling <code>shell.layout()</code> before calling <code>shell.open()</code>. Seems that the Win32 version is more forgiving. 
</p>
<p>
The power of FormsLayout is just awesome. I started trying to do the edit dialog layout with a grid but quickly ended up with five billion composites to get all the alignment working. In the end, the edit dialog is a single formlayout (plus a single grid inside that little groupbox). Much simpler to manage. 
</p>
<p>
Anyways, the open, save, copy/clear clipboard are all done. Next step is to get that add/edit dialog functioning. Found a neat little Java class for a <a href="http://browserlauncher.sourceforge.net/">cross platform browser</a> launcher too, that works just great on Windows and Linux (and apparently Mac, too. But I haven't tested there yet).
</p>
&#x5d;&#x5d;&gt;</body>
<date>30 Apr 2005 09:09:45:894 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/05/05/1115282526541.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>My iMac Mini is on the way...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Resistance was futile. I've finally ordered by iMac Mini and it should be arriving next week preinstalled with Tiger. It was time to replace an ailing Win2k box at home, and for $AUD1100, the time seemed right to take a look at Mac's OS first hand. 
</p>
<p>
Really looking forward to scoping out the Java support, and particularly taking some of my little SWT apps for a spin to see how things look and feel on a Mac. Apparently the Swing Look and Feel (done by Apple) is also very impressive.
</p>
<p>
I've ordered a pretty mimimum spec (512Mb / 40Gb / G4 1.25), since the main use for this box is Web surfing and email, and also as a "test everywhere" platform for my Java development work. But truth be told, I can't wait to see the thing in action running some Java apps!
</p>&#x5d;&#x5d;&gt;</body>
<date>05 May 2005 18:42:06:541 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: My iMac Mini is on the way...</title>
<body><![CDATA[If you want to improve the performance significantly.  swap the hard drive for a 7200 rpm notebook drive.&#x5d;&#x5d;&gt;</body>
<author>Matthew Payne</author>
<email/>
<website/>
<ipAddress>68.164.177.130</ipAddress>
<date>05 May 2005 23:42:54:725 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: My iMac Mini is on the way...</title>
<body><![CDATA[Is there such a thing as a 7200 rpm notebook drive?

What you want is that mini mate encloser that lets you slap in any full height drive.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>24.148.83.129</ipAddress>
<date>06 May 2005 23:49:56:835 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/05/08/1115589411188.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Fun with SWT Tray Icons... it's setMinimized(false)</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've just finished the Tray Icon integration of my PasswordSafeSWT app, and almost all of it was a snack. Catch the minimize window event, hide the window, show the tray icon. Catch the <code>defaultSelection</code> on the tray icon, show the window, hide the tray.
</p>
<p>
The only thing that caught me out was when I double click on the tray icon and show the window, it's still minimized. Really not such a good look. The Shell object supports a <code>setMinimized()</code> and <code>setMaximized()</code>, but nothing like a <code>setRestored()</code>? Normally the SWT method names are so good, you can just guess. But no cigar here.
</p>
<p>
After some help from one of the guys on the <a href="http://www.rssowl.org">RSS Owl</a> project via the (totally awesome) SWT Newsgroup, the bit of missing information I needed was the <code>setMinimized()</code> call takes a boolean arg that, if false, restores the window the way it was. 
</p>
<p>
If you are looking for a way to restore an SWT Shell programatically, <code>setMinimized(false)</code> is your guy. I though I'd write it up here so I can google for it later ;-).
</p>&#x5d;&#x5d;&gt;</body>
<date>08 May 2005 21:56:51:188 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Fun with SWT Tray Icons... it&amp;#039;s setMinimized(false)</title>
<body><![CDATA[Great site! Keep it running!

<p><a href="" title=""></a></p>&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>john.bri1721@bigblog.com</email>
<website/>
<ipAddress>80.58.37.237</ipAddress>
<date>24 May 2005 00:57:15:200 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Fun with SWT Tray Icons... it's setMinimized(false)</title>
<body><![CDATA[Hey, thanks for the tip!
It was *exactly* what I needed!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>18.187.6.200</ipAddress>
<date>04 Dec 2005 04:55:54:510 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Fun with SWT Tray Icons... it's setMinimized(false)</title>
<body><![CDATA[thank you, i've been searching for that solution ^)&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>81.25.45.36</ipAddress>
<date>10 Jun 2006 08:48:50:365 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Fun with SWT Tray Icons... it's setMinimized(false)</title>
<body><![CDATA[Thanks, this really helped!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>122.167.72.247</ipAddress>
<date>15 Jul 2007 18:36:13:131 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2005/05/13/1115976221961.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Mockrunner saves my backside again...</title>
<excerpt/>
<body><![CDATA[<p>
I've <a href="http://blogs.bytecode.com.au/glen/2004/05/10/1084169515000.html">blogged</a> before about my love for <a href="http://mockrunner.sf.net">MockRunner</a>, and it just saved my backside once again... this time from JMS grief.
</p>
<p>
We were debugging some tricky thread sync problems related to JMS, and trying to setup the MQ environment to even write the test was proving just too difficult. Then I was thinking... maybe we could just mock out the whole JMS infrastructure... and sure enough, the latest Mockrunner has JMS mock support!
</p>
<p>
I love the "one stop shop" nature of MockRunner. We're using it to test our EJBs, our Struts actions, our Servlets, our Taglibs, and now, our JMS! The only bit we're not using is the JDBC support. I'm not sure why it gets so little profile as a library. The docs are good, the examples are good, it's easy to understand, it does what it says on the tin. I've also found it a much easier library to grok than the bigger profile stuff.
</p>
<p>
Anyways, it was a doddle to mock up some MQ queues, and then decorate our test with <a href="http://www.clarkware.com/software/JUnitPerf.html">JUnitPerf</a> to put everything under heavy load and try and generate some contentions (there must be more scientific ways to setup thread safety/contentions, but I haven't read enough on it. Tips welcome).
</p>
<p>
Big tick to the MockRunner! Awesome stuff, guys!
</p>&#x5d;&#x5d;&gt;</body>
<date>13 May 2005 19:23:41:961 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/05/16/1116223207339.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>My Mac Mini has arrived! (and my PasswordSafeSWT app looks just fine!)</title>
<excerpt/>
<body><![CDATA[<p>
My Mac Mini has arrived and I'm loving every second of. For my first tinker I installed Eclipse (and Tiger since it wasn't pre-installed but did ship on a CD in the box). You just can't believe how small the mini is till you see it freeing up acres of your desk. My first take is "Boy this OS has got some eye candy!". That dashboard stuff is very swish!
</p>
<p>
For my next trick I ran my ongoing port of PasswordSafe to see what an SWT app looks like running on a Mac. I guess I shouldn't have been surprised, but it looks just great - totally native and very gratifying (but for the app name on the finder menu which appears to be a full classname rather than the window title). Here's the grab:
</p>
<p>
<img src="./images/2005/MacMainWindow.gif" alt="Mac Main Window">
</p>
<p>
I notice that I've still got some work to do on the Edit dialog. I'm using FormLayout so everything is pretty relative, but I've still got the odd percentage in there somewhere, as you can see from the dodgy buttons in the grab below. May simply be a matter of making the initial size of the dialog a little bigger. Need to do some experimenting.
</p>
<p>
<img src="./images/2005/MacEditDialog.gif" alt="Mac Edit Dialog">
</p>
<p>
For reference, I'm running the 1.25 Mini with 512Mb of RAM and using Airport to connect to my DLink wireless router. Works just great - and even on 512Mb of RAM, Eclipse initially seems to be running along just fine. Don't want to comment any more till I've used it in anger for a while to guage just how quick it goes.  
</p>
<p>
Loving that Mac visual goodness, though...
</p>&#x5d;&#x5d;&gt;</body>
<date>16 May 2005 16:00:07:339 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/05/18/1116451906243.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>SWT is good, JFace is great, RCP looks flippin awesome!</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
When I started PasswordSafeSWT, it was a pure SWT app, created  almost entirely using <a href="http://www.swt-designer.com/">SWT Designer</a>. The productivity of that GUI tool is awesome. But the code lacked  a little maintainability with all those anonymous event handlers (as easy as they were to edit graphically), so it was time to clean things up. 
</p>
<p>
For my next step, I moved things over to JFace to take advantage of an "Action-style" app. Like in Swing, JFace gives you an action model where you can associate accellerators, icons and logic using a command pattern, and then attached your newly created actions to toolbars and menus.
</p>
<p>
Because SWT Designer also supports JFace, it was a snack to rearchitect. I now have a dozen self-describing commands, and a very lean main program - all looking much more maintainable. Plus I get status bar management out of the box which was a nice touch.
</p>
<p>
I've also taken advantage of the ListViewer and TreeViewer objects to do the MVC over the main db. Geez I love those controls. The way they've designed them is so pragmatic. I can just pass in my real datamodel and let them do the adapting for me. I could never really grok the complexities of the Model/Adaptor stuff that Swing provided, but the Viewer stuff in SWT was a snack. 
</p>
<p>
Once my JFace app was happily running, I started to think about using a Help system. Javahelp would be an obvious choice, but for that fact that my app looks so native now I didn't want to spoil it. I thought it might be nice to try and use the Eclipse help system somehow. More googling.
</p>
<p>
Then I came across the <a href="http://www.eclipse.org/rcp/">Eclipse RCP</a>. And it looks absolutely awesome. There were some great tutorial links off <a href="http://jroller.com/page/mpermar/20050112">Martin Perez's</a> blog and a great 3 part introduction off the articles section of <a href="http://www.eclipse.org/rcp/"
>RCP site</a> and now I'm very keen to see some more. Since I'm already using the jars for JFace/SWT/OSGI for my standalone app, I'm keen to see how much work it would be to make the jump to a whole RCP app - and then add a pinch of Eclipse help to the equation. I suspect it may be a bit of work, and I'll get a Jface version out the door before making the investment in anything more grand, but I'm definitely keen to explore more.
</p>&#x5d;&#x5d;&gt;</body>
<date>19 May 2005 07:31:46:243 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: SWT is good, JFace is great, RCP looks flippin awesome!</title>
<body><![CDATA[<p>Glen, it shouldn't be very difficult to port your JFace application to RCP. With Eclipse 3.1 recent milestones, this taks it's easier than when I started with Eclipse 3.0.1 :-)
</p><p>
Be sure of taking a look to the Eclipse 3.1 RCP Wizards (New Plugin -> RCP), and the Eclipse Product Exporter to deploy your application, and you almost will be  ready.
</p><p>
Greetings, Martin</p>&#x5d;&#x5d;&gt;</body>
<author>martin</author>
<email>mpermar@gmail.com</email>
<website>http://www.jroller.com/page/mpermar</website>
<ipAddress>193.144.39.201</ipAddress>
<date>19 May 2005 15:47:56:514 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/05/25/1117056271208.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Hacking my first JFace Preferences code</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I'm up to the stage in my PasswordSafe port where I need to add an options dialog. In the original app it's a five-tabbed dialog with quite a few options, so I thought I might have a crack at using JFace Preferences. Wow! 
</p>
<p>
Thanks to some great help from <a href="http://www.java2s.com/ExampleCode/Development-Class/JFacepreferences.htm">this example</a> I was up and running in no time. <a href="http://www.swt-designer.com">SWT Designer</a> supports a wizard for whipping up the GUI of a Preferences Page, so I could hack the example to add just the controls I need to support.
</p>
<br/>
<p>
<img src="./images/2005/JFacePreferencesExample.jpg" alt="JFace Preferences Example"/>
</p>
<p>
<br/>
This is one very cool API. It makes it easy to do the common things that you want to do (ie. read settings, reset settings to defaults, and update your users' persistent settings). Big tick to the Eclipse guys! The more I use JFace the more I love it. It's just got this "real worldiness" about it that makes developing very productive.
</p>
<p>
This options dialog is the only area of the port so far where I've deviated from a complete emulation of the original, but JFace Preferences are just too convenient to pass up (and they look just great). The code ends up being very clean as each page is its own class and is just responsible for those few settings that relate to it. Good stuff.
</p>&#x5d;&#x5d;&gt;</body>
<date>25 May 2005 21:24:31:208 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: Hacking my first JFace Preferences code</title>
<body><![CDATA[When/where are you going to release the port of PasswordSafe?&#x5d;&#x5d;&gt;</body>
<author>Neil Greenwood</author>
<email>ngreenwood@gammaprojects.com</email>
<website></website>
<ipAddress>193.129.246.188</ipAddress>
<date>09 Jun 2005 11:22:21:575 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Hacking my first JFace Preferences code</title>
<body><![CDATA[<p>
Neil, definitely within the week. I've got targets going for mac & win32, and I just need to finish the linux bundle and I've got a 0.1 ready to go for some early review. 
</p>
<p>
As for where, I want to eventually commit it to the pwsafe project back on sourceforge, but the pre-1.0 stuff will probably just get put up on this site somewhere till I'm happy for a more broad distribution.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website></website>
<ipAddress>192.168.1.9</ipAddress>
<date>09 Jun 2005 21:37:18:16 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1118316141575</parent>
</comment>
<comment>
<title>Re: Hacking my first JFace Preferences code</title>
<body><![CDATA[Hi
you said that swt designer has a wizard to build a JFace Preference dialog... I've installed the last version, but I'm not able to find this wizard.. could you help me? Or do you have some useful guide/link to start using JFace Preferences (the above link doesn't work)? I'm writing a tool but now I'm blocked because of preference dialog
Thanks, Dario&#x5d;&#x5d;&gt;</body>
<author>Dario</author>
<email>dario_davi@yahoo.it</email>
<website></website>
<ipAddress>151.74.135.198</ipAddress>
<date>17 Oct 2007 11:24:14:195 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1118353038016</parent>
</comment>
</blogEntry>

Importing 2005/06/07/1118184073080.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>What I should have known about javax.servlet.http.Cookie</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
After beating my head against a wall for three hours wondering why <code>setPath()</code> and <code>setDomain()</code> were just not working on my Cookie object.... I got a brainwave. Maybe it wasn't that the core libraries were broken.... maybe my payload was dodgy. It did have newlines in it, but the object would handle that for me, right?
</p>
<p>
In retrospect I should have read the Javadoc ;-)
</p>
<code>
With Version 0 cookies, values should not contain white space, brackets, parentheses, equals signs, commas,double quotes, slashes, question marks, at signs, colons, and semicolons. Empty values may not behave the same way on all browsers.
</code>
<p>
In the end I just needed to do a <code>myPayload.replace('\n', ' ');</code> to kill off the offending newline (which I guess just gets passed verbatim to <code>Set-Header</code>). I must be using v1 cookies, since it didn't seem to mind about the space. 
</p>
<p>
Anyways... a learning experience.
</p>&#x5d;&#x5d;&gt;</body>
<date>07 Jun 2005 22:41:13:80 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: What I should have known about javax.servlet.http.Cookie</title>
<body><![CDATA[Thank you Glen for an informative post.  I wish more blogs would contain some answers to the "hair pulling" questions instead of concentrating solely on theories and framework bashing.  I look forward to more nuggets from you.  Thanks for puttin' yourself out there.&#x5d;&#x5d;&gt;</body>
<author>Kevin Burke</author>
<email>kevin@kembuco.com</email>
<website/>
<ipAddress>68.164.109.11</ipAddress>
<date>08 Jun 2005 02:32:00:497 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: What I should have known about javax.servlet.http.Cookie</title>
<body><![CDATA[Google led me here and I thank you, this saved me what I'm sure would have been hours or a nasty hackjob instead.

Thanks again!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>208.71.40.10</ipAddress>
<date>11 Apr 2007 14:28:28:288 +0000</date>
<state>approved</state>
<parent>1118197920497</parent>
</comment>
</blogEntry>

Importing 2005/06/08/1118267762529.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Bundling SWT Apps for MacOSX</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
So you've written your killer SWT app and you're keen to bundle it in a nice clickable Mac application bundle for distribution on OSX? Such has been my journey for last few days. I reckon I've sunk around 10 hours into just this process over the last week, but I now have it working. First, let me show show off: (it's good therapy)
</p>
<p>
<img src="./images/2005/PasswordSafeSWTIconInFinder.gif" alt="PasswordSafeSWT Icon in the Finder"/>
</p>
<p>
Ok, the resources that you need to read are:
<ul>
<li>First, you need to read an awesome background article at <a href="http://www.borderlandconsulting.com/bc/articles/swt_app_bundle.php">Borderland Consulting</a>

<li>Then, you'll want the very cool <a href="http://www.loomcom.com/jarbundler/">Jar Bundler Ant Task</a> which will put together an app bundle for you and copy all your jars into the right directory structure and create an Info.plist file for you

<li>Then (and this bit just killed me), you <b>must make sure</b> that you chmod your .jnilib files executable! If you don't, you'll end up getting a "Could not load library" error even though the swt library is clearly in your java.library.path!
 
<li>
Finally, you must add an entry <escape> <key>StartOnMainThread</key><true/></escape> to your Info.plist file which resolved some Threading issues with the launcher. If you're getting weird GUI behaviour with disappearing buttons and bizarre crashes, it will probably be cause you've missed this setting.

</ul>
</p>
<p>
I'm a Mac newbie, so it took me a while to work out why my app would launch, bounce a few times in the dock, then die. You can find out why via the Console application (Applications/Utilities/Console) - which is where the errors get dumped from the lauching process. That's when I worked out it couldn't load the .jnilib files even though they were in java.library.path (since they weren't chmoded executable). 
</p>
<p>
The other thing that I couldn't get working was using $JAVAROOT in an Info.plist setting for java.library.path. It would just never get expanded by the launcher. I ended up cutting my losses and just copying the my .jnilib files to the same directory as the rest of my jars.
</p>
<p>
BTW, I've been using the jars from Eclipse 3.1RC1 to get all this happening. Earlier jars required you to use a special <code>java_swt</code> launcher to fix those threading issues I was talking about, but the 3.1 stream just uses the standard <code>JavaApplicationStub</code> launcher which is just easier all round. 
</p>
<p>
Eclipse 3.1 also has this "Export To... Mac App Bundle" option but it just tanked every time I tried it, so that might be one to sleep till the final release.
</p>
<p>
Have fun! Hopefully all this will save you some pain!
</p>&#x5d;&#x5d;&gt;</body>
<date>08 Jun 2005 21:56:02:529 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Bundling SWT Apps for MacOSX</title>
<body><![CDATA[Does this somehow help the double dock icon?  If the eclipse icon is already in the dock, clicking on it will create another icon.

AFAIK, this is just an SWT-ism.
&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>148.87.1.171</ipAddress>
<date>09 Jun 2005 14:30:13:522 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Bundling SWT Apps for MacOSX</title>
<body><![CDATA[<p>
I think the reason Eclipse gets two icons in the dock is something to do with an extra laucher thread is spawns to being able to reload itself in some circumstances (when you switch workspaces?). Anyways, that behaviour is an eclipse thing, not an SWT thing. 
</p>
<p>
This certainly doesn't affect your own SWT apps. When I launch PasswordSafeSWT from the Dock there is no "extra" icon. The select icon bounces, then runs.
</p> &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website/>
<ipAddress>192.168.1.9</ipAddress>
<date>09 Jun 2005 19:19:00:835 +0000</date>
<state>approved</state>
<parent>1118327413522</parent>
</comment>
<comment>
<title>Re: Bundling SWT Apps for MacOSX</title>
<body><![CDATA[Thanks so much for posting this info. :-) I've been curious about how to do exactly this.&#x5d;&#x5d;&gt;</body>
<author>Frank</author>
<email/>
<website/>
<ipAddress>132.189.76.10</ipAddress>
<date>09 Jun 2005 19:19:59:830 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Adding "StartOnMainThread" with Ant script</title>
<body><![CDATA[Hi!
First of all, this post is very interesting! I am writing and Ans script do bundle the application and decided to also use the XMLTask (http://www.oopsconsultancy.com/software/xmltask) to add the key "StartOnMainThread" to the Info.plist file. After declaring the task definition, all I need is this:<p>
<p><i>
<xmltask source="cd/${appname}.app/Contents/Info.plist"	dest="cd/${appname}.app/Contents/Info.plist">	 <br><entity remote="file://localhost/System/Library/DTDs/PropertyList.dtd" local="./ant/PropertyList.dtd"/><br>
 <insert path="/plist/dict"><![CDATA[<key>StartOnMainThread</key><true/>]]&#x5d;&#x5d;&gt;<![CDATA[></insert>
		<br></xmltask></i>

<p>You don't need the "entity" tag, I just used in order to change it from Windows.

Hope it is useful.
Once again, congratulations for such a great article!

Nuno Fernandes.&#x5d;&#x5d;&gt;</body>
<author>Nuno Fernandes</author>
<email>gri@zmail.pt</email>
<website/>
<ipAddress>195.23.155.11</ipAddress>
<date>14 Nov 2005 17:06:48:743 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Bundling SWT Apps for MacOSX</title>
<body><![CDATA[<p>Thanks for writing up all your efforts - it's helped me a lot in creating my first ever Java application bundle!

<p>I found that I could simplify things by putting the jnilib files into the MacOS folder using the nested execfileset element.  This automatically sets its files to be executable and I think that the MacOS folder is a more appropriate place to put native dlls anyway.  To get them added into the library path, you have to specify a javaproperty - you can't use -Djava.library.path in the vmoptions!

<p>To summarize, here's my jarbundler task   call:
<pre>
&lt;jarbundler
	dir="${dist.mac.dir}" 
	name="${app.name}"
	mainclass="${main.class}"
	stubfile="${java.application.stub}"
	workingdirectory="$APP_PACKAGE/Contents/Resources"
&gt;
	<strong>
	&lt;!-- Include the SWT native jnilibs --&gt;
	&lt;javaproperty name="java.library.path" value="$APP_PACKAGE/Contents/MacOS"/&gt;</strong>
	<strong>&lt;execfileset dir="${mac.dir}/dll"&gt;
		&lt;include name="*.*"/&gt;
	&lt;/execfileset&gt;</strong>
	&lt;jarfileset dir="${mac.dir}"&gt;
		&lt;include name="*.jar"/&gt;
	&lt;/jarfileset&gt;
	&lt;jarfileset file="${main.jar}"/&gt;
&lt;/jarbundler&gt;

&lt;!-- Hack!  Write the StartOnMainThread key into Info.plist in order to get SWT working on OS X.
	Info.plist will always contain a ClassPath key in the right place. --&gt;
&lt;replace file="${dist.mac.dir}/${app.name}.app/Contents/Info.plist" token="&lt;key&gt;ClassPath" value="&lt;key&gt;StartOnMainThread&lt;/key&gt;&lt;true/&gt; &lt;key&gt;ClassPath" /&gt;
</pre>

I've also included your method for adding the StartOnMainThread key (taken from SWTSafe's build.xml - thanks for that tip!&#x5d;&#x5d;&gt;</body>
<author>Max Spicer</author>
<email>mjs510@york.ac.uk</email>
<website/>
<ipAddress>144.32.128.113</ipAddress>
<date>18 Apr 2007 14:37:16:323 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/06/13/1118696153401.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>PasswordSafeSWT 0.1 goes out the door...</title>
<excerpt/>
<body><![CDATA[<p>
It was a big weekend. Installed a new cistern in the ensuite, took my family to the <a href="http://www.zooquarium.com.au">zoo</a>, and packaged up a very early copy of my SWT port for Mac, Linux, and even Windows. Here's a grab of the original Win32 C++ version of <a href="http://passwordsafe.sf.net">PasswordSafe</a>:
</p>
<p>
<img src="./images/2005/PasswordSafe-win32.gif" alt="Win32 Version of PasswordSafe">
</p>
<p>
And here's a copy of my PasswordSafeSWT port running on Windows:
</p>
<p>
<img src="./images/2005/PasswordSafeSWT-0.1-win32.gif" alt="PasswordSafeSWT 0.1 running on Windows">
</p>
<p>
Aside from the icons needing some photoshopping, and the toolbar button being a little too wide, I've been very happy with the result. Screenshots are also online for <a href="./images/2005/PasswordSafeSWT-0.1-mac.gif">Mac</a> and <a href="./images/2005/PasswordSafeSWT-0.1-linux.gif">Linux</a> .
</p>
<p>
This is a 0.1 release, really just an excuse to get something out the door and feel like I'm getting somewhere. There's still lots to do, but there is actually a lot in here. Load/Save/Add/Edit/Delete/Change Password/Export/Rightclicks... so this release is actually pretty functional for a 0.1! I've put a growing list of "TODO" items in the src package, but it feels good to finally get it out the door.
</p>
<p>
I'm hoping to migrate into the Sourceforge project once I get some peer review from the developer list, but for now, you can grab an "at your own risk" copy from my <a href="http://www.bytecode.com.au/downloads">downloads</a> page. Source is up there too. 
</p>
<p>
After a little research, I even managed to create a dmg file for the Mac after reading this <a href="http://decaffeinated.org/archives/2003/10/24/dmg">very helpful post</a>. Wonder if there's a DMG Ant task out there... it's currently the only manual part of the build, so that would be very cool. 
</p>
<p>
Anyways, enjoy. And be nice... since this is my first official attempt to put some Open Source out there.
</p>&#x5d;&#x5d;&gt;</body>
<date>14 Jun 2005 06:55:53:401 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/06/21/1119349646125.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Getting your logging working in Jetty</title>
<excerpt/>
<body><![CDATA[<p>
I love Jetty. It's starts in 3 seconds, it's a coupla jars, its config file is sensible to me, and it's Australian. But I've hit issues with Jetty and logging before (specifically commons logging)... so I'm going to blog about this before I forget it (and so I can Google for it later - cause I keep forgetting the fix).
</p>
<p>
Here's the scenario, you've installed your webapp on Jetty and you're wondering why your commons logging stuff is stuck at INFO level. You've tried copying commons-logging.properties and log4j.properties files all over the place, but no joy. 
</p>
<p>
Turns out that Jetty implements its own commons logging factory, so you might not be having any luck overriding it. It also turns out that your options are actually <a href="http://jetty.mortbay.org/jetty/tut/logging.html">well documented</a> on the Jetty site, but the short answer, to save you some digging, is that it's all very configurable. 
</p>
<p>
One thing I've just done is use the specific -D option for the log factory (per the example on their site). So you end up with a start line of: 
</p>
<p>
<code>java -Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger -jar start.jar</code>
</p>
<p>
... and all my DEBUG logs started coming back. Love that Jetty goodness.
</p>&#x5d;&#x5d;&gt;</body>
<date>21 Jun 2005 20:27:26:125 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/06/29/1120013991207.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>PasswordSafeSWT 0.2 leaves the building...</title>
<excerpt/>
<body><![CDATA[<p>
The latest release of my SWT port of <a href="http://passwordsafe.sf.net">Passwordsafe</a> went out the door this morning. This version fixes a bunch of layout issues on various platforms, adds sorting of password lists, implements password generation. 
</p>
<p>
<img src="./images/2005/PasswordSafeSWT-0.2-mac.gif" alt="PasswordSafeSWT 0.2 Running on Mac OSX"/>
</p>
<p>
You can grab <a href="http://www.bytecode.com.au/downloads/">source and binaries</a> for Mac/Linux/Windows at my local site.  This release is bound for the Sourceforge <a href="http://passwordsafe.sf.net">PasswordSafe</a> project page - and should arrive there later this week if you want to wait for a much faster download link. 
</p>&#x5d;&#x5d;&gt;</body>
<date>29 Jun 2005 12:59:51:207 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/07/19/1121775014101.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Using JFreeChart with SWT</title>
<excerpt/>
<body><![CDATA[<p>
Whichever way you look at it, <a href="http://www.jfree.org/jfreechart/index.php">JFreeChart</a> is one sensational charting library. So, what do you do if you're hacking SWT apps? 
</p>
<p>
Couple of options. You can use the SWT_AWT bridge stuff and take your chances on non-Windows platforms. Or, you can use some very nifty code <a href="http://jfree.org/phpBB2/viewtopic.php?t=4693">here</a> on the jfree forums to create an SWT Image from an AWT BufferedImage. (I'm using the code from Til at the bottom of the forum dated 12 Jan, 2005). 
</p>
<p>
I've got a little project that I'm working on related to spamfiltering, so I though I'd mock up some charts to see if this stuff actually works. In this grab, I've created two CLabels, and called <code>setImage()</code> with the data returned from Til's helper function. Gotta be happy with that! 
</p>
<p>
<img src="./images/2005/JFreeChartInSWT.gif" alt="JFreeChart Embedded in an SWT CLabel">
</p>
<p>
Awesome! I've got a sensational charting package without the need to do scary stuff with embedded AWT/Swing panels in an SWT app! Thanks to the Til and the other brave souls who did the hard yards!
</p>&#x5d;&#x5d;&gt;</body>
<date>19 Jul 2005 22:10:14:101 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>Java</category>
</blogEntry>

Importing 2005/07/27/1122498227186.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>PasswordSafeSWT 0.3 ships - now with cool new toolbar!</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've finally managed to get 0.3 of PasswordSafeSWT out the door (a blowfish-based personal password manager for Java) . New in this release:
<ul>
<li>Overhauled GUI - with new toolbar and lots of layout fixes
<li>Sorted lists - defaulting to alphabetical on first column
<li>XML Import/Export - experimental support for now, but should slurp in KeePass exports no worries
<li>Lots of preferences have now been implemented (and those that haven't have at least been greyed)
<li>Heaps of bug fixes
</ul>
</p>
<p>
Interestingly the toolbar was submitted as a user suggestion on the PasswordSafe <a href="http://sourceforge.net/tracker/index.php?func=detail&aid=1169631&group_id=41019&atid=429582">Feature Requests</a> (Thanks DeeLight!). Feature requests are just a gold mine of good ideas! I'm going to do some more digging on that list. One feature that was suggested was a Firefox import. I'd love to get that in 0.4, but I'll see how I go digging through that C++ source...
</p>

<p>
<img src="./images/2005/NewLookToolbar.gif" alt="New Look Toolbar"/>
</p>

<p>
Anyways, I'm waiting for the CVS source commits to finish against <a href="http://passwordsafe.sf.net">SourceForge</a> as I type this. For now you can grab source and platform binary bundles at the <a href="http://www.bytecode.com.au/downloads">usual spot</a> while Rony helps me work through getting the binary release process setup for the Java project.
</p>&#x5d;&#x5d;&gt;</body>
<date>28 Jul 2005 07:03:47:186 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: PasswordSafeSWT 0.3 ships - now with cool new toolbar!</title>
<body><![CDATA[The source archive on your site seems to be missing the <i>resources</i> directory (but it's in the project's build path).

Also, there's a small typo in the clean target of build.xml: <i>classees.dir</i> should be <i>classes.dir</i>.&#x5d;&#x5d;&gt;</body>
<author>Neil Greenwood</author>
<email>ngreenwood@gammaprojects.com</email>
<website/>
<ipAddress>193.129.246.188</ipAddress>
<date>03 Aug 2005 01:32:13:946 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: PasswordSafeSWT 0.3 ships - now with cool new toolbar!</title>
<body><![CDATA[Thanks Neil. I've made those fixes and they'll go out with 0.4. Thanks for your feedback!&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen/</website>
<ipAddress>192.168.1.9</ipAddress>
<date>03 Aug 2005 13:12:29:772 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/08/11/1123792244401.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Driving Skype from Java with JNIWrapper</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
As a developer, if you've every used Skype, you gotta be thinking... "wonder if there's an API for this thing...". Well the answer is "yes", but not in a format that's like anything you've used before!
</p>
<p>
The good news is that pretty much anything that you can do with Skype can be automated from the public api (and in a documented way). The bad news is that the API it exposes is consumed in a pretty unique fashion. You can grab the api docs from the <a href="http://share.skype.com/share/developer_blog/">Skype Developer page</a>.
</p>
<p>
On Win32, the API works but using SendMessage calls to the Skype window (ie putting stuff directly on its message queue).  There are also GTK equivalents that use freedesktop DBus to do similar. So it's pretty darn ugly stuff - you end up copying API commands onto the queue (as strings... like the way you used to drive an AT modem!), and off they go. Skype has to be started and visible (part of the API license is that it has to remain visible), so no clean options there for a silent skype in the background.
</p>
<p>
So how do you call it from Java? Couplea options. There are a few libraries out there now, but mostly in a pretty average state. I found the quickest way to get going was generating my own using <a href="http://www.jniwrapper.com">JNIWrapper</a>. I installed the (very cool) <a href="http://www.khaoslabs.com/activeskype.php">ActiveSkype</a> COM library from KhaosLabs that defines all the constants and strings you need. Then fed that COM library to JNIWrapper, and I was in business - current Skype Java lib read to roll!  Then I could do stuff like:
</p>
<p>
<pre>
	IAccess myAccess = Access.create(ClsCtx.SERVER);
	IUserCollection mates = myAccess.getFriendList();
	Int32 mateCount = mates.getCount();
	System.out.println("You have: " + mateCount + " mate(s)");
	for (int i = 0; i < mateCount.getValue(); i++) {
		IUser nextMate = mates.getItem(new Variant(i+1));
		System.out.println("Next Mate is: " + nextMate.getHandle());
	}
</pre>
</p>
<p>
You can get access to their online status, place a call to them, or pretty much whatever the client can do. The API is pretty complete, including event notifiers for new calls, but it does have an unusual approach to exposing its services.
</p>
<p>
I thought about playing around with an "answering machine" style app... but couldn't find hooks for sending WAV files down the line. Audio pretty much has to come down the mic channel - and whilst there are ways around it (like installing a "Virtual Audio Cable" VAC driver on windows then remapping it to a media player)... well you get the picture.. it's a horror story. 
</p>
<p>
It's fun to be able to script Skype, though. JNIWrapper is *so* the business. If you have to do *any* COM work it's definitely worth the dollars. It's one of the "Just Works" products that I just gotta rave about.
</p>
&#x5d;&#x5d;&gt;</body>
<date>12 Aug 2005 06:30:44:401 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Driving Skype from Java with JNIWrapper</title>
<body><![CDATA[Check out com4j https://com4j.dev.java.net/

I have used JNIWrapper as well and its a good piece of software, but com4j is much better.  It creates Java classes which are much more natural to code to rather than the COM interfaces.

Regards
Milind&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>milindr@bellsouth.net</email>
<website/>
<ipAddress>24.98.46.49</ipAddress>
<date>17 Nov 2005 18:16:35:696 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Driving Skype from Java with JNIWrapper</title>
<body><![CDATA[I checked out com4j before getting into JNIWrapper but at the time it only supported JDK 1.5 and all my clients were on 1.4. Maybe it has improved since then. I'll definitely have a look. The other big plus with JNIWrapper is the cross platform support (linux, win32 and now macosx) so it's got a broader brief than just COM. I'll definitely have a second look at com4j though.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>17 Nov 2005 19:47:23:484 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/08/23/1124766334699.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Eclipse + JettyLaucher = Loving Web Development</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I'm working on my first serious  web app for ages and taking the opportunity to learn SpringMVC in the process. I've been busy doing lots of client-side SWT programming and plenty of backend EJB stuff, but amazingly haven't managed to do much in the web space for quite some time.
</p>
<p>
Anyways, I've been a longterm fan of <a href="http://jetty.mortbay.org/">Jetty</a> - it starts in a flash, is easy to configure, has a tiny footprint and it's Australian - what more could you ask for? Anyways, I was keen to see if to see if I could easily deploy my web app to Jetty straight from Eclipse. 
</p>
<p>
Enter the <a href="http://jettylauncher.sourceforge.net/">JettyLauncher Plugin</a> for Eclipse.  Jetty was always designed to be embeddable, with a simple API for configuring your deployments programmatically. This plug in takes advantage of that embeddable API and embeds Jetty straight into Eclipse! 
</p>
<p>
Once you've got it installed you can now go into your Run... menu in Eclipse and choose the "Jetty Web" option. From there you simply tell it the location of your project's war directory, what context you want to expose it under in Jetty, and what port you want Jetty to run on. It's a snack! Suddenly you have Jetty output in your Console window!
</p>
<p>
Because Jetty starts in a couple of seconds, I have found it's a very snappy way to test our your webapp - especially when you're learning a new framework at the time. I can hack my Spring context and restart in a flash, or just edit my Velocity templates straight in Eclipse and keep interacting with Jetty without any need to restart!
</p>
<p>
If you're looking for a productive toolset for developing your web apps from within Eclipse, it's definitely worth a look. Great stuff!
</p>&#x5d;&#x5d;&gt;</body>
<date>23 Aug 2005 13:05:34:699 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Eclipse + JettyLaucher = Loving Web Development</title>
<body><![CDATA[Jetty is indeed wonderful for that, we used it in RIFE/Jumpstart too and made a little video that shows how easy this makes things: http://rifers.org/theater/rifejumpstart_eclipse&#x5d;&#x5d;&gt;</body>
<author>Geert Bevin</author>
<email>gbevin@uwyn.com</email>
<website>http://rifers.org</website>
<ipAddress>213.193.174.37</ipAddress>
<date>23 Aug 2005 16:00:08:406 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/09/08/1126215242201.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Pro Spring in one very cool book...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
For a new web project I've been learning the Spring Framework. Based on a few recommendations I'd read around the blogsphere I ordered a copy of <a href="http://tinyurl.com/cwrbk">Pro Spring</a> and I've gotta say I've been hugely impressed.
</p>
<p>
I've been reading/implementing for around two weeks. When it arrived I was sure it was a lemon (how could it cover MVC in a measly 45 pages?). What I didn't count on was how *good* the examples are. Sure, you don't get the total coverage of a dedicated MVC book, but you get *excellent* coverage of more areas of the framework than you could possibly imagine.
</p>
<p>
The database-driven web app I'm building is using Velocity, iBatis, Postgres and Spring (what I'm calling VIPs ;-), and, even though I've used iBatis before,  I've learned heaps of tricks while reading the Spring/iBatis integration chapter (like using inheritance in resultmaps). I've got parent/child selects and inserts going on, I've got my auditing going to the database (using a Spring HandlerInterceptor to check page access), I've got connection pooling and all sorts of cool stuff. And I've been having a ball all the way through.  
</p>
<p>
Even the mail integration chapter is awesome! Gives great examples of generating rich html emails using Velocity with embedded images (exactly the thing I've always wanted to do with mail!). 
</p>
<p>
The appendix on unit testing is also full of gems! What a great idea to have a transactional unit test that you can roll back when your test is done without touching your test db!
</p>
<p>
What has really surprised me about this book is the rich quality of the examples. There have really picked stuff that you want to do in the real world. In fact, the more I get into this book, the more battle tested it feels. It definitely has the feel of "we've built a dozen production apps in this framework, and here's the dirt on what we've learned along the way". I *love* that in a book!  
</p>
<p>
I've had a scan through <a href="http://tinyurl.com/9t87h">Spring in Action</a> and at first glance it doesn't seem to have either the breadth or depth of Pro Spring. Matt Raible's <a href="http://www.springlive.com">Spring Live</a> looks very cool, though (particularly since he has stuff in there about Spring WebFlow). Be good if SourceBeat provided a detailed table of contents, though, where you could see the details of what's covered before buying a copy (rather than just see the title of each chapter). 
</p>
<p>
Anyways, Pro Spring gets a huge tick from me! Great job, Rob & Jan! And great stuff apress!  Highly recommended!
</p>&#x5d;&#x5d;&gt;</body>
<date>09 Sep 2005 07:34:02:201 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: Pro Spring in one very cool book...</title>
<body><![CDATA[When I was in Australia recently I remember books costing in the region of $90 AUD and up and so I would expect any book would need to be a keeper for quite a while for it to be worth that much.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>24.148.83.129</ipAddress>
<date>09 Sep 2005 23:42:24:960 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Pro Spring in one very cool book...</title>
<body><![CDATA[<p>
Good call. Books are definitely expensive in Australia. I tend to buy from an excellent Aussie online bookstore <a href="http://order.bookware.com.au/cgi-bin/bookware/1590594614">Bookware</a>. They've been easy to deal with, fast to ship, and offer great discounts over your local bookstore.
</p>
<p>
Pro Spring, in fact, does retail for $90AUD in local shops, but I got my copy from Bookware for $72 (around $55USD). Consulting rates are also pretty good in Australia, so if it saves me two hours (which it already has), it's way paid for itself. 
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>10 Sep 2005 08:10:43:921 +1000</date>
<state>approved</state>
</comment>
<trackback>
<title>Which Table of Contents to you prefer?</title>
<excerpt><![CDATA[A couple of weeks ago, I stumbled upon  Glen Smith's  blog and found the following sentences: 
 
Matt Raible's  Spring Live  looks very cool, though (particularly since he has stuff in there about Spring WebFlow). Be good if SourceBeat provided a detail&#x5d;&#x5d;&gt;</excerpt>
<url>http://jroller.com/page/raible?entry=which_table_of_contents_to</url>
<blogName>Spring Live</blogName>
<ipAddress>64.69.35.197</ipAddress>
<date>24 Sep 2005 06:39:15:26 +1000</date>
<state>approved</state>
</trackback>
</blogEntry>

Importing 2005/09/15/1126771245132.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Processing 2Gb XML Files with StAX</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
As part of a recent <a href="http://www.cjugaustralia.org">CJUG</a> XML Smackdown we played with processing a very large (2Gb) XML file using SAX & StAX. I was doing the StAX bit (using <a href="http://woodstox.codehaus.org">Woodstox</a>), and I learnt some very interesting lessons on processing large XML files along the way.
</p>
<p>
The file we used to demo was a large rdf file from the <a href="http://rdf.dmoz.org/rdf">dmoz</a> directory. Its compressed (gzip) size is 299Mb, but it unzips to just under 2Gb. The test was to iterate all elements and pull the urls out of the "about" attribute.
</p>
<p>
I tried the demo on three machines. A Mac Mini (290secs), An old Thinkpad (370secs), and a newish AMD 2.4 Linux box (80secs). The results were very interesting - I/O was definitely the killer on the slower boxes. To experiment further, I changed the code to read from the original 300Mb file using a GZipInputStream - and the Thinkpad came in at 270secs - I wiped off nearly a third of the time! No such luck on the AMD box (which has a SATA hard disk) - where throughput actually slowed when using the Gzip method.
</p>
<p>
Interestingly the Sax performance was nearly identical in all tests (mostly slightly faster than Stax, but sometimes slightly slower - but either way not really significant given the amount of processing).
</p>
<p>
So the learning experience for me:
<ul>
<li>StAX is definitely a goer (and performant) for very large files
<li>Don't ever think that I/O is an insignificant cost in any large operation! 
</ul>
</p>
<p>
It's sure no empirical test - really just a back-of-a-napkin kinda thing. But it was fun to demo, and gave me my first ever chance to use a GZipInputStream!
</p>&#x5d;&#x5d;&gt;</body>
<date>15 Sep 2005 08:00:45:132 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Processing 2Gb XML Files with StAX</title>
<body><![CDATA[hey glen do you have a sample code on how youve run the stax parser?&#x5d;&#x5d;&gt;</body>
<author>staxter</author>
<email>micoboyjr@yahoo.com</email>
<website/>
<ipAddress>203.177.51.170</ipAddress>
<date>12 Jan 2006 02:03:36:493 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Processing 2Gb XML Files with StAX</title>
<body><![CDATA[<p>
Sure. You can download the slides from the CJUG <a href="http://cjugaustralia.org/slides/XMLSmackDown.zip"/>presentation</a> and checkout the code in the "stax" package. If you're using Woodstox, you'll probably need to drop in the Woodstox jars (not sure which Stax parser I used for the demo) - got a feeling it was the Sun one. Enjoy.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.13.2.142</ipAddress>
<date>12 Jan 2006 02:19:54:530 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Processing 2Gb XML Files with StAX</title>
<body><![CDATA[<p>
Just checked it, and I did use Woodstox for the demo.... Which makes sense given the blog entry above...
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.13.2.142</ipAddress>
<date>12 Jan 2006 02:24:08:708 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Processing 2Gb XML Files with StAX</title>
<body><![CDATA[Hi Dear,
Would you please tell me whether or not it is possible in C#.net or any of the .net application.

Plz, i am in big trouble &#x5d;&#x5d;&gt;</body>
<author>Viral</author>
<email>viral.pandya@etatvasoft.com</email>
<website>http://www.etatvasoft.com</website>
<ipAddress>122.169.20.52</ipAddress>
<date>06 Jul 2007 09:39:44:491 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2005/09/20/1127216506814.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>opencsv 0.1 - Yet another Java CSV parser (but under an Apache 2.0 license)</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Yeah. I know. Why is *anyone* even considering building yet another CSV parser for Java? You got me, but I am. Go figure. The reason is that I haven't been able to find a tiny CSV parsing class that's available under a commercial friendly license.
</p>
<p>
For some reason, all of the ones I've come across are a strict "GPL or buy a commercial license" type deal. Well, it's a CSV parser - how hard could it be? (always a fatal question, since my effort doesn't handle a lot of the commercial features, but at least it handles the common cases). So here's my afternoon's effort to at least get you started.
</p>
<p>
The quick case:
</p>
<p>
<pre>
   CSVReader myReader = new CSVReader(yourFileReaderOrWhatever);
   List entries = myReader.readAll(); // a List of String[] 
   // .... iterate and enjoy
</pre>
</p>
<p>
Or, if you'd prefer a pull model to conserve memory.... use the <code>readNext()</code > method to get a <code>String[]</code> for the next line, and you're all done when you hit a <code>null</code>. 
</p>
<p>
This version is very bare bones. Supports double-quoted elements, and that's about it. No comment support yet. Probably heaps of edge cases aren't handled. No need to whinge. It is, at least, an Apache 2.0 licensed CSV parser for Java. Modify to suit. 
</p>
<p>
Enjoy. <a href="http://sourceforge.net/projects/opencsv">Download it here</a>.
</p>&#x5d;&#x5d;&gt;</body>
<date>20 Sep 2005 21:41:46:814 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: opencsv 0.1 - Yet another Java CSV parser (but under an Apache 2.0 license)</title>
<body><![CDATA[you may want to check out: http://kasparov.skife.org/blog-live/src/java/simple-csv.writeback&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>195.10.3.194</ipAddress>
<date>21 Sep 2005 21:04:29:28 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>you rock!</title>
<body><![CDATA[I had the same problem.  Thanks for putting this together.&#x5d;&#x5d;&gt;</body>
<author>Shane Wealti</author>
<email>shane@technolispeaking.com</email>
<website>http://www.dane101.com</website>
<ipAddress>67.52.196.190</ipAddress>
<date>01 Nov 2005 04:13:49:604 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/09/28/1127901801326.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>opencsv 0.2 released to Sourceforge...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Continuing my quest to change the world, one comma at a time, <a href="http://opencsv.sf.net">opencsv 0.2</a> is now available from Sourceforge.
</p>
<p>
This version includes a <a href="http://opencsv.sf.net">quickstart</a> guide, the ability to handle quoted entries that span lines, a simple example and generally better packaging.
</p>
<p>
Subject to bug fixes, this version will become 1.0 down the track. Enjoy.
</p>&#x5d;&#x5d;&gt;</body>
<date>28 Sep 2005 20:03:21:326 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2005/10/05/1128544779521.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>opencsv 1.0 ships</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Ending my obsession with all things comma-delimited, I've deployed 1.0 final of <a href="http://opencsv.sf.net">opencsv</a> to Sourceforge. This version adds the capability to supply custom separator and quote chars, and pretty much rounds out everything I want to do with CSV.
</p>
<p>
Read the <a href="http://opencsv.sf.net">quickstart</a>, then grab the files from the <a href="http://sourceforge.net/projects/opencsv">download</a>  page.
</p>
<p>
Happy delimiting!
</p>&#x5d;&#x5d;&gt;</body>
<date>06 Oct 2005 06:39:39:521 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: opencsv 1.0 ships</title>
<body><![CDATA[Thanks for publishing opencsv.  I started using it today.  It was very easy to use and parsed the file I had perfectly.  Good work!

The file I am parsing has lots of newlines and "" escapes inside the CSV.  I am really glad opencsv handled it correctly.&#x5d;&#x5d;&gt;</body>
<author>Greg</author>
<email/>
<website>http://ghouston.blogspot.com/</website>
<ipAddress>68.17.178.222</ipAddress>
<date>31 Oct 2005 23:53:56:378 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: opencsv 1.0 ships</title>
<body><![CDATA[Thanks Greg. Glad it saved you some time (and glad that it handled your file!)&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>01 Nov 2005 06:47:09:234 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/10/22/1129968061645.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>PasswordSafeSWT 0.4 is out</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
PasswordSafeSWT is an Java/SWT port of the popular Win32 blowfish-based password manager <a href="http://passwordsafe.sf.net">Password Safe</a>. 
</p>
<p>
This new version (0.4) fixes a number of annoying bugs from the 0.3 release. In particular:
<ul>
<li>Prompt for saving unsaved entries on close (thanks <a href="http://sourceforge.net/users/gneel42/">Neil</a>)</li>
<li>Tree views now display correctly</li>
<li>Remembering your active view between invocations</li>
<li>Proper exiting from the opening dialogs</li>
<li>Version information now available in about dialog</li>
<li>Edit dialog now defaults Ok button</li>
<li>Preference changes are now applied immediately (rather than on restart)</li>
<li>Tray icons now displaying correctly on Linux</li>
</ul>
</p>
<p>
<img src="./images/2005/PasswordSafeSWT-0.4-win32.gif" alt="Win32 Screenshot of PasswordSafeSWT 0.4"/>
</p>
<p>
You can download the latest release for Mac, Linux and Windows from <a href="https://sourceforge.net/project/showfiles.php?group_id=41019">here</a> .
</p>
<p>
Enjoy!
</p>
&#x5d;&#x5d;&gt;</body>
<date>22 Oct 2005 08:01:01:645 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Additional feature request for 0.5</title>
<body><![CDATA[PasswordSafeSWT 0.5 has been great to use (and I've contributed to show how much I appreciate it).&nbsp; In fact, I use it so much that I'd like to suggest a new feature.&nbsp; Can you add search so I can find my entries? :)&nbsp; I've been using the tree organization, but I'm still finding it hard to seek out certain accounts in my database.&nbsp; I think&nbsp; a simple keyword search would do fine.&#x5d;&#x5d;&gt;</body>
<author>William Hayes</author>
<email>william.s.hayes@gmail.com</email>
<website></website>
<ipAddress>198.180.131.16</ipAddress>
<date>20 Jul 2006 12:03:20:483 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Additional feature request for 0.5</title>
<body><![CDATA[William,&nbsp; Sounds great. Working hard on getting the new PWS v3.0 file format integrated in the next version of PasswordSafeSWT. I'll try and get a search capability in there too. Great suggestion!&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>21 Jul 2006 04:49:53:435 +0000</date>
<state>approved</state>
<parent>1153397000483</parent>
</comment>
</blogEntry>

Importing 2005/10/23/1130106555464.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Launching an external browser url from SWT</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
In developing <a href="http://passwordsafe.sf.net">PasswordSafeSWT</a>, I've never really been able to get URL launching  working successfully ("Go to Password Safe Website" type stuff) on all platforms. I've toyed with <a href="http://browserlaunch2.sourceforge.net/">BrowserLauncher</a> (which seems to work great on Win32 and Linux but causes my OSX box all sorts of grief).
</p>
<p>
Well, after checking out some of the SWT newsgroups, the answer is much simpler than I thought. You can launch arbitrary programs using the <code>Program</code> class, and they launch with whatever app is associated with them (ie whatever is the default browser on the platform). So I just dropped the following line into my Action, and I was in business:
</p>
<pre>
org.eclipse.swt.program.Program.launch("http://passwordsafe.sourceforge.net/");
</pre>
<p>
I'm a raving fan-boy. I just love SWT....
</p>&#x5d;&#x5d;&gt;</body>
<date>23 Oct 2005 22:29:15:464 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Launching an external browser url from SWT</title>
<body><![CDATA[<p>Thank you. I have been searching for days for this kind of stuff, in order to bring a Link widget in my SWT application to life.

<p>All I could find was Runtime.exec(), which starts the default browser for html files (try cmd /c file.html from a windows command prompt), but didn't work for actual links.

<p>One more problem solved:) Thank you.

<p>Ciprian
&#x5d;&#x5d;&gt;</body>
<author>Ciprian</author>
<email>cipak@yahoo.com</email>
<website/>
<ipAddress>85.186.227.28</ipAddress>
<date>06 Mar 2006 17:36:46:577 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Launching an external browser url from SWT</title>
<body><![CDATA[Glad I could help. &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>06 Mar 2006 18:40:51:978 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1141666606577</parent>
</comment>
<comment>
<title>Re: Launching an external browser url from SWT</title>
<body><![CDATA[thanks a ton man ..see u wrote something 2 years back and it helped me a great deal today..thanks a ton&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>64.208.49.109</ipAddress>
<date>04 Sep 2007 12:07:15:108 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1141666606577</parent>
</comment>
<comment>
<title>Re: Launching an external browser url from SWT</title>
<body><![CDATA[Love you man! Have been searching Google for something like this for like 20 minutes... gave up and started going thru my bookmarks instead (including your site) and here it is! Thanks!&#x5d;&#x5d;&gt;</body>
<author>Jens</author>
<email/>
<website/>
<ipAddress>83.248.77.29</ipAddress>
<date>03 Apr 2006 10:08:37:494 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Launching an external browser url from SWT</title>
<body><![CDATA[Good stuff. Enjoy.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>03 Apr 2006 10:13:07:301 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1144058917494</parent>
</comment>
<comment>
<title>Re: Launching an external browser url from SWT</title>
<body><![CDATA[A fantastic tip - I was about to go down the BrowserLauncher route until I found this.  Unfortunately though, it doesn't seem to work for me under KDE on Linux.  My default browser there is Konqueror, and typing http://www.google.com into the Run box loads it just fine.  Sadly, calling Program.launch does nothing on this platform (it assumedly returns false but I haven't checked yet).  The same code works perfectly under Windows XP (where it launches Firefox).&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>contact.details@thespicers.net</email>
<website/>
<ipAddress>144.32.128.113</ipAddress>
<date>04 Apr 2007 16:23:23:383 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2005/10/24/1130195969418.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Handling Window Close Events in JFace</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Just so I remember how to do this next time... JFace apps work a little different to normal SWT applications. In an SWT app, you'd normally register an event listener and check for SWT.Close. If you do that, you might not get the behaviour you expect (I found that my current shell was gone by the time I got the event!).
</p>
<p>
JFace actually make all this a whole lot easier. You just need to override <code>handleShellCloseEvent()</code> and do your own magic. The default implementation just closes everything down. In PasswordSafeSWT, I wanted to prompt for the user to save their modified safe before exiting, so my implementation looks like this:
</p>
<pre>
	/**
	 * 
	 * @see org.eclipse.jface.window.Window#handleShellCloseEvent()
	 */
	protected void handleShellCloseEvent() {
		boolean cancelled = saveAppIfDirty();
		if (cancelled) {
			setReturnCode(OK);
		} else {
			tidyUpOnExit();
			super.handleShellCloseEvent();
		}
	}
</pre>
<p>
And you're in business. If the user cancels the exit, you just set a ReturnCode of OK and life continues as normal. If you're happy that things are ok to exit, just invoke the superclass and you're done. 
</p>
<p>
This took ages to work out since I was doing all sorts of evil in my SWT.Close event listener to try and work around it. In future I'll just read the Javadoc.
</p>
&#x5d;&#x5d;&gt;</body>
<date>25 Oct 2005 09:19:29:418 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2005/10/27/1130400319075.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Joshua Bloch Podcast (... and I'm loving the Java Posse Podcast!)</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I'm right into this podcasting deal of late, and I've gotta point you to <a href="http://www.javaposse.com/">The Java Posse</a> for a great Java-centric podcast with excellent interview content.
</p>
<p>
This last week they've <a href="http://www.javaposse.com/index.php?post_id=29225">interviewed Joshua Bloch</a> from Google (of JDK collections fame - and writer of <a href="http://java.sun.com/docs/books/effective/">that excellent book</a>) and it was a very interesting listen. In particular it's interesting to see that Google run on C++ for the core search stuff, and Java a lot of everywhere else, with some Python in there for the glue. Joshua is one very smart dude, and it's interesting to hear some of his ideas on the future of Java (also makes me want to play with Python just so I can get a feel for what it's like for scripty goodness).
</p>
<p>
If you haven't got into the podcasting thing yet, grab an <a href="http://ipodder.sourceforge.net/">aggregator</a> and make it happen! I can also recommend <a href="http://www.mpesch3.de/">DirectCut</a> as a great tool for splitting podcasts into manageable segments (I split mine into 5 minute segments which makes it easier to jump around in my player).
</p>
<p>
I'm loving listening to interviews and news on the way to work! Kudos to those Java Posse dudes!
</p>&#x5d;&#x5d;&gt;</body>
<date>27 Oct 2005 18:05:19:75 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2005/11/02/1130914376840.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>You really don't grok Spring IoC when...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Working on my first major SpringMVC app at the moment and having a ball. But this whole <code>ApplicationContext</code> thing was really bugging me. I was looking up beans all over the place, and in order to get a handle to the appContext to do the lookup I was making heaps of stuff <code>ApplicationContextAware</code>. How do people feel comfortable doing this in their apps?
</p>
<p>
But the penny dropped when looking through some of the <a href="http://lingo.codehaus.org">Lingo</a> spring examples...
</p>
<cite>Then in your Java code, just lookup the client in Spring (or preferably have it dependency injected into your code by Spring)</cite>
<p>
Of course! Why am I looking this stuff up via an appContext?!?. Geez. It's an IoC container - it's designed to *inject* stuff.
</p>
<p>
Couple of hours later and I'd pretty much removed all my ApplicationContextAware beans and almost all my <code>getBean()</code> calls and injected the real objects straight in them. I now have a much cleaner codebase that isn't even tied to Spring as an IoC container.
</p>
<p>
So I think I just discovered a very basic Spring Antipattern: If you have tons of code doing <code>getBean()</code> lookups, and a dozen <code>ApplicationContextAware</code> there's a code smell going on. It's time to invert...</p>&#x5d;&#x5d;&gt;</body>
<date>02 Nov 2005 17:52:56:840 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2005/11/15/1132086420714.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>opencsv 1.1 - now with csv writing!</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
This is the version that I was never going to write, but I've decided to add csv export to my little <a href="http://passwordsafe.sf.net">PasswordSafeSWT</a> project and, since people have asked about csv writing capability, I now had a reason for opencsv 1.1. 
</p>
<p>
<a href="http://opencsv.sf.net">opencsv</a> is an ultra-lightweight minimalist cvs parsing and writing library for Java under an Apache 2.0 license. The <a href="http://opencsv.sourceforge.net/api/index.html">API</a> is extremely tiny with only two methods and a couple of constructors. It handles embedded carriage returns, custom delimiters, and the common cases for most csv files. Might save you an hour if you're in a hurry. 
</p>&#x5d;&#x5d;&gt;</body>
<date>16 Nov 2005 07:27:00:714 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: opencsv 1.1 - now with csv writing!</title>
<body><![CDATA[Hi Glen, I tried to check out your opencvs project from sourceforge via CVS, but the directory structure doesn't contain any useful files (*.java).

I'd like to add support for quoted quote characters.&#x5d;&#x5d;&gt;</body>
<author>Robert</author>
<email>robert.rodewald@awaro.com</email>
<website>http://www.awaro.com</website>
<ipAddress>217.110.232.5</ipAddress>
<date>28 Nov 2005 21:01:20:913 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: opencsv 1.1 - now with csv writing!</title>
<body><![CDATA[Robert, the tar.gz download of opencsv should come with the source included - so you should already have it (check the src directory with the download). Feel free to add your changes (and send them in and I'll add them to the next release).&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>28 Nov 2005 22:05:30:703 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/11/28/1133209087389.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Java Sudoku Solving...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
At the moment I'm tinkering with a little Java puzzle from our local <a href="http://www.cjugaustralia.org/">CJUG</a> that centres around <a href="http://www.cjugaustralia.org/index.php/SudokuCodingChallenge">Sudoku Solving</a>. If you check out that link you can download <a href="http://www.madbean.com/">Matt's</a> harness to try your skills. Subclass the base solver and implement the abstract  <code>solve()</code> method and you're in business. The harness will fire a bunch of sample Sudokus of varying difficulty at your class and tell you what you're missing.
</p>
<p>
Crushingly after two hours I can only manage to solve two of the easy and two of the mild problems. Maybe I should submit it as a <code>TabloidSolver</code>?
</p>
<p>
Try your hand if you're feeling game... And you have too much time on your hands...
</p>&#x5d;&#x5d;&gt;</body>
<date>29 Nov 2005 07:18:07:389 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2005/12/10/1134175265550.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Back from 3 Days at IBM Labs Australia</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Just came back from 3 days at IBM's Tivoli Labs on the Gold Coast - and had a great time - even though it was unbelievably hot up there. It was great to meet the guys up there who have just shipped Tivoli Access Management (TAM) 6. But what I was really excited to see was the very cool culture that they have build up there - very casual but with tons of young smart people having fun and doing great work. 
</p>
<p>
I was up there getting a briefing on what IBM have been up to in the Federated Identity area with their various FIM and TAM products. Had a good chance to write some code to integrate WebSEAL with a client's internal Java identity management software - and it was awesome to be able to talk to they guys that are actually working on the source base. It's pretty cool to have access to vendor people who can say, "I'll just check it in the source and see how that bit's implemented". Great stuff. 
</p>
<p>
I was really inspired for my own dreams in the ISV space. It is *so* doable - and people up the road from me have done it! (the guys in the Labs were acquired from a small startup of 20-sometings about 7 years ago). Very pumped.
</p>
<p>
Anyways, looks like I'll have a chance to play with a whole bunch of IBM Java identity and access management stuff in '06 - and it's great to have the contacts to be able to follow up with the guys actually building the products.
</p>&#x5d;&#x5d;&gt;</body>
<date>10 Dec 2005 11:41:05:550 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2005/12/14/1134591872501.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Sudoku + Java + SpringMVC =</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Well... an <a href="http://www.bytecode.com.au/sudoku/solver/view.html">online  sudoku solver</a> web app using SpringMVC. Taking our local JUG's <a href="http://www.cjugaustralia.org/index.php/SudokuCodingChallenge"/>Sudoku Coding Challenge</a> to the next level seemed like a pretty good waste of time to me... so there you go. My solver uses very basic <a href="http://www.bytecode.com.au/sudoku/solver/how.html">heuristics</a> and has no brute force logic yet. Even so, it's manage to solve all but the most evil computer generated Sudokus that I've thrown at it. 
</p>
<p>
As an aside, if you're in the market for some web templates for your app, I can really recommend <a href="http://www.oswd.org/">oswd - open source web design</a> as an awesome site to browse. Being the king of the FrankenWebApp I've found it invaluable.
</p> 
</p>&#x5d;&#x5d;&gt;</body>
<date>15 Dec 2005 07:24:32:501 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Sudoku + Java + SpringMVC =</title>
<body><![CDATA[no source code?&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>x@x.com</email>
<website/>
<ipAddress>65.248.8.198</ipAddress>
<date>15 Dec 2005 12:35:11:817 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Sudoku + Java + SpringMVC =</title>
<body><![CDATA[Sure, if you're keen. Drop me a line and I'll make it happen.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.13.2.142</ipAddress>
<date>15 Dec 2005 13:04:39:674 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Sudoku heuristics</title>
<body><![CDATA[I've been trying to come up with a good way to solve Sudoku puzzles for a while now, and thought it would be pretty complicated.  I'm surprised that the heuristics you described solve most of them, but I'll take your word for it.  Maybe the best solutions are the simplest ones.  Anyway, very cool blog entry.  Could I get a copy of the code as well?  Thanks!  Great blog, by the way.
&#x5d;&#x5d;&gt;</body>
<author>Mike Wallace</author>
<email>mobility@cox.net</email>
<website/>
<ipAddress>68.100.111.90</ipAddress>
<date>16 Dec 2005 07:29:54:623 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Sudoku + Java + SpringMVC =</title>
<body><![CDATA[Mike,

I've posted the original code solver to http://www.bytecode.com.au/downloads/. Comes with the CJUG harness that runs through a bunch of easy/medium/hard/evil Sudokus. Enjoy.

Glen.

&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website/>
<ipAddress>192.168.1.9</ipAddress>
<date>16 Dec 2005 07:45:11:672 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Sudoku + Java + SpringMVC =</title>
<body><![CDATA[just i need source code for sudoku in core java
&#x5d;&#x5d;&gt;</body>
<author>chola</author>
<email>chola_siri@yahoo.com</email>
<website/>
<ipAddress>219.91.191.21</ipAddress>
<date>06 Jan 2006 03:04:47:170 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Sudoku + Java + SpringMVC =</title>
<body><![CDATA[cool application for springMVC ;)&#x5d;&#x5d;&gt;</body>
<author>voip user</author>
<email/>
<website>http://www.voip-power.com</website>
<ipAddress>202.156.6.54</ipAddress>
<date>17 Jan 2006 20:04:20:491 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2005/12/15/1134671330745.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>djUnit is one cool plugin</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've been looking for a decent code coverage tool that integrates nicely with Eclipse for some time. I've used <a href="http://www.cenqua.com/clover/">clover</a> and <a href="http://cobertura.sourceforge.net/">cobertura</a> on the server side as part of automated builds and they are both very cool tools, but I've been looking for an open source tool to run on single tests in the IDE just to see how much things are improving.
</p>
<p>
Enter <a href="http://works.dgic.co.jp/djunit/">djUnit</a>. This tool has exactly the format and integration that I was after. Instead of doing a /Run As.../JUnit Test, you simply change that to /Run As.../djUnit test. And voila! Check out the <a href="http://works.dgic.co.jp/djunit/coverageview.html">sample report</a> it generates.
</p>
<p>
The other thing that is really simple is *removing* all of its coverage markers. Open up the djUnit view (I use it as a fastview), click "remove all markers", you're done. Easy, non-intrusive, and extremely useful. 
</p>
<p>
The speed the plugin does its on-the-fly instrumenting has also improved *enormously* over the last few months, to the point where it's slower, but not painfully slower, than running a normal jUnit test - and I'm happy to wait a little for the incredible convenience.
</p>
<p>
Huge kudos to the the djUnit team. Awesome stuff.
</p>&#x5d;&#x5d;&gt;</body>
<date>16 Dec 2005 05:28:50:745 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: djUnit is one cool plugin</title>
<body><![CDATA[Although I havent tried it myself I've heard good things about 
http://emma.sourceforge.net&#x5d;&#x5d;&gt;</body>
<author>Wael Chatila</author>
<email/>
<website>http://waelchatila.com</website>
<ipAddress>66.245.216.76</ipAddress>
<date>20 Jan 2006 23:18:32:917 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/01/02/1136186503776.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Now this is a decent bug report..</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've just uploaded <a href="http://opencsv.sf.net">opencsv</a> 1.2 to Sourceforge which fixes a bunch of annoying bugs. But one bug report has really stood out for me as a <a href="http://sourceforge.net/tracker/index.php?func=detail&aid=1379114&group_id=148905&atid=773541">sensational open source bug report</a>. Gabriel not just told me about the defect (not handling nulls correctly), but he posted a test case, and the fix required to make it green.
</p>
<p>
Test cases are just *so* useful for reporting and fixing bugs... and it just adds tons of value when people take the time to post a useful test. The test is actually even more valuable to me than the fix, since a test is a piece of code that just keeps on giving for future iterations and regression testing.
</p>
<p>
Cheers Gabriel! Made my day.
</p>&#x5d;&#x5d;&gt;</body>
<date>02 Jan 2006 18:21:43:776 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Now this is a decent bug report..</title>
<body><![CDATA[I totally agree with you. Whenever a bug is reported, the following should be undertaken by the developer trying to fix it:
<ol>
<li>Try to reproduce bug</li>
<li>Write test case(s) exposing bug (of course run it afterwards)</li>
<li>Fix bug</li>
<li>Run all tests and ensure all are green</li>
<li>Report bug as fixed (with reference to new test case(s) created)</li>
</ol>
This is sort of things I prefer to do when in my open source project JGAP (http://jgap.sourceforge.net) a bug comes up.&#x5d;&#x5d;&gt;</body>
<author>Klaus</author>
<email>cifrador@gmx.de</email>
<website>http://javarunner.blogspot.com</website>
<ipAddress>84.58.43.48</ipAddress>
<date>03 Jan 2006 20:11:59:105 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/01/10/1136883229429.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Reducing Pebble comment spam with maths captchas</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
My blog seems to have received heaps of comment spam over the last couple of weeks and it seems <a href="http://www.caimito.net/pebble/2006/01/08/1136765073537.html">I'm not alone</a>. So I did the open source thing and took matters into my own hands!
</p>
<p>
I've hacked the source for pebble.jar and the comments html to create a "Answer a simple maths question" captcha for comments (check out the Comments form to see it in action). Other blog systems seem to be using this kind of approach with some success so I thought I'd give it a go.
</p>
<p>
So far it's working a treat! And it will be a pain for them to write a screen scaper to pull out the maths question, solve it, then submit it. For those interested in the mods, you can get a zip of the diff, along with a prebuild jar from <a href="http://www.bytecode.com.au/downloads/pebble-1.9-captcha.zip">here</a>.
</p>
<p>
Enjoy your spam-free comments... At least for now...
</p>&#x5d;&#x5d;&gt;</body>
<date>10 Jan 2006 08:53:49:429 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: Reducing Pebble comment spam with maths captchas</title>
<body><![CDATA[My pebble blog has 4x as much spam as actual comments now. I use the filters to avoid them from being posted right away&#x5d;&#x5d;&gt;</body>
<author>Dan Hinojosa</author>
<email>dhinojosa@evolutionnext.com</email>
<website>http://www.evolutionnext.com</website>
<ipAddress>68.54.15.191</ipAddress>
<date>10 Jan 2006 16:31:13:394 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Reducing Pebble comment spam with maths captchas</title>
<body><![CDATA[<p>
Thanks Dan. I tried using filters but I still had to clean it out freqently - and because I have comment email alerts turned on I was still getting plenty of mail via these dodgy comments. 
</p>
<p>
The neat thing about the Maths captcha is that you won't even see that blog spam now since it never even gets posted - and hence I don't get the false alert emails either.
</p>
<p>
I just checked my logs and the captcha has already stopped 22 attempted spam postings in the last 24 hours! Man this blog spam thing is really becoming a problem. 
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>10 Jan 2006 16:45:26:375 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Reducing Pebble comment spam with maths captchas</title>
<body><![CDATA[<p>Dan, this is a really cool add-on for Pebble. I sure hope Simon includes it in the next release. 
</p>
<p>
I only have one comment, though. Instead of modifying Pebble's original code, you can extend it with your own class that does the captcha validation, and then modify <i>WEB-INF/classes/action.properties</i> so that the addComment action points to your class.
</p>
<p>
With that, you don't need to distribute the modified pebble.jar, just a jar with your class (and the .jspf file).</p>&#x5d;&#x5d;&gt;</body>
<author>Guillermo Castro</author>
<email>guillermo.castro@gmail.com</email>
<website>http://javageek.org/</website>
<ipAddress>200.78.153.195</ipAddress>
<date>13 Jan 2006 16:31:57:864 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Reducing Pebble comment spam with maths captchas</title>
<body><![CDATA[<p>
Guillermo, That's a great idea! I thought there must be a better way to do it. 
</p>
<p>
It sure does reduce the amount of spam that gets through. Doing a "grep captcha | wc -l" on my logs and it's caught 178 spam attempts in the last two days!
<p>
<p>
Thanks for your ideas.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>13 Jan 2006 20:45:51:128 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Reducing Pebble comment spam with maths captchas</title>
<body><![CDATA[<p>Actually I already did that. I took your code and used it on a new class, compiled it, jared it, copied the jar to lib, changed <i>action.properties</i>, changed <i>commentsForm.jspf</i> and I'm now enjoying CAPTCHA validation on my website.
</p>
<p>The only issue I see is that I had to basically copy all the code from the original <i>AddCommentAction</i>, because there's no easy way to add the validation (like a separate method) to a subclass.</p>&#x5d;&#x5d;&gt;</body>
<author>Guillermo Castro</author>
<email>guillermo.castro@gmail.com</email>
<website>http://javageek.org/</website>
<ipAddress>200.78.153.195</ipAddress>
<date>13 Jan 2006 20:54:53:780 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Reducing Pebble comment spam with maths captchas</title>
<body><![CDATA[Just clarify, I found the captcha logging not in my pebble data directory, instead it was in my server logs.  In case some of you are not finding it, check there.   &#x5d;&#x5d;&gt;</body>
<author>Mike Shoemaker</author>
<email>mike@shoesobjects.com</email>
<website>http://www.shoesobjects.com/blog</website>
<ipAddress>66.93.193.247</ipAddress>
<date>14 Jan 2006 18:24:03:883 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Reducing Pebble comment spam with maths captchas</title>
<body><![CDATA[Hi Glen,

Thanks for implementing this. I was getting close to hundred of spam comments every day.&#x5d;&#x5d;&gt;</body>
<author>Wael Chatila</author>
<email></email>
<website>http://waelchatila.com</website>
<ipAddress>66.245.216.76</ipAddress>
<date>20 Jan 2006 12:15:51:29 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Reducing Pebble comment spam with maths captchas</title>
<body><![CDATA[fyi, I just posted on my site the jar and instructions to add the captcha validation as a plugin, instead of redeploying the whole pebble app.&#x5d;&#x5d;&gt;</body>
<author>Guillermo Castro</author>
<email>guillermo.castro@gmail.com</email>
<website>http://javageek.org/</website>
<ipAddress>199.59.33.130</ipAddress>
<date>31 Jan 2006 15:00:36:502 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Reducing Pebble comment spam with maths captchas</title>
<body><![CDATA[Thank you. I need this features too.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>219.95.17.160</ipAddress>
<date>10 Feb 2007 18:32:00:590 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<trackback>
<title>Curtail Comment Spam with Pebble CAPTCHA functionality</title>
<excerpt><![CDATA[Over the past month or so, comment spam on my blog has gotten many times worse than in the past.  I have been receiving somewhere between 75-200 comment spam messages per week.  Because of this, I  was forced to enable comment moderation a while back....&#x5d;&#x5d;&gt;</excerpt>
<url>http://www.shoesobjects.com/blog/2006/01/14/1137252794680.html</url>
<blogName>Unruly Rambling</blogName>
<ipAddress>66.93.193.247</ipAddress>
<date>14 Jan 2006 15:31:53:847 +0000</date>
<state>approved</state>
</trackback>
<trackback>
<title>Reducing Comment Spam in Pebble with help of Math Captchas</title>
<excerpt><![CDATA[The last 2-3 weeks my Blog gets spammed by comments which seems to be published automatically. The last days i get at least ~150 useless Comment¬¥s a day. By using the pebble¬¥s builtin mechanismus i¬¥ll get rid of that spam, so i wouldn¬¥t be published a...&#x5d;&#x5d;&gt;</excerpt>
<url>http://www.marco-stoetzel.de/blog/2006/01/15/reducing_comment_spam_in_pebble_with_help_of_math_captchas.html</url>
<blogName>@marco-stoetzel.de</blogName>
<ipAddress>62.75.248.230</ipAddress>
<date>15 Jan 2006 17:51:07:709 +0000</date>
<state>approved</state>
</trackback>
</blogEntry>

Importing 2006/01/21/1137835017845.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Two Very Cool Developer Utils for Windows</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
While some of my development is done on Mac, and some on Linux, most of my time is spent on Windows. Not really fussed about operating systems these days, so happy to work on whatever. Anyways, I work with this guy <a href="http://www.dicamillo.net/blog/">Shayne</a> who knows more about Windows utilities than anyone, and he keeps showing me cool stuff. 
</p>
<p>
The first one is a clipboard extender called <a href="http://www.intelexual.com/products/YC3/">Yankee Clipper</a>. This beast keeps a running history of your clipboard over time, and gives you a cute dropdown menu to pick from when you use Ctrl-Alt-V. Shayne has a more complete <a href="http://dicamillo.net/blog/?p=5">review</a>.
</p>
<p>
The second cool utility that I just can't live without any more is <a href="http://www.protonfx.com/dirkey/">Dirkey</a>. This guy allows you to bring up a picklist of Windows Explorer shortcuts when you are in File Dialogs (or Explorer itself) simply by right clicking on the Close Window button. This turns out to be phenominally useful when navigating the filesystem. 
</p>
<p>
Both utilities are freeware.... And too cool for school. &#x5d;&#x5d;&gt;</body>
<date>21 Jan 2006 20:16:57:845 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/General</category>
<tags/>
<comment>
<title>Re: Two Very Cool Developer Utils for Windows</title>
<body><![CDATA[Clipper is nice indeed, thank you for the tip, but have a look to Total commander (ghisler.com), if you want to take control over your file system. I never used the Windows Explorer. One of the million features I use very often is the ability to use archives as virtual folders and do R/W *while* inside the archive. For me, as a Java developer, this is a perfect feature while checking the generated jars, or simply hacking post deployment application in case that some files are not there; especially useful while designing ANT scripts to  generate jars ... and so on. Cheers,&#x5d;&#x5d;&gt;</body>
<author>Florin</author>
<email>florin.patrascu@gmail.com</email>
<website>http://weblog.flop.ca</website>
<ipAddress>72.136.58.182</ipAddress>
<date>23 Jan 2006 02:42:30:431 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Two Very Cool Developer Utils for Windows</title>
<body><![CDATA[I haven't used Clipper, but I do use Ditto http://ditto-cp.sourceforge.net/.  It sounds like the same sort of thing.  Ditto also supports sharing a clipboard across a network with friends and a host of other cool little features.

As far as navigating the windows file system, CygWin is by far the best tool I've ever used.  http://www.cygwin.com/

&#x5d;&#x5d;&gt;</body>
<author>Darren</author>
<email>darren@bitcraft.ca</email>
<website>http://bitcraft.ca/</website>
<ipAddress>208.38.52.228</ipAddress>
<date>25 Jan 2006 04:57:22:54 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/01/24/1138100513690.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Browsing and Editing Jar Files from within Windows Explorer</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
After Florin mentioned he could browse and edit jar files from within <a href="http://www.ghisler.com">Total Commander</a>, I figured there had to be a Windows Shell extension that did a similar thing. Turns out it's built into XP! I showed one of <a href="http://blogs.asman-it.com.au/dasman/">my mates</a>, and he said, "Sure, I do that all the time"... so I guess it's old news to some, but not to me!
</p>
<p>
All you need to do is associate jar/ear/war files with the Compressed (zipped) Folder extension from within Explorer and it's all go. Just fire up Explorer, head into /Folder/Options.. and from the File Types tab, create a new association for JAR files to point to "Compressed (Zipped) Folders". There is a <a href="http://home.earthlink.net/~dmcormond/jarzip/index.html">groovy little how-to</a> available covering all this.
</p>
<p>
The true coolness, though, is that when you are browsing inside the jar, the folders are writable via standard Explorer cut and paste /  drag and drop, which is great for hacking jar files in place and patching a given class (not that *you* would ever do such a thing... but there you go).
</p>
<p>
Alright, enough of the win32-ery for a while... We return you to your standard cross-platform bloggery...
</p>
&#x5d;&#x5d;&gt;</body>
<date>24 Jan 2006 11:01:53:690 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[Glen - as I've said, I am not an Xplorer ;) fan and I don't regret that, while using Windows I do all the file related jobs withing TC unless I have an ANT roaming somewhere around but thanks for you tip anyway! <br>But yes, enough of the win32-ery, an off topic now: I wonder if you had time to see a bit the <a href="http://weblog.flop.ca/2006/01/19/1137725806397.html">captcha model</a> I am using on my Pebble version? Since the implementation is trivial, as you might very well guess, I am not trying to attract feedback on that side of the story, there is nothing innovative there, but mostly toward the <a href="http://simplecaptcha.sourceforge.net/">Simple Captcha</a> library I am using. I believe this library is great and I am curios to read your opinion about using it. If interested, I can release a pebble jar and code patches, similar with yours, so other users can use this version too .. until Simon will implement something better direct into the main Pebble distribution. Thanks!&#x5d;&#x5d;&gt;</body>
<author>Florin</author>
<email>florin.patrascu@gmail.com</email>
<website>http://weblog.flop.ca</website>
<ipAddress>72.136.58.182</ipAddress>
<date>24 Jan 2006 13:56:47:695 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[FYI, WAR files can be browsed in a similar way.

 <a href="http://waelchatila.com/2005/08/04/1123191721537.html">An alternative way of doing the same thing</a>&#x5d;&#x5d;&gt;</body>
<author>Wael Chatila</author>
<email/>
<website/>
<ipAddress>66.245.216.76</ipAddress>
<date>25 Jan 2006 05:47:42:820 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[I wonder what happens when you try to view an obfuscated jar file, where it's common practice to purposefully rename class files to thwart extraction on Windows.  For example, in a jar file, it's perfectly legal to have one file named A.class and another called a.class - two totally separate classes and files.  If you try to  extract that jar to a case-insensitive Windows drive, you'll end up overwriting one with the other.  Any idea how Windows handles such a thing in the XP "Compressed (Zipped) Folder" mode?&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>216.210.97.67</ipAddress>
<date>29 Jan 2006 10:15:49:343 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[But I still can't issue a command that parses through all the jar files (in all the differnet project libs) and tell me which ones have org.foo.bar.someClass so that I know which jar file to add to the classpath.

As usual, everything in our industry is backwards.  &#x5d;&#x5d;&gt;</body>
<author>Richard Johnson</author>
<email>rjohnson@once.com</email>
<website/>
<ipAddress>207.162.212.67</ipAddress>
<date>19 Jul 2006 23:38:32:465 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[I have the same problem with trying to browse jars on Windows. The little fix helped me open jars in Winzip which helps some but what&nbsp; I really want to do is search for files in the jar. <br />
<br />
I used to be able to do this on a Windows 2000 machine but I haven't found how to do this on an XP machine yet :(&#x5d;&#x5d;&gt;</body>
<author>Mel</author>
<email>mel@karlikdesign.com</email>
<website/>
<ipAddress>204.50.7.201</ipAddress>
<date>12 Sep 2006 19:40:06:787 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[<p>The problem with this is you loose the executable jar functionality.&nbsp; I thought it would be easily possible to add another option to the popup menu.&nbsp; This way you could right click on a jar file, choose 'view archive' and it would open using the Windows zip viewing facility.&nbsp; However, this turns out to be impossible.&nbsp; It seems that Windows XP associates opening <em>compressed folders&nbsp;</em>with a set of file extensions rather than associating individual file extensions with opening <em>compressed folders</em>.&nbsp; This means any changes you make* to the popup menu&nbsp;of a file that opens <em>compress(zipped) folders</em>,&nbsp;will change the&nbsp;popup menu for all other files that are associated with <em>compressed folders</em>.&nbsp; How screwed up is that! Also it appears there is no work around or hack available to fix this problem.</p>
<p>*&nbsp;by choosing &quot;tools-&gt;folder options-&gt; file types&quot; from the menubar in Windows Explorer</p>&#x5d;&#x5d;&gt;</body>
<author>Owen Lindsell</author>
<email>owen@thoughtsport.com</email>
<website/>
<ipAddress>160.83.32.14</ipAddress>
<date>10 Oct 2006 13:13:07:204 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[Thanks very much for how to browse and edit jar files tip; it really helps me in my day to day work.&#x5d;&#x5d;&gt;</body>
<author>shankar Kadam</author>
<email>shankar.kadam@gmail.com</email>
<website/>
<ipAddress>193.120.150.84</ipAddress>
<date>24 Jul 2007 11:35:43:810 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[Glad it was useful!&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>24 Jul 2007 20:43:48:787 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1185276943810</parent>
</comment>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[Thanks Glen,
    That was really useful.I needed a way to look into the jars.But in some other blog posting which demonstrated a different technique where we edit the .zip in the regedit to make it suitable for opening jars. Could you just comment as to what could be the possible differences between these two techniques.

The link:
http://www.nsftools.com/blog/blog-10-2004.htm#10-16-04&#x5d;&#x5d;&gt;</body>
<author>Vikas A Patil</author>
<email>vikas.a.patil@gmail.com</email>
<website/>
<ipAddress>59.145.136.1</ipAddress>
<date>25 Jul 2007 10:40:02:952 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Browsing and Editing Jar Files from within Windows Explorer</title>
<body><![CDATA[Hi,

I'm pretty sure the results are exactly the same. 

The one I link to above is done using the standard Windows UI, while your link demonstrates the same technique using RegEdit. The results should be identical.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>25 Jul 2007 19:33:17:208 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1185360002952</parent>
</comment>
</blogEntry>

Importing 2006/01/24/1138101493476.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Have you ever run a training course?</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've often been interested in getting more involved in running training courses. I've run a couple in my time, and really enjoyed the experience. I've never done anything "professionally" though.
</p>
<p>
I live in Canberra, the capital city of Australia, and the training options are numerous in stock standard areas (Intro to Java, Java Web Programming, Intro to J2EE, etc), but it's all very mainstream. I'm wondering where there might be business opportunities to offer training Australia-wide in more niche (but growing/exciting) fields of Java technology (eg Spring, Hibernate, Eclipse RCP) that developers are likely to really benefit from.
</p>
<p>
I guess the real killers would be:
<ol>
<li> Developing/sourcing the course notes (though I reckon I could build a killer Spring course based around the Pro Spring book, ditto for Eclipse RCP); 
<li> Buildling the cred/contacts to be able to sell myself as a trainer in this stuff (but let's be honest, most of the trainers here have never written much production code, so I reckon I could add a lot of "real world" value here); and
<li> Putting together the venue/lab to be able to host it.
</ol>
</p>
<p>
Training in Australia seems pretty expensive (circa $3-4k/week/student), so the maths seems to add up pretty quickly if you can put together a class of 6-8 students. Even if you were only "working" one week a month and prepping the rest the numbers could probably work.
</p>
<p>
I'd love to hear from anyone who has run any commercial developer training. Did you develop your own materials? How did you go about marketing yourself? And based on the amount of work you could generate, did the maths add up for you?
</p>&#x5d;&#x5d;&gt;</body>
<date>24 Jan 2006 22:18:13:476 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Have you ever run a training course?</title>
<body><![CDATA[Hi Glen

I ran a number of training courses (XSLT, SOA Architecture, XML Schema, XML Intro) through Wizard computing training facilities in Canberra - because they provide top training infrastructure (PC's with image management, existing customer base, reputation) . 

You probably need be able to 'sell' your training courses to Wizard so that they include them into their schedule. This worked quite well and was a lot of fun. As you can see, the training topics are quite 'stock-standard' - I have no information how to sell more specialised training. 

Have fun, 
Morten&#x5d;&#x5d;&gt;</body>
<author>Morten</author>
<email>morten.jammer@gmx.de</email>
<website/>
<ipAddress>193.26.194.2</ipAddress>
<date>17 Feb 2006 13:17:00:948 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/01/29/1138567655995.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>opencsv 1.3 ships - with heaps better Excel CSV parsing</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Thanks to some fantastic bug reports (especially <A href="http://wiki.ciscavate.org">Rogan Creswick</a> who submitted two patches, three unit tests and supporting test files... Wow! Now that's living the open source dream. Gold star effort) - <a href="http://opencsv.sf.net">opencsv 1.3</a> is now available on 
Sourceforge for your comma-separated pleasure.</p>
<p>
This release fixes numerous problems with handling embedded double-quote characters using Excel-style escaping (where "" represents an escaped embedded quote). Turns out the rules for this get pretty tricky when you have strings like """""" which represents an embedded empty quoted string (sheesh!).
</p>
<p>
Many thanks to the punters who keep posting patches and unit tests. You guys are awesome.
</p>&#x5d;&#x5d;&gt;</body>
<date>30 Jan 2006 07:47:35:995 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2006/01/31/1138711799399.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Querying java.util.Collections for fun and profit with JoSQL</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I'm working on a little project that implements an event queue. I could have happily implemented it in a List, but I've wanted the power to query it in all sorts of unusual ways so I ended up just writing it to a database. But this week I've come across <a href="http://josql.sourceforge.net/">JoSQL</a> - a very cool little library for querying java collections using SQL style semantics. 
</p>
<p>
Now this little library isn't a database tool, it's a query tool for java.util.Collections in memory (the name is a little unfortunate - but makes sense once you've used it). Once you wrap your head around it, things get very funky. To query my event queue (an ArrayList) for events of a particular value, I can do stuff like:
<pre>
Query q = new Query();
q.parse("SELECT * from event.queue.Event where key = '" + eventCode + "'");
QueryResults qr = q.execute(eventQueue);
if (qr.getResults() != null)
	return (Event[]) qr.getResults().toArray(new MonitorEvent[0]);
</pre>
</p>
<p>
Of course this is something you *could* write by hand by iterating your collections and performing your custom checks on each iteration, but using JoSQL is just *way* more productive and intuitive - and you can express what you're after very concisely.
</p>
<p>
You can event do <code>ORDER BY</code> and all sorts of SQL goodness. Very cool stuff. And how performant is it? Well, compared with the database I was persisting this stuff to... let's just say I'm a long way ahead...
</p>
<p>
Big props to the guys at JoSQL. Very funky and productive library!
</p>
&#x5d;&#x5d;&gt;</body>
<date>31 Jan 2006 23:49:59:399 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2006/02/17/1140157374825.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>MicroISV - From Vision to Reality (Book Review)</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Just finished reading <a href="http://www.amazon.com/gp/product/1590596013/ref=sr_11_1/103-4886614-1406218?%5Fencoding=UTF8">MicroISV: From Vision to Reality</a> and I have to say that this is one sensational book. If you are interested in starting your own software company, then this is one book that you need to get a hold of.
</p>
<p>
The focus of this book is starting a small product-based software company with a vision to grow it into something great. But by far the most valuable bit for me was the 50 or so interviews that the Bob Walsh carries out through the book. There interviews the startups of various sizes, their bootstrapping strategies, their marketing plan, how their product came into being, how they  improved their sales, what kind of revenue you can expect and so on. 
</p>
<p>
But the interviews aren't just with software guys. There's also interviews with editors of CNET on how to get a software review, legal guys on license agreements, eCommerce providers on how to organise credit card payment for your app, Google Adwords folks on how to improve your advertising, and even guys from Microsoft Acquisitions on how get bought!
</p>
<p>
Overall I've found this book invaluable. Some of the really important stuff he covers includes:
</p>
<ul>
<li>Getting vision for your product (I've always found this the easy bit...:-)
<li>UI Testing, Revision Control, vmware, etc.. (but you probably know all this bit)
<li>Do you really want to do this? (Personal costs of bootstrapping a small software company - hint: if you can be talked out of it, you should be!)
<li>How to design a website that will sell your product (where to get templates, hosting options, etc)
<li>eCommerce options to sell your wares (and what they cost, how to deal with fraud, taxes, and all that)
<li>End User License Agreements (and where to get templates)
<li>Managing User Support (forums, email tools, newsletters, and how to deal with the winners who send you emails like "You're tool sucks. I'd rather eat stale cheese."
<li>Download sites (tucows, cnet, etc) and how they work, how to get your stuff listed
<li>Strategies for Advertising (blogging, adwords, other viral stuff)
<li>Legals of setting up a software company / patents / trademarks, etc (in US, UK and even Australia - yah!)
<li>Forums online where you can mix with other entrepreneurs
<li>Stuff Microsoft offers to help you flog your wares (buddy programs, digital locker, etc) - not so relevant to us Java guys, but good background
<li>And a whole chapter full of interviews with ISVs at various stages (just getting started, growing, turning into full blown companies, getting acquired).
</ul>
<p>
Overall a fabulous book chock full of helpful info. I've done a brain dump of about ten things that were really helpful to me. I'll post it up here over the next week or so. 
</p>
<p>
If you've got a vision to be a software entrepreneur, just go get it.
</p>
<p>
If you live in Australia, I recommend <a href="http://www.bookware.com.au/cgi-bin/bookware/1590596013">bookware</a> - great folk to deal with.
</p>
&#x5d;&#x5d;&gt;</body>
<date>17 Feb 2006 06:22:54:825 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: MicroISV - From Vision to Reality (Book Review)</title>
<body><![CDATA[Hi Glen,

Thanks for the very kind review! Your readers might be interested in http://mymicroisv.com - it's a blog+resource site for micro-ISVs to carry forward the main point of the book: it's time for developers to redefine the software business.&#x5d;&#x5d;&gt;</body>
<author>Bob Walsh</author>
<email>bobw@safarisoftware.com</email>
<website>http://todoorelse.com</website>
<ipAddress>71.131.26.153</ipAddress>
<date>21 Feb 2006 18:36:03:369 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: MicroISV - From Vision to Reality (Book Review)</title>
<body><![CDATA[Thanks Bob. Amazing book... and <a href="http://mymicroisv.com">mymicroisv.com</a> looks like an awesome resource. I'm aggregating!&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>21 Feb 2006 20:34:53:295 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: MicroISV - From Vision to Reality (Book Review)</title>
<body><![CDATA[Glen,<br />
<br />
Thanks! The day after reading the review, I purchased a pair of books for friends and myself to read together.&nbsp; If you're ever in Chicago, consider this a standing invitation to coffee, tea or drinks.<br />
<br />
Best,<br />
<br />
Jonathan Andrew Wolter<br />
<a href="http://Techsocial.com">Techsocial.com</a> - Chicago's tech entrepreneur event calendar<br />
<a href="http://JAWspeak.com">JAWspeak.com</a> - blog on economics, investing, and entrepreneurship&#x5d;&#x5d;&gt;</body>
<author>Jonathan Andrew Wolter</author>
<email>JAW@JAWspeak.com</email>
<website>http://JAWspeak.com</website>
<ipAddress>38.99.222.102</ipAddress>
<date>08 Nov 2006 05:15:43:828 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: MicroISV - From Vision to Reality (Book Review)</title>
<body><![CDATA[Great stuff. I'm looking you up for a very hot latte next time I'm in the area...&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>08 Nov 2006 19:13:22:4 +0000</date>
<state>approved</state>
<parent>1162962943828</parent>
</comment>
</blogEntry>

Importing 2006/02/21/1140555570556.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>10 Things I'm learning about the Business of Software...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
After reading and <a href="http://blogs.bytecode.com.au/glen/2006/02/17/1140157374825.html">reviewing</a> MicroISV, I've done a brain dump on bunch of key software business ideas I learnt from that book. This stuff may be old news for you, but it's really making me think right now... 
</p>
<ul>
<li>Forget the VC thing for now. A 200 page business plan isn't worth it... but a 2 page one probably is. There is power is committing stuff to paper and if it forces you to cogently present your "one big idea", and how you're gonna get there... it's worth it for you. Anyways, you're much more desirable to a VC if your app is out there and creating buzz then if you're still getting off the drawing board.
<li>You have to be able to clearly define your target market... and the <i>smaller</i> your target market the better. That seems weird but it's like this: there are 10000 other online photo organisers out there and how is yours going to break through the noise? You probably can't even affort the Adwords to get visible. Now.. online photo organisers that are niche targetted for wedding photographers? Now that's a market. Wedding Photographers have heaps of money, you can look up 30 in your local yellow pages, and probably drop in and talk to a few. You can add *real* value in your design, promote it more easily, and make a good living for you and yours.
<li>Users don't care about technology and you probably shouldn't either. Does it matter that it's AJAX powered and uses the latest MVC framework? No, that's not a selling point. To use the above example, a selling point is that you can transform your photos with a single click, and view the previews in realtime to make the call on what the right contrast is. That's stuff users care about. People don't buy the steak, they buy the sizzle. So make it sizzle with practical features that are easy to use and easy on the eye. Spend some money buying some nice icons, and get a nice template for that web app. It's likely to have more appeal to your users than that new infinitely scalable and configurable web framework that will take you three months to learn.
<li>Small companies in the bootstrap stage can't affort big marketing $ and shouldn't try. You don't have the expertise or the $ to throw at marketing, so build organically - in other ways. You're likely to get *much* better return from blogging it, writing articles about it, getting it reviewed, and generally creating your own buzz than spending thousands on ads.
<li>Release it for sale earlier rather than later. Don't spend three years on it perfecting it, you might not even have a decent market. Keep your business model "non-binary". Get <i>something</i> out there that <i>someone</i> is willing to pay for then iterate, iterate, iterate. If no-one's willing to pay for it then at least your found out early and can move on to something more profitable.
<li>You're better off release a new enhanced version of your current product than have an ever-expanding line. People will line up for an impressive v2 or v3 who won't necessarily love your new clipboard manager app.
<li>Focus on Revenue. <b>It's all about revenue</b>. This was actually a big eye opener for me. Fight your programmer instincts and ask yourself "What's the <i>minimum</i> coding I can do that will increase sales?" <i>You</i> might think it's a cool new feature but if it doesn't swing new users your way, it's not worth implementing. What feature would really make your users life easier? What would really save them time? Implement that.
<li>Be conservative about your profit estimates. When budgetting with your wife, plan for $0 revenue from this thing. Then if everything goes brown, you're still happily married. This is a good thing. It's worth protecting. Make sure they are on board with the huge time suckage this thing is going to be - they are paying the price for this so they better know that they come first.
<li>A big part of getting your ISV going is bootstrapping. For most of us that means working a day job and powering on after hours / part time. You're better off having a plan B than just quiting your sucky day job and planning on becoming a Software Giant. Hold on to that dream - it's what will keep you going - but add some wisdom to the passion. If you starve to death in the process, or you lose your family home, well... I think that price is too high. YMMV. Don't think "if only I had six months off I could develop a killer app..." start now at 10 hours a week in the early morning and actually execute on that vision. 
<li>Execution is everything. Steve Jobs said <a href="http://alex.golub.name/log/?p=328">Real Artists Ship!</a>. It's not about the talk, it's not about perfection, it's not about a million features. The ultimate validation of any artist is getting their stuff out for public consumption. Be brave. Get it out there and listen to your customers, beta testers, bloggers, and others who will say it's great/ok/fair/rubbish and give you invaluable (and sometimes painful) insight into how to make it unbelievable.
</ul>&#x5d;&#x5d;&gt;</body>
<date>21 Feb 2006 20:59:30:556 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Startup</category>
<tags></tags>
<comment>
<title>Re: 10 Things I'm learning about the Business of Software...</title>
<body><![CDATA[Excellent article.  Really captures some very good points on the business of software.

Thanks.&#x5d;&#x5d;&gt;</body>
<author>Dharmesh Shah</author>
<email>dshah@onstartups.com</email>
<website>http://onstartups.com</website>
<ipAddress>24.62.63.245</ipAddress>
<date>08 May 2006 01:33:51:988 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: 10 Things I'm learning about the Business of Software...</title>
<body><![CDATA[The best article I have read about startups.... Hats off to you man.... I am in the same phase which you have described.. Am still searching for some niche market....&#x5d;&#x5d;&gt;</body>
<author>Himanshu</author>
<email>madsadman@gmail.com</email>
<website>http://www.software-gang.com</website>
<ipAddress>220.227.174.131</ipAddress>
<date>04 Oct 2006 06:22:49:889 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: 10 Things I'm learning about the Business of Software...</title>
<body><![CDATA[Thanks Mate. All the best for your venture. That MicroISV book mentioned is well worth a look. Tons of useful info in there.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>05 Oct 2006 20:24:48:415 +0000</date>
<state>approved</state>
<parent>1159942969889</parent>
</comment>
<comment>
<title>Re: 10 Things I'm learning about the Business of Software...</title>
<body><![CDATA[found you via some sort of random google and very grateful to have seen your blog here.&nbsp; much appreciated, friend.&nbsp; best of luck in your pursuits.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>76.170.98.139</ipAddress>
<date>21 Oct 2006 10:10:08:338 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: 10 Things I'm learning about the Business of Software...</title>
<body><![CDATA[Great post. Thank you. I found your blog from the open CSV project you worked on at Sourceforge.<br />
<br />
Your &quot;What's the <em>minimum</em> coding I can do that will increase sales?&quot; quote remindes me of the 37signals folks in Chicago. They're totally about restricting features, and making simple, kicking apps.&#x5d;&#x5d;&gt;</body>
<author>Jonathan Andrew Wolter</author>
<email>JAW@JAWspeak.com</email>
<website>http://JAWspeak.com</website>
<ipAddress>38.99.222.102</ipAddress>
<date>24 Oct 2006 23:09:46:577 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: 10 Things I'm learning about the Business of Software...</title>
<body><![CDATA[Thanks Guys. Glad it's been useful. Mostly it's just my take away from that very groovy MicroISV book which I can highly recommend.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>25 Oct 2006 08:44:20:423 +0000</date>
<state>approved</state>
<parent>1161731386577</parent>
</comment>
</blogEntry>

Importing 2006/02/23/1140726004341.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>First experiences with EasyMock (and JMock)</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've been meaning to have a play with some of the "dynamic proxy" type mock frameworks out there for a while and yesterday I finally had a chance.
</p>
<p>
For most of consulting stuff I'm writing J2EE tests (EJB,MQ,JDBC,JNDI,Web stuff) and I've found <a href="http://mockrunner.sourceforge.net/">Mockrunner</a> to be the business. Huge fan. But MockRunner works on providing mock implementations of InitialContext, HttpServletRequest, and all those other essential classes in the JEE space. 
</p>
<p>
What I was after was a way to mock out a particular interface in my own code (without writing an empty implementation of that interface by hand). There seems to be two main players in the "dynamic" style of the mocking space: <a href="http://www.easymock.org/">EasyMock</a> and <a href="http://jmock.codehaus.org/">JMock</a>. They both seem to have a fair bit of traction, so I thought I'd take a look at both.
</p>
<p>
I had a look at JMock first, since it's probably got the bigger buzz (and every codehaus project I've played with has been pretty smick). There were a couple of things that I had trouble with:
<ul>
<li>Your test classes have to extends their <code>MockObjectTestCase</code>. This is a bit of a showstopper. I already have other JUnit base class extensions that I want to use (which I've hacked in some custom Spring stuff) and found this restriction pretty arbitrary.</li>
<li>Method names are stored in strings. It's going to make refactoring a little trick... but not a showstopper by any means. I miss the command completion, so it's a little annoying, but I can see what they're doing at it makes sense from a design decision.</li>
<li>Syntax sugar tastes a little sour at first. I've heard lots of good things about the "naturalness" of the JMock API and that your code reads like a spec. The whole idea looks pretty cool... and you end up with something pretty concise... but my head wasn't there and the one example in the doco didn't take me to a place where I could generalise in my own tests. </li>
</ul>
</p>
<p>
After getting a little frustrated with JMock, I thought I'd have a look as EasyMock. I first heard about EasyMock in an appendix to <a href="http://www.amazon.com/gp/product/1590594614/104-9228155-6315913?v=glance&n=283155">Pro Spring</a> - geez that's a good book - so I was keen to give it some airtime too. A few things:
<ul>
<li>So the whole record/replay deal is a bit of a headshift. I like the "Sounds difficult? It isn't" comment in the doco. It kept me going :-) Essentially doing the same thing as JMocks more terse style of constraint expression but using actual method calls instead of the fluid API thing (so refactoring and completion work as expected).  
<li>The examples in the doco spoke to a lot more stuff *I* was doing, so I found I could quickstart a lot easier (I was calling a method with no args that returned an array of a particular object - but even just having an example of different types of invocations and return values was a big win).
<li>No requirement to extend particular base classes (so I could use my existing JUnit base classes and life was good). As I said, this was a big win for me. In fact, the new version of EasyMock has no requirement for JUnit at all - so you can use it just fine in <a href="http://testng.org/doc/">TestNG</a> (which I've been busting to check out BTW). But the new version needs Java5, so I'm on hold for now.
</ul>
</p>
<p>
Both APIs have the capacity to mock either interfaces or classes (though to mock classes you have to add a dynamic bytecode generator jar - to be expected). Both seem to have plenty of traction. Can't really go wrong with either depending on your needs. 
</p>
<p>
EasyMock is definitely the business for me. Looking forward to giving it a more solid workout over the next couple of weeks.
</p>&#x5d;&#x5d;&gt;</body>
<date>24 Feb 2006 07:20:04:341 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: First experiences with EasyMock (and JMock)</title>
<body><![CDATA[You don't have to extend MockObjectTestCase to use JMock, but if you do, it simply provides the syntactic sugar of JMock you mention.&#x5d;&#x5d;&gt;</body>
<author>Trond</author>
<email/>
<website>http://blog.ovstetun.no</website>
<ipAddress>195.159.86.22</ipAddress>
<date>25 Feb 2006 01:18:50:10 +1100</date>
<state>approved</state>
</comment>
<comment>
<title>Re: First experiences with EasyMock (and JMock)</title>
<body><![CDATA[<p>
Thanks Trond. Wasn't aware of that. That's probably one they should mention in their quickstart. Thanks for the pointer.
</p> &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>25 Feb 2006 07:04:43:68 +1100</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/02/26/1140984917921.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Filtering Collections with JoSQL</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
<a href="http://josql.sourceforge.net">JoSQL</a> is a pretty addictive API for querying <code>java.util.Collection</code> classes. The more I use it, the more I like it.
</p>
<p>
This weekend I had a scenario where my <code>Collection</code> was full of objects implementing a custom <code>Event</code> interface - some of them <code>SystemEvent</code>, and some of them <code>MonitorEvent</code> (and one day, potentially, a host of others). <code>MonitorEvent</code>s have a bunch of additional routines they expose which I needed to query on.
</p>
<p>
So, how do you filter out all the <code>MonitorEvent</code> instances out of the <code>Event</code> collection, then apply a query only relevant to <code>MonitorEvent</code> methods so you can extract only a subset of those that match your criteria? First you talk to Gary at JoSQL support... And then you write three lines of JoSQL...
</p>
<p>
<pre>
    Query q.parse("SELECT * from a.b.c.MonitorEvent " +
       " where class.name = '" + MonitorEvent.class.getName() + "' " +
       " and orgId = " + orgId + 
       " LIMIT " + max);
    // eventQueue is my List of Event objects   
    QueryResults qr = q.execute(eventQueue); 
    List myList = q.getResults();
</pre>
</p>
<p>
Of course, there's actually a bunch of other ways to do this. I could add a <code>getType()</code> method on my Event object, and be done with the class filter. Just query for objects matching the given event type (but that might not make semantic sense depending on what an Event represents).
</p>
<p>
Another option Gary suggested was to write a custom JoSQL function which does an instanceOf() check (the ANDs get applied before the cast, so life is all good). In fact, he mentioned this feature might even make it in 1.3. Too cool. </p>
<p>
Anyways, really happy with the expressiveness JoSQL gives me to do all sorts of collection querying. Great stuff. Loving that JoSQL goodness...
</p>&#x5d;&#x5d;&gt;</body>
<date>27 Feb 2006 07:15:17:921 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2006/02/28/1141124332496.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>EclipseWiki - a cool plugin for embedded wiki content</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I'm a big fan of keeping stuff in a simple textual format (even more so since reading <a href="http://www.pragmaticprogrammer.com/ppbook/index.shtml">The Pragmatic Programmer</a>). So on our little startup project we've simply been keeping the documentation in text files. The project to-do list, installation instructions, all that sorta stuff. There's only two developers on the project at the moment, so we just sync up to CVS and we get the latest gear.
</p>
<p>
Well I've started doing doco for more serious stuff on coding internals, and decided it would be cool to hyperlink from one text doc to another... but I didn't want to start marking everything up to html. Too much overhead... and overhead means another reason to stop me documenting. But I also didn't really want the overhead of a full blown wiki right now... another thing to manage/secure/backup/administer... and I would have to leave the IDE to update the docs... giving me another reason to not document while it's fresh. So text files have been serving me pretty well.
</p>
<p>
Enter <a href="http://eclipsewiki.sourceforge.net/">EclipseWiki</a>: a very cool eclipse plugin that will treat any text document in your project with a .wiki extension as being a Wiki doc. It will mark up your CamelCase links to the related CamelCase.wiki text file. And it will even mark up references to your class files as a link the class file itself in the IDE (so you can just use Ctrl-Space in the text editor, select your class, and you get a hyperlink to the real class). 
</p>
<p>
<img src="images/2006/EclipseWiki.gif"/>
</p>
<p>
As shown above, the EclipseWiki view has some tabs at the bottom to switch between editing, browsing, and help, and you can choose from three wiki formats (Ward's Wiki, TWiki, and SnipSnap). Sweet.
</p>
<p>
Overall a very cool little plugin. I preserve my simple and easily editable text format that I can hack straight from my IDE while I'm there... and I get the benefits of having a Wiki framework to make it look pretty and link it all together. And down the track if we need to move to a full blown wiki, it's just going to be cut and paste.
</p>
<p>
Great work guys. Recommended.
</p>&#x5d;&#x5d;&gt;</body>
<date>28 Feb 2006 21:58:52:496 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2006/03/18/1142657753618.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Drinking the Ajax Kool-Aid... Can I just dump my web framework?</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I've been integrating <a href="http://getahead.ltd.uk/dwr">DWR</a> into our web monitoring app to display recent monitoring events dynamically while the user is doing other stuff. Since I already have a service object that does all the heavy lifting, integrating it was a snap. And now they have a section of the page where they can see events as they happen.
</p>
<p>
Pretty chuffed with myself, I decided to experiement with making one of our edit forms ajax-ified. Again, the service calls were already there to add/update/delete the object the form was representing, so I just exposed then in dwr.xml... and I have a dynamic table that I can add/edit/delete within one html page. 
Ok. Now I've now got freight-train momentum, so I added some <a href="http://www.openrico.org">OpenRico</a> sauce to make things slide and collapse... baby.
</p>
<img src="images/2006/FirstAjaxExperience.gif" alt="First Ajax Experience using DWR"/>
<p>
Then I got to thinking... This was all pretty easy. I didn't need to setup a special controller with custom table, edit, and delete views; I didn't have to configure any bean marshalling; I didn't have to do a stack of view mapping config; and I could develop and test with a click of "Refresh" on the browser.
</p>
<p>Then the penny dropped. You know, I could probably live without most the web framework entirely! Have one html page for each portion of functionality, do the service calls via DWR to do the heavy lifting, and just add some script for interface swishness. It does mean I'm committing the javascript only for the view... but it seems to a lot less work than the MVC framework I'm using now. And then I found that much <a href="http://radio.weblogs.com/0112098/2005/11/16.html#a541">smarter </a> <a href="http://raibledesigns.com/page/rd?entry=re_is_ajax_gonna_kill">people</a> than I have already been thinking this some time.
</p>
<p>
So is this just crazy talk? Doing the view in straight Javascript and just use DWR to call appropriate methods in the Application Service layer to do the add/update/delete/execute/query or whatever the business logic requires? 
</p>
<p>
DWR gives me the security to lock down what methods are exposed. And the business layer itself applies security to make sure users can only delete/edit/update their own data. So can I kiss my MVC framework goodbye? Any brave souls walked this path? Validation could be a deal, ditto for browser compatibility, but if DWR and Rico are solid there then I'm pretty close to a compelling rapid web dev environment. 
</p>&#x5d;&#x5d;&gt;</body>
<date>18 Mar 2006 15:55:53:618 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/03/22/1143018330286.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>What they never told you about SimpleDateFormat...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I was tracking down some unusual date behaviour and came across this little gem. Check out the following code and tell me what the output should be...
</p>
<pre>
        DateFormat formatter = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss z");  
        
        Date startDate = new Date();     
        String strDate = formatter.format(startDate);     
        Date parsedDate = formatter.parse(strDate);

        System.out.println("Start Date is: [" + startDate +"]  Parsed Date is: [" + parsedDate + "]");

</pre>
<p>
Looks pretty straight ahead. Create a new date formatter, apply it to a Date object, output the string, and then reverse the process. Should end up with what you started with. Well, if you try it in Australia on a JDK that's pre 5.0 you'll get this:
</p>
<pre>
Start Date is: [Wed Mar 22 <b>13:53:18</b> EST 2006]  Parsed Date is: [Wed Mar 22 <b>14:53:18</b> EST 2006]
</pre>
<p>
Whoa there! Where did that extra hour come from? It all comes back to that magic <b>z</b> in the format string. Seems there are issues with that TimeZone parsing story pre JDK 5.0. Going on the Pragmatic Programmer "select() isn't broken" philosophy, it took me a long while to assume the problem wasn't in my code, and finally to check out the bug parade. But sure enough, let me introduce you to bug <A href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4845901">4845901</a>.
</p>
<p>
You have been warned...
</p>&#x5d;&#x5d;&gt;</body>
<date>22 Mar 2006 20:05:30:286 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/03/28/1143511185703.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Iterations considered harmful?</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
It would be pretty insane to argue that regularly delivering running, tested, value-add code is hazardous to any project. But when it comes to iterations, if you're not careful the mojo can get very funky pretty quickly. I've just finished reading a <a href="http://alistair.cockburn.us/crystal/articles/aih/areiterationshazardous.htm">fantastic article</a> by Alistair Cockburn on the misuse of iterations in agile projects... and I've just realised that I'm living the nightmare myself! 
</p>
<p>
Alistair's argument comes down to the fact that shipping iterations is not necessarily the same as delivering real value to the client. And it's not the same as getting you closer to your end-game. A fave quote from the article:
</p>
<p>
<i>
"Danger grows when the results of the iteration are not directly linked to delivering the product to the end user. Without that linkage, iteration results hang in the air just as badly as the old, pre-agile forms of wandering in the wilderness."
</i>
</p>
<p>
Reading this I started to rethink our iterations in line with the big picture of getting our product out the door. I've spent a bunch of time over the last couple of months "tidying" up stuff, refactoring and adding small features that don't (1) add immediate value to the client; and (2) Move us closer to getting 1.0 out the door. Yes I am hitting iterations, but no it's not moving us closer to 1.0. That thinking is changing today. The problem is not the iterations - the problem is that I'm not planning them properly!
</p>
<p>
In line with Alistair's recommendations, I'm setting aside some time this week to make sure that our monthly iterations are better aligned to our end game. In essence, it's all about <b>delivering</b>. Not about delivering iterations, but about delivering the features that are adding value and getting us closer to a revenue stream. 
</p>
<p>
If you haven't read Alistair Cockburn's <a href="http://www.amazon.com/exec/obidos/tg/detail/-/0201699478/103-9563560-4159862?v=glance">Crystal Clear</a> - do yourself a favour. I have found this book a really challenging read. This really brought together a whole bunch of agile thinking into my world - and it's the most practical and battle-tested book on small team development methodology I've read. 
</p>
<p>
Awesome stuff...
</p>&#x5d;&#x5d;&gt;</body>
<date>28 Mar 2006 12:59:45:703 +1100</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/General</category>
<tags></tags>
</blogEntry>

Importing 2006/03/30/1143750630535.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>What Grandma never told you about Cookie.setMaxAge(0)...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
While I've blogged about <a href="http://blogs.bytecode.com.au/glen/2005/06/08/1118184073080.html">cookie grief</a> before, I spent most of yesterday discovering more than a man should about cookie deletion. So I'm iterating over <code>request.getCookies()</code> and finding the relevant cookie to delete, then calling <code>setMaxAge(0)</code> to expire it immediately. What could go wrong?
</p>
<p>
Well... the cookie wasn't disappearing. These things can be a bit of a bugger to track down since you need to see the browser and response headers to work out what is going on. The tool I like best for this is <a href="http://www.blunck.info/iehttpheaders.html">ieHttpHeaders</a> (an IE equivalent of <a href="http://livehttpheaders.mozdev.org/">livehttpheaders</a>). 
</p>
<p>
My first drama was that I wasn't seeing the <code>Set-Cookie</code> header come back to the browser to delete the cookie. Hmm... seems you've got to add the cookie to the response once you do the <code>setMaxAge(0)</code> on it. Probably should have known that. No biggy... Try again...
</p>
<p>
Ok. Now I see the <code>Set-Cookie</code> coming back to the browser header to kill off the cookie, but on then next request, the browser is still sending the cookie to the server! After much stuffing around I noticed that when I created the cookie, the <code>Set-Cookie</code> header has a path and domain, but when I delete the cookie there's no such beast. You'd think I could call <code>Cookie.getDomain()</code> and <code>Cookie.getPath()</code> on the cookie I retrieve from the request. No cigar. The browser doesn't tell you that stuff, so you just get nulls.
</p>
<p>
So then I changed my deleteCookie routine to call the same code that generated the Cookie in the first place (with domain, path, and age), and call <code>setMaxAge(0)</code> on that and add it to the response.  All good. 
</p>
<p>
The moral of the story is that <code>setMaxAge(0)</code> only does what you think it does if the path and domain match the ones you used to set the cookie in the first place. Of course, once you know about it, you find out that it's a <a href="http://www.systemvikar.biz/faq/servlet.xtp#How-do-I-delete-cookies?">well known thing</a> anyways...
</p>
<p>
Blogging it up so that Google may save you from <code>setMaxAge(0)</code> pain in the future...
</p>&#x5d;&#x5d;&gt;</body>
<date>30 Mar 2006 20:30:30:535 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: What Grandma never told you about Cookie.setMaxAge(0)...</title>
<body><![CDATA[Useful thanks...&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>193.24.28.250</ipAddress>
<date>09 May 2006 12:02:16:415 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: What Grandma never told you about Cookie.setMaxAge(0)...</title>
<body><![CDATA[Thanks!&nbsp; I could not figure out why the cookie wasn't going away with just setMaxAge(0)&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>128.147.38.10</ipAddress>
<date>18 Oct 2006 17:19:46:413 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: What Grandma never told you about Cookie.setMaxAge(0)...</title>
<body><![CDATA[Worked great on JBoss 4.0.x with Tomcat (fronted by mod_jk Apache load balancer)...this really saved the day! Thanks so much!!&#x5d;&#x5d;&gt;</body>
<author>Dan</author>
<email/>
<website/>
<ipAddress>83.236.183.130</ipAddress>
<date>06 Mar 2007 11:27:36:931 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/04/06/1144357521557.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>There *are* things to love about java.util.logging...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I admit it. This week is the first time I've ever used <code>java.util.logging</code>. I've pretty much always used commons logging and log4j for all my logging needs since one of them was already a dependency in a supporting library, and I've never really had a reason to look elsewhere.
</p>
<p>
Till now...
</p>
<p>
I've had reason to work on some code that integrates into Websphere's Member Manager stuff. This code is way down in the  WAS stack, and if I wanted to use log4j, I'd have to drag it into /lib/ext.... which means that everyone on that app server is now using my version of log4j. Not so sweet.   
</p>
<p>
My next thought was to use Commons Logging (JCL). WAS5.1 uses commons logging internally, and I could get it into WAS6, but I found there are <a href="http://www.qos.ch/logging/classloader.jsp">all sorts of classloader issues</a> with it when /lib/ext comes into play. So that was off the list.
</p>
<p>
Finally I did some digging and discovered that WAS6 has switched to <code>java.util.logging</code> for all its logging goodness. Read a <a href="http://www.javapractices.com/Topic143.cjp">few</a> <a href="http://www.crazysquirrel.com/computing/java/logging.jspx">good</a> <a  href="http://java.sun.com/j2se/1.4.2/docs/guide/util/logging/overview.html">
articles</a> and I was good to go. Had to get used to the idea of Loggers, Handlers and Formatters and how they hung together. but it wasn't much of a switch really. You end up doing stuff like: 
<pre>
Logger myLogger = Logger.getLogger(myClass.class.getName());
</pre>
along with a:
<pre>
if (myLogger.isLoggable(Level.FINE))
    myLogger.log(Level.FINE, "Try catching this", e);
</pre>
Seems that the log method does some reflection to see what method are logging from. Not sure of the performance implications of that one under load... the IBM docs recommend using the <code>logp()</code> version of the call for just that reason... but we'll see. The basic Formatter is pretty average (two line log messages!), but it's pluggable so you can probably simulate a log4j console appender if you were that keen. The standard ConsoleAppender goes to stderr which I found a bit annoying and haven't work out how to fix just yet.
</p>
<p>
The only bit I found generally confusing was how you actually configure it declaritively. You can edit <code>logging.properties</code> in your JRE, but that's a little overkill. You can supply -D args to your command line for a config file or config class... but that's not going to work for my /lib/ext story.
</p>
<p>
Then I found that WAS6 provides <a href="http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/index.jsp?topic=/com.ibm.websphere.base.doc/info/aes/ae/ttrb_configjavalog.html">cute ways</a> to modify your log levels dynamically on a per logger basis straight from the admin console. This is ideal for a /lib/ext app where you want to wind up logging every so often and debug a problem... but you don't want an outage on the app server.  
</p>
<p>
Anyways... I'm not sure java.util.logging deserves the bad wrap that it gets. It certainly doesn't have the prebuild flexibility of log4j with <code>DailyRollingFileWithAChocolateToppingLogAppenders</code>, but for the basics it does plenty (including the equivalent of a RollingFileAppender), and definitely hits the sweet spot for Websphere /lib/ext uses.
</p>
<p>
Worth exploring...
</p>&#x5d;&#x5d;&gt;</body>
<date>07 Apr 2006 07:05:21:557 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: There *are* things to love about java.util.logging...</title>
<body><![CDATA[Using log4j and java.util.logging is similar because when java.util.logging was first announced log4j moved more closely to java.util.logging and then java.util.logging changed and became more like log4j.  But, java.util.logging configuration is the big reason I don't use it.  log4j is just so much easier to configure.&#x5d;&#x5d;&gt;</body>
<author>Neil</author>
<email>NeilWeber@yahoo.com</email>
<website></website>
<ipAddress>70.98.214.162</ipAddress>
<date>07 Apr 2006 08:43:11:863 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: There *are* things to love about java.util.logging...</title>
<body><![CDATA[I just want to have methods like warning have the ability to pass in a Throwable directly.  I hate to have to do log( Level.WARNING, ..., throwable ).
&#x5d;&#x5d;&gt;</body>
<author>James E. Ervin</author>
<email></email>
<website></website>
<ipAddress>24.173.105.33</ipAddress>
<date>11 Apr 2006 04:13:22:197 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: There *are* things to love about java.util.logging...</title>
<body><![CDATA[Yeah. +1 on the exception story. The other one I miss from commons logging is if(log.isWarnEnabled()) rather than log.isLoggable(Level.WARNING)...  &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>11 Apr 2006 05:21:03:652 +1000</date>
<state>approved</state>
<parent>1144692802197</parent>
</comment>
<comment>
<title>multi-user ?</title>
<body><![CDATA[anyone got an idea how you would configure java.util.logging to log user-specific information ?
e.g. when you got a servlet-based webapp with log4j i just use MDC/NDC and define the appender to output JSESSIONID with the log message. so i perfectly see what a single user did and am not overwhelmed by log output. but how would i do that in j.u.l ?&#x5d;&#x5d;&gt;</body>
<author>lhe</author>
<email>lh@capesso.de</email>
<website></website>
<ipAddress>84.163.220.148</ipAddress>
<date>12 Apr 2006 03:43:43:529 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: There *are* things to love about java.util.logging...</title>
<body><![CDATA[i need some help, HOW  can I stop the loggger util in JAVA from displaying the error messasges in the console window ?
pls help me out, thanks :)
-
ahsan&#x5d;&#x5d;&gt;</body>
<author>Ahsan</author>
<email>ahsan.jnl@gmail.com</email>
<website></website>
<ipAddress>203.188.243.19</ipAddress>
<date>06 Jul 2006 06:34:20:449 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: There *are* things to love about java.util.logging...</title>
<body><![CDATA[Ahsan,

You could programaatically set your handler to Level.OFF or edit your logging.properties file in your JRE directory.


# --- ConsoleHandler ---
# Override of global logging level
java.util.logging.ConsoleHandler.level=OFF&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>06 Jul 2006 06:49:05:426 +1000</date>
<state>approved</state>
<parent>1152131660449</parent>
</comment>
<comment>
<title>Re: There *are* things to love about java.util.logging...</title>
<body><![CDATA[Dear Sir,
I did the following

"edit your logging.properties file in your JRE directory. # --- ConsoleHandler --- # Override of global logging level java.util.logging.ConsoleHandle
r.level=OFF"

BUT, I got the following error, THE APP WORKED ALLRIGHT, but the following error appeared in the console !
"Can't set level for java.util.logging.ConsoleHandler "

Can you show me a way out ?

lso, how can I do the following

"You could programaatically set your handler to Level.OFF " ??

can u show me the code snipet ?&#x5d;&#x5d;&gt;</body>
<author>Ahsan</author>
<email>ahsan.jnl@gmail.com</email>
<website></website>
<ipAddress>203.188.243.19</ipAddress>
<date>06 Jul 2006 06:58:10:328 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: There *are* things to love about java.util.logging...</title>
<body><![CDATA[PROB WITH console error done with, solved :), thanks, but how to do it programmatically ??&#x5d;&#x5d;&gt;</body>
<author>Ahsan</author>
<email>ahsan.jnl@gmail.com</email>
<website></website>
<ipAddress>203.188.243.19</ipAddress>
<date>06 Jul 2006 07:03:20:889 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/04/11/1144746856186.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>DWR + Spring = Ajax Sudoku Puzzle</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
There is so much to love about <a href="http://getahead.ltd.uk/dwr/">DWR</a> and <a href="http://getahead.ltd.uk/dwr/server/spring">Spring integration</a>. Just configure up your dwr.xml and tell it which spring beans you want to expose for Ajax goodness, and which methods you want to expose on them.
</p>
<p>
In preparation for a talk I'm giving Wednesday night to the <a href="http://www.cjugaustralia.org">Canberra JUG</a>, I've added Ajax goodness to my little <a href="http://www.bytecode.com.au/sudoku/">
Spring-powered Sudoku solver</a>. And it was a total snack. You can double click on individual cells to solve just that square, or use the "Solve" button to solve the whole puzzle. You could probably write a better one entirely in Javascript (<a href="http://www.scanraid.com/sudoku.htm">other people have</a>), but it does serve as a great example of using Spring IoC, AOP, ORM, and Unit testing support.
</p>
<p>
Check it out (source available here soon). And if you're in the Australian capital this Wednesday night, drop into the Sun offices on Northbourne from 6PM for Pizza, Beer and a fun introduction to Spring (and if you're not into Spring, just come for the Sudoku solving :-).
</p>&#x5d;&#x5d;&gt;</body>
<date>11 Apr 2006 19:14:16:186 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: DWR + Spring = Ajax Sudoku Puzzle</title>
<body><![CDATA[I too am writting an app with DWR and Spring I just love it. Thanks for your example. I'm also using your CSV parser, so thanks a bunch.&#x5d;&#x5d;&gt;</body>
<author>dsuzette</author>
<email>suzette.daniel@bankofamerica.com</email>
<website></website>
<ipAddress>171.159.192.10</ipAddress>
<date>15 Apr 2006 00:17:46:382 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: DWR + Spring = Ajax Sudoku Puzzle</title>
<body><![CDATA[I'm not 100% convinced that sudoku solver is correct. Peek at the following solution I generated by hitting <em>Get A Puzzle</em> then <em>Solve</em>: http://www.srcf.ucam.org/~cjp39/sudoku-broken.gif

Not convinced it's adhering to the "digits must be unique in each row, cell and column" rule ‚Äî and if it's not adhering to *that*, which is almost the only rule of Sudoku, how can one call it a Sudoku solver?&#x5d;&#x5d;&gt;</body>
<author>Chris Purcell</author>
<email>chris.purcell.39@gmail.com</email>
<website></website>
<ipAddress>62.253.128.11</ipAddress>
<date>20 Apr 2006 20:07:38:878 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: DWR + Spring = Ajax Sudoku Puzzle</title>
<body><![CDATA[<p>Chris, thanks for your feedback. I think this one is more of a browser render issue. If the solver can't solve a puzzle (and it can't solve the ones marked evil) - it will shortlist candidates down to the possible numbers for that cell. It seems on your browser is only displays the first "candidate" - some of those cells actually contain a few numbers. 
</p>
<p>Anyways, here's a grab of <a href="images/2006/sudoku-evil.gif">same puzzle</a> on my Mac which makes the problem a little clearer. What the UI should probably do is colour the cells that it couldn't solve to give better cues that the cell still needs work.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>20 Apr 2006 23:08:55:466 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Source Also Now Available</title>
<body><![CDATA[<p>
For those interested, the source to the webapp is now available in the <a href="http://www.bytecode.com.au/downloads/">downloads</a> section. Look for the files marked <b>spring-cjug-talk-*</b>.  There are versions with or without the supporting spring/velocity/sitemesh libs to make downloads a little snappier for those just interested in the sudoku stuff.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>20 Apr 2006 23:13:38:158 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/04/15/1145094929102.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>java.util.regex.Pattern tester - A one line Ajax app</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
For a while now I've been wanting a way to test out java.util.regex.Pattern regexs. So with a little bit of DWR and a one-line implementation using String.matches()... I've developed a java.util.regex.Pattern <a href="http://www.bytecode.com.au/patterns/">Ajax Tester</a> - possibly the world's most trivial Ajax app! Type in your patterns and click for red or green pattern matching goodness.  At least it saves recompiling :-).
</p>
<p>
Hope you all have a sensational easter. If you're keen to explore religon a little more this weekend, I can definitely vouch for <a href="http://c3iglobal.org/">Christian City Church</a> as a contemporary, energetic and relevant faith community. Sure to be one near you.
Have a great holiday.</p>&#x5d;&#x5d;&gt;</body>
<date>15 Apr 2006 19:55:29:102 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: java.util.regex.Pattern tester - A one line Ajax app</title>
<body><![CDATA[Pattern: \w+
Text String: Hola Mundo
Result: No Match

Something is wrong, it must find two matches "Hola" y "Mundo"&#x5d;&#x5d;&gt;</body>
<author>iago</author>
<email>scaamanho@gmail.com</email>
<website>http://www.iago-soft.com/blog</website>
<ipAddress>213.170.46.30</ipAddress>
<date>17 Apr 2006 20:11:18:672 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: java.util.regex.Pattern tester - A one line Ajax app</title>
<body><![CDATA[Iago,

I don't think the \w will match the space in your string. Behind the scenes it does a straight String.matches() using the values you supply so it has to match the whole string to return true. 

Could you do a word followed by an optional space with something like (\w[\s]?)+ &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>18 Apr 2006 07:39:12:566 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: java.util.regex.Pattern tester - A one line Ajax app</title>
<body><![CDATA[Hi, thanks for your awnser, but in that test, i dont want match the spaces, only the words (like a StringTokenizer or csv parser). Ok i think that "Patter Tester", could find more than one matches.This insue will be fine and could be cool, if the result (Match or No Match) show also the matches highlighted (whit css for example) in the whole word.
After that sugestion, and understanding the goal of your app, just say, good job, and thanks for your response again.&#x5d;&#x5d;&gt;</body>
<author>iago</author>
<email>scaamanho@gmail.com</email>
<website>http://www.iago-soft.com/blog</website>
<ipAddress>213.170.46.30</ipAddress>
<date>18 Apr 2006 18:41:27:587 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/04/27/1146139970766.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>There's a lot to love about Eclipse Web Tools Platform...(with screenshots)</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
If you haven't played with <a href="http://www.eclipse.org/webtools/">Eclipse WTP</a> and you do web development... then today is your day to start. I've been using it for about a month now and I've gotta say I am totally impressed with it.
</p>
<p>
The WTP is a set of plugins for Eclipse 3.1 that gives you very neat stuff to make web development that much easier (things like syntax colouring and command completion for HTML, JSP, JSTL, Javascript, CSS). Anyways, here are a few of the things I just love about it...
</p>
<p>
First off the bat is css tag completion... I always forget these..
</p>
<img src="images/2006/wtp-css-tags.gif" style="margin: 5px; border: 1px solid black"/>
<p>
And the completion is smart about potential values too..
</p>
<img src="images/2006/wtp-css-values.gif" style="margin: 5px; border: 1px solid black"/>
<p>
I've been doing a lot of ajax stuff lately with DWR, and the WTP Javascript completion is just great. Does completion for your own functions too..
</p>
<img src="images/2006/wtp-javascript.gif" style="margin: 5px; border: 1px solid black"/>
<p>
Next big fave is the JSTL completion. First class.. just love it...
</p>
<img src="images/2006/wtp-jstl.gif" style="margin: 5px; border: 1px solid black"/>
<p>
And if that's not enough to love there's also a stack of J2EE plugins to do stuff like EJB wizards, Web Services wizards, embeddable app servers and the like...
</p>
<img src="images/2006/wtp-servers.gif" style="margin: 5px; border: 1px solid black"/>
<p>
There are supposed to be ways to upgrade to WTP straight from Eclipse 3.1 Update Manager... but I never got it working... They offer an "all-in-one" download with Eclipse + all the WTP stuff in a single tarball which is what I eventually retreated to. It also motivated me to finally sort out how to <a href="http://blog.exis.com/colin/archives/2004/12/23/managing-plugins-in-eclipse/">install plugins properly</a> so I don't have to install them again every time I upgrade Eclipse. 
</p>
<p>
Anyways... big fan of WTP.. and the stuff coming in 1.5 looks very cool (including JSF, WS-Security, and EJB3 tool support). Big props to the Eclipse WTP dudes. Great stuff.
</p>&#x5d;&#x5d;&gt;</body>
<date>27 Apr 2006 22:12:50:766 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: There's a lot to love about Eclipse Web Tools Platform...(with screenshots)</title>
<body><![CDATA[Once you figured out how to install plugins properly did you figure out how to install WTP w/out the all-in-one tarball?  I had the same problem and did, like you, just installed the all-in-one, but I'd prefer to install Eclipse and then WTP on top of it.&#x5d;&#x5d;&gt;</body>
<author>Erik Weibust</author>
<email>erik@weibust.net</email>
<website>http://erik.weibust.net</website>
<ipAddress>71.153.213.41</ipAddress>
<date>28 Apr 2006 02:29:02:706 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: There's a lot to love about Eclipse Web Tools Platform...(with screenshots)</title>
<body><![CDATA[Strange, the WTP update works fine for me, although admittedly, I'm currently using it with 3.2 rather than 3.1. Seem to remember it working on 3.1 too, though.

Did you get a particular problem?&#x5d;&#x5d;&gt;</body>
<author>Paul Russell</author>
<email>blog@paulrussell.org</email>
<website>http://www.paulrussell.org</website>
<ipAddress>80.3.32.11</ipAddress>
<date>28 Apr 2006 03:49:40:142 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: There's a lot to love about Eclipse Web Tools Platform...(with screenshots)</title>
<body><![CDATA[<p>
Eric & Paul, thanks for your feedback. 
</p>
<p>
Eric, the answer is no. Once I learned about handling plugins nicely, I tried a reinstall of base 3.1.2 and then tried setting up WTP into a plugin location. Still no cigar. That's when I retreated to the all-in-one option.
</p>
<p>
Paul, the particular error I received was during the install process itself. One of the plugins late in the install just complained about an I/O error and bombed out of update manager. That was on a Win32 box.
</p>
<p>
On my Mac I managed to use Update  Manager to go from 3.1.0 to 3.1.2 and then to WTP and it eventually worked (but I had to use the main eclipse site rather than a mirror for it to work).
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>28 Apr 2006 06:54:29:429 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/05/12/1147428976791.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Glen's amazing SOAP adventures with SAML &amp; XML Security</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I've been doing a bit of work for a client that centres around SAML & XML Signatures over a SOAP transport. I've done plenty of work in the SAML space before (and XML Security for that matter), but the web services angle is new.
</p>
<p>
Anyways, it gave me a chance to look at the (surprisingly slim) SAML Java landscape again to see what's hip and happening. I've developed stuff with Verisign TSIK (which has interestingly been donated to Apache recently... but without the SAML stuff), but these days I'm pretty happy with <a href="http://www.opensaml.org/">opensaml</a>. I've found it's very accurate to the SAML spec, and the library is very productive to work with. Only neg is the use of a special (later?) JAXP dependency meaning you have to do funny business with /jre/lib/endorsed overrides for the javax.xml.* replacements. Under the covers uses Apache <a href="http://xml.apache.org/security/">XML Security</a> for the digital signature stuff which seems to work just great.
</p>
<p>
I thought it was all going to be so simple... until I took a look at how the SOAP DOM implementation integrated with what the XML Security library wanted out of it. 
</p>
<p>
XML Security goes through a process called Canonicalisation (c14n) on the XML before calculating hashes and whatnot. That process takes into account namespaces that are in place for the elements being signed and handles the various ways the same piece of xml can be represented. For example, an element which is represented as <code>zz:myelement xmlns:zz="http://xxx"</code> could just as validly be stored as <code>myelement xmlns="http://xxx"</code> and the same signature will still hold. Throw a single extra character of whitespace into the body of the tags, or insert any new namespaces into the picture, and your hosed... 
</p>
<p>
Which is where my problems began. The implementation of the DOM interfaces in the underlying SOAP library was... well.. suboptimal. Some of the namespacing on the elements and attributes was just broken. And as for the SOAP API, well, I found myself actually *liking* and *respecting* DOM after going through the pain of creating SOAP Names, and then associated Elements and then trying to append them to various places... and finding out they're not *really* children of the element you just added them to until you call update() on the message context...
</p>
<p>
After blowing a ton of time working out what was all bad, I finally worked out a strategy. Write out the SOAP message to a stream, feed that stream into a *real* DOM document, calculate your signature, add your nodes, then tranform the resulting DOM back into a SOAP message. Voila! Valid signatures and valid SOAP. 
</p>
<p>
And don't even get me started on JAX RPC fault handling... that's for another day. But it has taught me that not all DOMs are created equal. You've been warned...
</p>
<p>
But huge props to the opensaml and Apache XML Security guys... both first class offerings.
</p>&#x5d;&#x5d;&gt;</body>
<date>12 May 2006 20:16:16:791 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/05/14/1147584717161.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Yahoo Desktop is worth a look...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I've played around with Google desktop (and others) in the past and never had much success. They all slurped too much CPU, didn't handle my OpenOffice files or PDFs, and came with interfaces that were either too simple, or far too complex.
</p>
<p>
My local Aussie PC mag, <a href="http://www.pcauthority.com.au/">PC Authority</a> did a feature on desktop search technologies this month and gave the editor's choice to <a href="http://desktop.yahoo.com/">Yahoo! Desktop</a>. I didn't have much luck with Google desktop, but based on their review the Yahoo offering looked like it was worth for a spin. And it was...
</p>
<p>
I've gotta say that I'm pretty impressed. Handles all my OpenOffice docs, and displays them inside the search window just fine (note: you do have to download the filters pack which handles an extra 200 file types - don't know why they didn't just roll it into the base install). Ditto for the PDFs. (Screenshot below)
</p>
<p>
<img src="images/2006/YahooDesktop.gif"/>
</p>
<p>
Haven't been able to get it to index my IMAP store yet, but other that than it works a treat. Low CPU impact. Nice UI. Very stable. And I'm actually finding it very handy!
</p>
<p>
Big props to the Yahoo! Dudes. Very class offering.
</p>&#x5d;&#x5d;&gt;</body>
<date>14 May 2006 15:31:57:161 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/General</category>
<tags></tags>
</blogEntry>

Importing 2006/05/29/1148899911328.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>It's just gotta be time to learn Groovy...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Alright. I can't stand it any more. After hearing all the cool stuff people are doing with Dynamic Languages, I've just gotta jump on the bandwagon to see what all the fuss is about.
</p>
<p>
I'm going to have a play with <a href="http://groovy.codehaus.org">Groovy</a> first up, cause I'm not willing to surrender the head space of going totally non Java.... or the tons of libraries that I've got used to over the years. I think just getting into closures and builders will be enough of a sea change for this little black duck. 
</p>
<p>
I am very keen to see what Groovy might offer in the web tier (<a href="http://groovy.codehaus.org/Groovlets">Groovlets</a>  anyone?), since I'm doing less and less MVC as things get more and more Ajaxy with Spring and <a href="http://getahead.ltd.uk/dwr/">DWR</a>. Also reckon that scripting engines are going to be a great tool for developing Domain Specific Languages (like the ability for users to write pluggable rules for our monitoring software). Very keen to explore more.  
</p>
<p>
Had a quick squiz at <a href="http://grails.codehaus.org/">Grails</a> to get a feel for what's achieveable in a hurry in the web space... and following the great <a href="http://grails.codehaus.org/Quick+Start">Quickstart</a> I had my first CRUD app up in a flash... Of course, then I became completely lost since the whole groovy story is quite a paradigm shift in itself.
</p>
<p>
Anyways, more news here when I've had a more solid play.
</p>&#x5d;&#x5d;&gt;</body>
<date>29 May 2006 20:51:51:328 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: It's just gotta be time to learn Groovy...</title>
<body><![CDATA[Monitoring software?  URL?&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>71.85.199.122</ipAddress>
<date>30 May 2006 00:16:12:237 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: It's just gotta be time to learn Groovy...</title>
<body><![CDATA[Alas. The Monitoring gear is only in early implementation right now. You can be sure I'll be making noise when I've got something to show and tell....&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>30 May 2006 06:19:58:107 +1000</date>
<state>approved</state>
<parent>1148912172237</parent>
</comment>
</blogEntry>

Importing 2006/06/06/1149587872883.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Doing Package Name Kung-Fu with JarJarLinks</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
If you've ever had issues with conflicting versions of the same jar file, you really need to take a look at <a href="http://tonicsystems.com/products/jarjar/">JarJarLinks</a> . JarJarLinks is an Ant task that lets you repackage jar files into your own package scheme by doing neato bytecode kungfu. 
</p>
<p>
So you can do stuff like this to repackage commons-kungfu.jar into your own package structure:
</p>
<pre>
        &lt;jarjar jarfile="myapp.jar"&gt;
            &lt;fileset dir="build/classes"/&gt;
            &lt;zipfileset src="lib/commons-kungfu.jar"/&gt;
            &lt;rule pattern="org.apache.commons.kungfu.**" result="au.com.bytecode.commons.kungfu.@1"/&gt;
        &lt;/jarjar&gt;
</pre>
<p>
In the sample above (stolen from the manual), you simply use the <code>jarjar</code> task (which descends the standard jar task, and offers all the same config switches) to repackage the classes from commons-kungfu.jar into myapp.jar. Jarjar rips out the classes, changes the package naming to whatever makes sense for you, changes any references in your code to the new name, then adds the modded classes to your target jar. So, for instance, Jarjar does the work of changing all your references to <code>org.apache.commons.kungfu</code> to, say, <code>au.com.bytecode.commons.kungfu</code> and repackages the changed classes inside your own jar. You then no longer need to distribute commons-kungfu.jar with your app - the changed classes end up in your app's jar file.
</p>
<p>
Here's two killer scenarios... 
<ul>
<li> Scenario one is when you don't want to ship external jars (commons-kungfu.jar) with your standalone app. </li>
<li> Scenario two is when you want to bundle commons-kungfu.jar with your webapp, but your appserver has an old version of commons-kungfu.jar in its own root classloader. Use jarjar to package it into your own war file under a different package name and you're good to go.</li>
</ul>
</p>
<p>
I've recently used it to great success where I wanted to deploy a particular jar file to /lib/ext on Websphere, but didn't want to force everyone else on the appserver to use that particular version of the jar. Repackaged the jar into my own naming structure and I was good to go.
</p>
<p>
JarJar is even smart about embedded strings in your jar files. So if you do a <code>Class.forName("org.apache.commons.kungfu.FactoryImpl")</code> then that string will be successfully changed to the new package name too. 
</p>
<p>
Many props to the guys at Tonic Systems. Really slick piece of work!
</p>&#x5d;&#x5d;&gt;</body>
<date>06 Jun 2006 19:57:52:883 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: Doing Package Name Kung-Fu with JarJarLinks</title>
<body><![CDATA[Hello
About the second scenario : you can also force the classloader to load the version of common-kungfu shipped in the webapp. In the websphere admin console, you need to set the property "classloader preference" to "PARENT_LAST" (default value is "PARENT_FIRST").
Hope it helps
&#x5d;&#x5d;&gt;</body>
<author>Alex Victoor</author>
<email>alexvictoor@gmail.com</email>
<website></website>
<ipAddress>82.150.19.227</ipAddress>
<date>06 Jun 2006 22:54:28:142 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Doing Package Name Kung-Fu with JarJarLinks</title>
<body><![CDATA[Great point, Victor! You'd need to do it for every webapp running on that server I'd assume. Or is there a way to change that setting globally? So all webapps default to PARENT_LAST (including newly deployed ones)?&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>07 Jun 2006 06:59:25:971 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Doing Package Name Kung-Fu with JarJarLinks</title>
<body><![CDATA[I am not sure you can change the default settings... However, you can use jacl scripts to automatically deploy your war and set up the classloaders.

Alex&#x5d;&#x5d;&gt;</body>
<author>Alex Victoor</author>
<email>alexvictoor@gmail.com</email>
<website></website>
<ipAddress>82.150.19.227</ipAddress>
<date>07 Jun 2006 17:07:07:780 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/06/07/1149714918817.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>opencsv-1.4 goes out the door...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Just uploaded the latest release of <a href="http://opencsv.sf.net">opencsv</a> to Sourceforge - a very simple CSV parser under Apache 2.0 license. The new release adds two requested features:
<ul>
<li>Support in CSVReader for skipping first x lines of an incoming file
<li>Support in CSVWriter for suppressing quotes in the output of fields
</ul>
</p>
<p>
The real cool thing from my perspective was that these were both user-submitted changes (thanks Andreus and Peter!). I just had to write the test cases... and sometimes users even submit those with their changes!
</p>
<p>
Living the open source dream...
</p>&#x5d;&#x5d;&gt;</body>
<date>08 Jun 2006 07:15:18:817 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: opencsv-1.4 goes out the door...</title>
<body><![CDATA[thank you&#x5d;&#x5d;&gt;</body>
<author>Daniel</author>
<email></email>
<website></website>
<ipAddress>82.76.116.154</ipAddress>
<date>08 Jun 2006 08:08:37:371 +1000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/06/20/1150801572320.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>If you *have* to use Swing...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
... Then at least get a butt-kicking GUI design tool like <a href="http://www.instantiations.com/windowbuilderpro5/">WindowBuilder Pro</a>. I'm not a Swing fan. I'm not smart enough to deal with its layout managers nor creating damn model backing objects for my Combo boxes. I'm pretty much SWT only these days (and probably have been for the last two years) and unlike pretty much everyone... I love using a GUI builder (I know, what a pansy... but for the smallish projects I work on I find it unbelievably productive).
</p>
<p>
I've heard good things about Matisse, but I've been using WindowBuilder for years and it's been just fantastic (FD: I received a promo copy of WindowBuilder ages ago so it was extremely good value for me!). It works great in Eclipse, I can use it for both Swing and SWT development (why I got into it originally), and it's got a kicking UI designer that is unbelievably smart about underlying code changes and refactors - with no "untouchable" sections or magic tokens (so your buddies on the CVS don't need to have it installed).  I've always found it really intuitive too... when you've got to shuffle components around the tree view of things is a Godsend....
</p>
<p>
<img src="./images/2006/WindowBuilder.gif" alt="Window Builder Tree View"/>
</p>
<p>
So I had to throw together a "useful for about two weeks of testing" GUI this arvo, and, for something different, it seemed like Swing might be a nice candidate since I was after a quick and dirty GUI and wanted to keep the bundled jar count to exactly zero. Ahh... Coming home to Swing after SWT... Tell me again why:
<pre>
UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
</pre>
is required? Is there *ever* a reason that you'd want to not default to this if it was available?  And throwing a checked exception too... But I digress...
</p>
<p>
All of that said, my quick and dirty Swing GUI was a snack with WindowBuilder. I've never used the Swing part of it before, but it has all the same GUI building goodness that I've come to love from the SWT Designer portion.
<p>
The fidelity things still bites after having worked with SWT for so long... Why can't I Ctrl-Z to undo a paste in a JTextArea? But the platform has come a long way, and it definitely fits the goods for a quick hackup of a GUI:
</p>
<p>
<img src="./images/2006/SAMLHarness.gif" alt="SAML Tester GUI on Windows"/>
</p>
<p>
Which will run unaltered on multiple platforms... 
</p>
<p>
<img src="./images/2006/SAMLHarnessMac.gif" alt="SAML Tester GUI on MacOSX"/>
</p>
<p>
As a quick hackup, the Swing story is pretty compelling. And the look and feels *have* come a long way with each new version. I'm still a raving SWT fan. There is something about the platform fidelity, native integrations and the practical style of the API that just makes me want to love it. 
</p>
<p>
Big props to the guys at <a href="http://www.instantiations.com/">Instantiations</a>... WindowBuilder is the gift that just keeps on giving... 
</p>&#x5d;&#x5d;&gt;</body>
<date>20 Jun 2006 21:06:12:320 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/06/30/1151665749323.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Groovy is the Shizang... And "Groovy In Action" is gonna be killer</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I'm learning <a href="http://groovy.codehaus.org/">Groovy</a> at the moment, and having an absolute ball. If you haven't played with it for a while, jump on in - things seem very stable these days. I'm finding I'm using it all the time for little scripts. 
</p>
<p>
I've also had a chance to review a close-to-final <a href="http://www.manning.com/koenig/">Groovy In Action</a> and I gotta tell you that this is gonna be one sensational book. Very accessible writing style coupled with deep technical content and killer examples - it will be the definitive work on Groovy.
</p>
<p>
Today I've been playing with <a href="http://docs.codehaus.org/display/GROOVY/Groovy+SOAP">GroovySOAP</a> - very groovy little library for web services. In the mood for some world cup action? (I know, the Australian Socceroos are out through a VERY SOFT penalty in the last minute of extra time). One of my mates send me the wsdl for a <a href="http://www.dataaccess.nl/wk2006/footballpoolwebservice.wso">World Cup Web Service</a> so I figured I have a crack at a client:

<pre>
import groovy.net.soap.SoapClient

def proxy = 
    new SoapClient("http://www.dataaccess.nl/wk2006/footballpoolwebservice.wso?WSDL")

println "\n\n  Cities Hosting Games:  \n\n"
proxy.Cities().each() { city -> println "${city}" }

println "\n\n  Teams and their Flags:  \n\n";
println proxy.Teams().getMtTeamInfo().each { 
	team -> println "${team.msName}\t\t${team.msCountryFlag}" 
}
</pre>
<p>
Very groovy! I'm hoping to rewrite the crypto libraries for my PasswordSafeSWT app in Groovy since ranges just make byte operations so darn easy. I'm finding anytime I have to dealing with anything to do with datastructures I wish I was coding in Groovy...
</p>
<p>
Olay, Olay, Olay! Groovy, Groovy!
</p>&#x5d;&#x5d;&gt;</body>
<date>30 Jun 2006 21:09:09:323 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/06/30/1151666985396.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>opencsv 1.5 sneaks out the door... makes SQL to CSV a snap...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Another chapter in the "tiny CSV library keeps on growing" saga... <a href="http://opencsv.sf.net">opencsv 1.5</a> has gone out the door. The new version includes changes to CSVWriter to allow for easily exporting a SQL table or query to a CVS file. 
</p>
<p>
The new method <code>writeAll(ResultSet rs, boolean includeHeaders)</code> makes exporting SQL to CSV a snap! Does the hard work of coercing Bits, CLOBs, Timestamps and whatnot to Strings on the way out.
</p>
<p>
Thanks to Sean Sullivan for the good work in adding this feature.
</p>&#x5d;&#x5d;&gt;</body>
<date>30 Jun 2006 21:29:45:396 +1000</date>
<state>approved</state>
<author>glen</author>
<staticName></staticName>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: opencsv 1.5 sneaks out the door... makes SQL to CSV a snap...</title>
<body><![CDATA[I really like opencsv. It's small and solves only one problem but does so very well. Perfect!
<br>
<br>
I find support for ResultSets in OpenCSV a bit irritating. What about a generic ResultSetToStringConverter?&#x5d;&#x5d;&gt;</body>
<author>Timo Stamm</author>
<email>t.stamm@macnews.de</email>
<website></website>
<ipAddress>213.9.96.234</ipAddress>
<date>07 Jul 2006 00:01:15:438 +1000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: opencsv 1.5 sneaks out the door... makes SQL to CSV a snap...</title>
<body><![CDATA[<p>
Thanks for your feedback Timo. I initially felt *exactly* the same way and used almost *exactly* the same words when talking with Sean about integrating his changes it into a subclass of CSVWriter. </p>
<p>
In fact CSVWriter itself wasn't even part of opencsv originally, it was a user-driven inclusion. After kicking things around with Sean, after a while I came to the conclusion that dumping the result of a SQL query out to CSV is probably a hugely popular use case for CSVWriter, and the impact was a single new signature with no dependencies outside the JDK. I actually felt adding one new method to CSVWriter was a smaller impact than bundling additional utility classes or subclasses. I reckon   its going to make some users day!
</p>
<p>
If it really drives you crazy, one option is to drop back to opencsv 1.4 which is identical but for the SQL code. But it sounds like you're more worried about the vision of the library... and let me assure you that I won't be going crazy with "kitchen sink" inclusions in future versions - tiny and light is the definitely the vision. Thanks so much for your feedback and support, though. I do appreciate it.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email></email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>08 Jul 2006 07:47:11:458 +1000</date>
<state>approved</state>
<parent>1152194475438</parent>
</comment>
</blogEntry>

Importing 2006/07/20/1153428600000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Migrating to Pebble 2.0 on Jetty</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I've cut over from Pebble 1.9 to 2.0 RC1 without too many issues. But for those of you attempting this down the track, here are a few of my hurts to learn from...
</p>
<p>
First it would not display any of my previous 1.9 entries. Whenever I attempted to reindex it would dump out FATAL errors to the logs. I finally wound up logging on the Pebble DAO stuff and saw:
</p>
<pre>
Loading /data/pebble/blogs/glen/2004/03/13/1079209312000.xml
org.xml.sax.SAXParseException: Premature end of file.
</pre>
<p>
Turns out some of my old pebble blog entries must have died with a 0 length file (there was typically a .bak file right next door which I could just rename). Once that was sorted, a full reindex and they all came back. Phew! 
</p>
<p>
The next hurdle was getting RSS feeds working again. Due to a bug in Jetty that <a href="http://sourceforge.net/mailarchive/forum.php?thread_id=23735087&forum_id=42851">Greg discussed</a> on the mailing list, .xml files weren't being processed correctly. I ended up having to add the following entries to Pebble's web.xml:
</p>
<pre>

&lt;servlet&gt;
    &lt;servlet-name&gt;jspxml&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.apache.jasper.servlet.JspServlet &lt;/servlet-class&gt;
  &lt;/servlet&gt;

  &lt;servlet-mapping&gt;
        &lt;servlet-name>jspxml&lt;/servlet-name&gt;
        &lt;url-pattern>*.xml&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt; 

</pre>
<p>
Pebble 2.0 looks really good. Simon's made the move to a total Spring solution with this release, using Acegi for the security engine, so I'm keen to take a wander through the source - been meaning to learn Acegi for ages.
</p>
<p>
Big props to Simon and the guys for a great new release!
</p>&#x5d;&#x5d;&gt;</body>
<date>20 Jul 2006 20:50:00:0 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/07/22/1153545420000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Starting to look at Grails...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>After spending the last couple of weeks tinkering with <a href="http://groovy.codehaus.org">Groovy</a>, I figured it was time to have a closer look at <a href="http://www.grails.org/">Grails</a> to see what it had to offer. I've gotta say that my first impressions are very positive.</p>
<p>First of all, the <a href="http://www.grails.org/User+Guide">user guide</a> has increased out of sight - with tons of coverage on the stuff you want to know about (how controllers work, dynamic tag libraries, ORM integration, all very cool). Follow the quick start and you'll be up and running very quickly. Be warned, you really need to know a little Groovy before you embark on this journey otherwise a lot of things won't make much sense to you. Just the essentials: closures, groovy beans &amp;&nbsp; collections will probably get you started.</p>
<p>Grails uses Hibernate under the covers, and if you've worked with Hibernate before, you'll be pretty comfortable with the conventions. &quot;One to Many&quot; operations are a snap - inside your Order class declare your &quot;Set lineitem&quot; then use a &quot;def relatesToMany = [ lineitem : LineItem ]&quot;. If you want to make navigation bidirectional, &quot;def belongsTo = Order&quot; in your LineItem and you're off.</p>
<p>In the hour I had this arvo, I've managed to get a small app doing bidirectional mappings between four domain classes. Using the standard controllers (you get basic CRUD controllers for free without a line of code), I've got things persisting to my Postgres database, with the schema generated for you by Grails on the fly. Geez. </p>
<p>I haven't done any work with <a href="http://www.rubyonrails.com/">Ruby on Rails</a>&nbsp;(<a href="http://www.madbean.com/">Matt</a> is doing a tail on this at our next <a href="http://www.cjugaustralia.org/">CJUG</a>), but I guess this is the kinda thing that people talk about when they say that dynamic languages can really help shorten development cycles. </p>
<p>Will write some more when I've had more of a chance to tinker...</p>&#x5d;&#x5d;&gt;</body>
<date>22 Jul 2006 05:17:00:0 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/08/03/1154638800000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Grails = Productivity++ (maybe even Productivity*=)</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>For my &quot;teach yourself Grails&quot; project I'm building a little SMS Website gateway which I'm calling CyaThen. The idea is to be able to logon, select a bunch of users from your addressbook, and send them an SMS (or schedule one for later). </p>
<p>Turns out that this is quite a good little tester for grails, since I'm needing to:</p>
<ul>
    <li>Write a ton of simple forms for create/edit/delete messages, history, addressbook - all with database integration - and all with form validation </li>
    <li>Implement a signup process (email integration, SHA1) </li>
    <li>Generate XML for submission to the SMS provider gateway </li>
    <li>Integrate commons-http to submit the XML to the gateway website </li>
    <li>Customise the CSS with my own template </li>
</ul>
<p>Here's a grab of the latest workings:</p>
<p>&nbsp;<img alt="CyaThen grab" src="images/2006/CyaThen.gif" /></p>
<p>I estimate that I've spent around 20 hours so far and I'm nearly done. The last bits centre around integrating the addressbook selections into creating a new message. (I'd also like to integrate some&nbsp;Ajax into the new message dialog ala Gmail addressbook selection).</p>
<p>So far, I've given Grails a pretty good workout. I've hit two bugs (and one in Groovy) - all of which were fixed in two days (where do these guys get the time??). </p>
<p>I just can't believe how much stuff I can do so quickly in Grails. I'm really having a ball. The listserv support is awesome, the doco is growing every day, and I really feel like I'm getting stuff done. </p>
<p>I've developed service classes (and test cases), I injected them into controllers, I've written custom queries (In grails you can query straight of your domain class using dynamic methods created for each of your fields, so you do stuff Account.findByUserId and Account.FindByUserIdAndPassword - how funky is that!), I've used regexp validators with custom error messages, I've written dynamic taglibs. Geez, this thing is a productivity machine.</p>
<p>Worth a look if you haven't already... (will post up CyaThen for people to play with in a week or so - so you can get a feel for what Grails can do in a hurry).</p>
<p>Huge Props to <a href="http://graemerocher.blogspot.com/">Graeme</a> and the gang for an outstanding contribution!</p>
<p>Glen.</p>
<p>&nbsp;</p>&#x5d;&#x5d;&gt;</body>
<date>03 Aug 2006 21:00:00:0 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: Grails = Productivity++ (maybe even Productivity*=)</title>
<body><![CDATA[Amen brother<br />
<br />
How about Math.pow( productivity, 10 ) ?<br />
<br />
Maybe not, let's not get ridiculous<br />
<br />
<br />
( from the Mailing list )&#x5d;&#x5d;&gt;</body>
<author>Kerry Wilson</author>
<email>kerry@allthingswilson.com</email>
<website>http://www.allthingswilson.com</website>
<ipAddress>68.53.199.147</ipAddress>
<date>07 Aug 2006 02:46:17:758 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Grails = Productivity++ (maybe even Productivity*=)</title>
<body><![CDATA[the leaset interesting part but, is this a home made template in the screenshot?&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>85.97.8.156</ipAddress>
<date>20 Aug 2006 17:04:08:387 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Grails = Productivity++ (maybe even Productivity*=)</title>
<body><![CDATA[<p>I wish. This one is straight out of <a href="http://www.westciv.com/style_master/index.html">Style Master</a>. Based on the css file it generates, it looks like the original author is <a href="http://www.monolinea.com/">Kemie Guaida</a>. </p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>20 Aug 2006 20:41:32:122 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1156093448387</parent>
</comment>
<comment>
<title>Re: Grails = Productivity++ (maybe even Productivity*=)</title>
<body><![CDATA[Nice job on the app Glen, 

Btw, could you list the other tools

(like Style Master) that you use

Almost on every application plz?&#x5d;&#x5d;&gt;</body>
<author>Andres</author>
<email>afdiaz@yahoo.com</email>
<website></website>
<ipAddress>200.3.193.210</ipAddress>
<date>20 Mar 2007 15:58:38:322 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1156106492122</parent>
</comment>
<comment>
<title>Re: Grails = Productivity++ (maybe even Productivity*=)</title>
<body><![CDATA[Great work picking unusual and unique project ideas. The world doesn't need any more contact databases etc. I like how your apps work!&#x5d;&#x5d;&gt;</body>
<author>Ben Edwards</author>
<email>ben@refactr.com</email>
<website>http://refactr.com</website>
<ipAddress>24.31.15.76</ipAddress>
<date>30 Mar 2007 06:06:52:112 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Grails = Productivity++ (maybe even Productivity*=)</title>
<body><![CDATA[<p>After having done a real-life project with grails I'd like to give an estimate for the factor:</p>

<pre>
<i>Grails</i> = <i>Productivity</i> *= 0.1
</pre>
&#x5d;&#x5d;&gt;</body>
<author>Dirk E√üer</author>
<email>essdir@web.de</email>
<website></website>
<ipAddress>194.8.203.226</ipAddress>
<date>24 Oct 2007 08:20:48:732 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2006/08/10/1155247345798.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Grails + Yahoo Autocomplete = Giddy Up</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>My little grails SMS gateway is powering along. I've now integrated <a href="http://developer.yahoo.com/yui/autocomplete/">Yahoo autocomplete</a> into my &quot;New SMS&quot; page and it works just great. Now my users can begin typing entries from their addressbook, and get that snazzy dropdown happening as they type. Even works with multiple elements when you type in a comma. Sample below:</p>
<p><img alt="Autocomplete in CyaThen.com" src="images/2006/YahooAutocomplete.gif" /></p>
<p>I've been really impressed with how customisable Yahoo have made it. You can wire up the datasource to be Ajax (which is the way I went since Grails makes the xml generation so easy), or an in-page array. You can apply all kinda fades and delays and caching and... well, check out their <a href="http://developer.yahoo.com/yui/examples/autocomplete/customize.html">example page</a> to see all the customise options.</p>
<p>Thought it might be useful to other grails guys to jot down the steps I needed to go through to get it happening. This only applied to Grails 0.2, the file might be already included in a future version.</p>
<p>1.&nbsp;You need to <a href="http://sourceforge.net/projects/yui">download</a> the Yahoo components from sourceforge since Grails 0.2 didn't include the autocomplete_min.js file that you need. Track down that file and copy it into the /web-app/js/yahoo directory in your grails app.</p>
<p>2. Edit the JavaScript TagLib.groovy and make sure the yahoo map is edited to include 'yahoo/autocomplete-min'&nbsp; (note their is no .js on the end of that one)</p>
<p>3. Inside the view that you want&nbsp;to have an autocomplete field, edit your html &lt;head&gt; element to include &lt;g:javascript library=&quot;yahoo&quot; /&gt; which will pull in all the Javascript you need.</p>
<p>4. Add a script element that will tell wire up your input element to your backend XML datasource. Here's what mine looks like:</p>
<pre>&lt;script&gt;   
    var myDataSource = new YAHOO.widget.DS_XHR(&quot;search&quot;, [&quot;person&quot;, &quot;name&quot;]);  
    myDataSource.responseType = myDataSource.TYPE_XML; 
    var myAutoComp = new YAHOO.widget.AutoComplete('numbers','customcontainer', myDataSource);   
    myAutoComp.delimChar = &quot;,&quot;  
&lt;/script&gt; 
</pre>
<p>This piece of magic tells the yahoo component to call my &quot;search&quot; action, and expect the returned XML to have an array of &quot;person&quot; elements, each with a &quot;name&quot; field to display. The autocomplete line wires up that datasource to my &quot;numbers&quot; input box using the empty &quot;customcontainer&quot; DIV to display the funky slidy autocomplete list.</p>
<p>5. Finally, you just need to create a Grails on your current controller to create the XML. You'll get the user's query is params.query and you need to return some well formed XML that the autocomplete can parse. With a builder that couldn't be easier. </p>
<pre>def search = {
    		
  def str = params.query?.toUpperCase()
  println &quot;Searching for $str&quot;;
  // do your custom stuff here
  render(contentType: &quot;text/xml&quot;) {
    addressbook() {
        for (c in acc.contacts) {
            if (c.fullName().toUpperCase() =~ /${str}/ || c.mobile =~ /${str}/) {
                person() {
	    	    name(c.fullName() + &quot; (&quot; + c.mobile + &quot;)&quot;)
	    	}
    	    }
    	 }
    }
  }
}
</pre>
<p>If I could work out a better way to make the regexps case insenitive that'd look a lot smoother... but you get the idea. Yahoo gives you some sample CSS which is the look and feel I'm using above, but you can customise with your own CSS class/id/whatever if you have the inclination. Very tunable.</p>
<p>Anyways, I give autocomplete the big tick. Huge props to the Yahoo guys for opening up this stuff. Loving every second of it.</p>&#x5d;&#x5d;&gt;</body>
<date>10 Aug 2006 22:02:25:798 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Grails + Yahoo Autocomplete = Giddy Up</title>
<body><![CDATA[<p>I read some of your Grails posts. And it seems to be a really good showcase.</p>
<p>What are your plans with it? Will it be downloadable as reference for the community. I'm really interested in taking a look how you did some things. I'm starting myself with Grails currently.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>62.140.141.8</ipAddress>
<date>11 Aug 2006 07:48:52:844 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Grails + Yahoo Autocomplete = Giddy Up</title>
<body><![CDATA[Good question. The SMS gateway bit has actually been a request from a few separate clients, so I'll probably put up a site that I charge them a token amount to cover my SMS costs. <br />
<br />
Which is not to say that I might not opensource the thing if its interesting to people. I have another Grails project that I'm earmarking for that purpose, too. But more details on that when I've got something to show and tell.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>11 Aug 2006 10:41:20:343 +0000</date>
<state>approved</state>
<parent>1155282532844</parent>
</comment>
<comment>
<title>Re: Grails + Yahoo Autocomplete = Giddy Up</title>
<body><![CDATA[You can have case insensitive regexes by starting them with<br />
&nbsp;(?i)<br />
e.g. <br />
&nbsp;/(?i)myPatternString/&#x5d;&#x5d;&gt;</body>
<author>Dierk K√∂nig</author>
<email/>
<website/>
<ipAddress>212.232.176.82</ipAddress>
<date>11 Aug 2006 08:36:13:425 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Grails + Yahoo Autocomplete = Giddy Up</title>
<body><![CDATA[Thanks mate! That's awesome. I figured there had to be a way to do case insensitive matching without creating a custom Matcher object.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>11 Aug 2006 10:35:40:433 +0000</date>
<state>approved</state>
<parent>1155285373425</parent>
</comment>
<comment>
<title>Re: Grails + Yahoo Autocomplete = Giddy Up</title>
<body><![CDATA[i have created the xml file but second node value from the xml file is not reading its only reading the first value on any key down  my sample xml file
&lt;result&gt;
&lt;car&gt;FORD KA 1.3i Zetec [70] 3dr Hatchback Petrol Manual&lt;/car&gt;
&lt;car&gt;FORD KA 1.3i luxuryKa [70] 3dr Hatchback Petrol Manual&lt;/car&gt;
&lt;car&gt;‚Ä¶&lt;/car&gt;
&lt;/result&gt;

&#x5d;&#x5d;&gt;</body>
<author>anil mathew</author>
<email>anilkoithara@gmail.com</email>
<website/>
<ipAddress>59.163.23.73</ipAddress>
<date>12 Mar 2007 06:35:17:927 +0000</date>
<state>approved</state>
<parent>1155292540433</parent>
</comment>
<comment>
<title>Re: Grails + Yahoo Autocomplete = Giddy Up</title>
<body><![CDATA[now it working thanks

i have passed the xml like 

&lt;resultset&gt;&lt;result&gt;
&lt;car&gt;bmw&lt;/car&gt;&lt;/result&gt;&lt;result&gt;
&lt;car&gt;skoda&lt;/car&gt;&lt;/result&gt;&lt;/resultset&gt;&#x5d;&#x5d;&gt;</body>
<author>anil mathew</author>
<email>anilkoithara@gmail.com</email>
<website/>
<ipAddress>59.163.23.73</ipAddress>
<date>13 Mar 2007 06:51:31:414 +0000</date>
<state>approved</state>
<parent>1173681317927</parent>
</comment>
<comment>
<title>Re: Grails + Yahoo Autocomplete = Giddy Up</title>
<body><![CDATA[now it working thanks

i have passed the xml like 

&lt;resultset&gt;&lt;result&gt;
&lt;car&gt;bmw&lt;/car&gt;&lt;/result&gt;&lt;result&gt;
&lt;car&gt;skoda&lt;/car&gt;&lt;/result&gt;&lt;/resultset&gt;&#x5d;&#x5d;&gt;</body>
<author>anil mathew</author>
<email>anilkoithara@gmail.com</email>
<website/>
<ipAddress>59.163.23.73</ipAddress>
<date>13 Mar 2007 07:05:40:244 +0000</date>
<state>approved</state>
<parent>1173681317927</parent>
</comment>
<comment>
<title>Re: Grails + Yahoo Autocomplete = Giddy Up</title>
<body><![CDATA[Just to help those who want to try with the last version of YUI (2.2.0a for now), 2 things to do :
<ol><li>the line <pre>myXHRDataSource.responseType = myXHRDataSource.TYPE_XML;</pre>
should be changed to <pre>myXHRDataSource.responseType = YAHOO.widget.DS_XHR.TYPE_XML;</pre>
</li>
<li>change the line <pre>&lt;g:javascript library="yahoo" /&gt;</pre> to <pre>
        &lt;script type="text/javascript" 
src="${createLinkTo(dir:'js/yahoo/build/yahoo-dom-event',
file:'yahoo-dom-event.js')}"&gt;&lt;/script&gt;                        
        &lt;script type="text/javascript" 
src="${createLinkTo(dir:'js/yahoo/build/connection',
file:'connection-min.js')}"&gt;&lt;/script&gt;
        &lt;script type="text/javascript" 
src="${createLinkTo(dir:'js/yahoo/build/autocomplete',
file:'autocomplete-debug.js')}"&gt;&lt;/script&gt;
</pre> after having move the YUI files to the right directory.
</li>
</ol>
Hope this could help.
&#x5d;&#x5d;&gt;</body>
<author>Olivier D.</author>
<email>olivier.duchene@gmail.com</email>
<website/>
<ipAddress>217.117.33.5</ipAddress>
<date>22 Mar 2007 13:22:09:823 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/08/12/1155353640000.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Making the switch to Glassfish</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>I'm a longtime <a href="http://www.mortbay.org/jetty/">Jetty</a> user and a huge fan (it's always been my appserver of choice and the stuff coming in Jetty 6.0 looks just amazing), but for my own sites (including this one), I've made the switch to <a href="https://glassfish.dev.java.net/">Glassfish</a>. I've heard so much good stuff about it lately it was time to take it for a proper workout. </p>
<p>The install was painless, and I had my apps redeployed on the appropriate virtual servers inside 30 minutes - and without a single restart. That's pretty sensational stuff - mainly due to an outstanding web admin UI and a very comprehensive set of documentation. </p>
<p>One of the real killer features that people rave about with Glassfish is the hot deploy stuff. I'm going to be giving it a bit of a workout in that department with an upcoming <a href="http://grails.codehaus.org/">Grails</a> app, and I'm keen to keep my outages to a bare minimum. For all of the setup, I could do it all from the web UI, and I was so impressed that I didn't need to bounce the server - adding domains, deploying and redeploying apps, adding new port listeners, all good.</p>
<p>I'm really keen to see how it holds up as a main site. I always ran Jetty using <a href="http://cr.yp.to/daemontools/supervise.html">Supervise</a> to handle the restarts when it inevidably fell over. With Glassfish, I have no such safety net, but it has quite a reputation for being rock solid, so we'll see how I fare. </p>
<p>But I'm sure loving every second of that sweet web-based administration...</p>&#x5d;&#x5d;&gt;</body>
<date>12 Aug 2006 03:34:00:0 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Making the switch to Glassfish</title>
<body><![CDATA[I want to switch to it.<br />
Can you point us to documentation? Tutorial, installation guide, programming, etc.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website>http://tech-dissect.blogspot.com</website>
<ipAddress>192.114.107.4</ipAddress>
<date>09 Nov 2006 08:13:33:841 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Making the switch to Glassfish</title>
<body><![CDATA[<p>Sure. You'll find a ton of PDFs for download at the <a href="https://glassfish.dev.java.net/javaee5/docs/DocsIndex.html">Glassfish Documentation</a> page. Tons of great stuff in there at all levels of detail. </p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>09 Nov 2006 11:17:42:541 +0000</date>
<state>approved</state>
<parent>1163060013841</parent>
</comment>
<trackback>
<title>Glassfish could become the killer appserver for Java EE 5...</title>
<excerpt><![CDATA[I'm working with glassfish since several months and it seems to be rock solid. Redeployment (usually a critical stuff, because of reloading of classes) is working pretty well. I'm deploying several times a day - without any side effects. There are also ot&#x5d;&#x5d;&gt;</excerpt>
<url>http://www.adam-bien.com/roller/page/abien?entry=glassfish_could_become_the_killer</url>
<blogName>Adam Bien's Weblog</blogName>
<ipAddress>217.91.102.185</ipAddress>
<date>12 Aug 2006 13:45:05:701 +0000</date>
<state>approved</state>
</trackback>
<trackback>
<title>Tomcat or Jetty or GlassFish</title>
<excerpt><![CDATA[



Before too long the company I work for is going to be putting a few websites up and part of the functionality will be running java webapps. At first I was just going to throw tomcat on the server and let it run. After all, Tomcat is almost the d...&#x5d;&#x5d;&gt;</excerpt>
<url>http://thebull.macsimumweb.com/2007/02/15/tomcat-or-jetty-or-glassfish/</url>
<blogName>Thinking Outloud</blogName>
<ipAddress>209.59.185.2</ipAddress>
<date>15 Feb 2007 04:16:35:669 +0000</date>
<state>approved</state>
</trackback>
</blogEntry>

Importing 2006/08/22/1156286662925.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Feeling a little comma-separated? Try opencsv 1.6...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>Thanks to user-supplied patches, I've just uploaded <a href="http://opencsv.sourceforge.net/">opencsv 1.6</a> to Sourceforge - my Apache licensed two-class library for reading and writing CSV files. If you're in the market for a CSV library and can't be bothered with dealing with unusual edge cases, this might be the library for you. </p>
<p>This new release adds custom line terminators (which is pretty useful if you're exporting CSV from your linux web server to Win32 clients). Thanks to Klaus Stafto and Jerry Vos for good work here.</p>
<p>This release also fixes an unusual edge case where quote characters are used in an element, but not in the first position. </p>
<p>Someone send me a patch for this second issue, which I've integrated, but have since lost the original email. Let me know who you are, and I'll add you to the credits.</p>&#x5d;&#x5d;&gt;</body>
<date>22 Aug 2006 22:44:22:925 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Feeling a little comma-separated? Try opencsv 1.6...</title>
<body><![CDATA[<p>Hi Glen,</p>
<p>Came across your opencsv utility for reading/writing&nbsp;csv files. Looks like the jar file for distribution was compiled using Java5 as i keep getting UnsupportedClassVersion errors when using the library in my JDK1.4 environment. Is there are version of opencsv meant for JDK1.4? We had written our own utility in one of our projects for reading a csv file but yours looks better in terms of performance, so we would like to continue using it. This would require the library to be compatible with JDK1.4.</p>
<p>Here's the exception that we are seeing in JDK1.4 environment:</p>
<p>java.lang.UnsupportedClassVersionError: au/com/bytecode/opencsv/CSVReader (Unsupported major.minor version 49.0)</p>
<p>at java.lang.ClassLoader.defineClass0(Native Method)</p>
<p>at java.lang.ClassLoader.defineClass(ClassLoader.java:537)</p>
<p>at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)</p>
<p>at java.net.URLClassLoader.defineClass(URLClassLoader.java:251)</p>
<p>at java.net.URLClassLoader.access$100(URLClassLoader.java:55)</p>
<p>at java.net.URLClassLoader$1.run(URLClassLoader.java:194)</p>
<p>at java.security.AccessController.doPrivileged(Native Method)</p>
<p>at java.net.URLClassLoader.findClass(URLClassLoader.java:187)</p>
<p>at java.lang.ClassLoader.loadClass(ClassLoader.java:289)</p>
<p>at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:274)</p>
<p>at java.lang.ClassLoader.loadClass(ClassLoader.java:235)</p>
<p>at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:302)</p>
<p>at org.myapp.SampleCSVParser.main(SampleCSVParser.java:16)</p>
<p>Exception in thread &quot;main&quot; </p>
<p>&nbsp;</p>&#x5d;&#x5d;&gt;</body>
<author>Jai</author>
<email>jai_forums2005@yahoo.co.in</email>
<website/>
<ipAddress>220.225.70.2</ipAddress>
<date>07 Oct 2006 09:48:31:50 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Feeling a little comma-separated? Try opencsv 1.6...</title>
<body><![CDATA[Thanks Jai. I'll fix that up in the next release. It is entirely 1.4 compatible. Feel free to rebuild the jar with the ant script that comes with the distro. Should be a matter of &quot;ant jar&quot; from the commandline and you're set.<br />
<br />
Thanks for taking the time to report it.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>07 Oct 2006 09:57:30:300 +0000</date>
<state>approved</state>
<parent>1160214511050</parent>
</comment>
<comment>
<title>Re: Feeling a little comma-separated? Try opencsv 1.6...</title>
<body><![CDATA[Thanks for this great little library. I was just about to write one myself when I came across opencsv. Its light, simple and best of all, commercial friendly.

It saved me a couple of hours and a load of maintenance down the track.

Well done!&#x5d;&#x5d;&gt;</body>
<author>Kim Pepper</author>
<email/>
<website/>
<ipAddress>220.233.135.106</ipAddress>
<date>26 Feb 2007 21:32:16:521 +0000</date>
<state>approved</state>
<parent>1160214511050</parent>
</comment>
<comment>
<title>Re: Feeling a little comma-separated? Try opencsv 1.6...</title>
<body><![CDATA[<p>Thanks for your feedback, Kim. Glad it's useful. With 2.0 I'll hopefully make the API much simpler again by introducing a default config object.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>26 Feb 2007 21:41:00:617 +0000</date>
<state>approved</state>
<parent>1172525536521</parent>
</comment>
<comment>
<title>Re: Feeling a little comma-separated? Try opencsv 1.6...</title>
<body><![CDATA[<p>Thanks Glen. I built the jar using JDK1.4 and it works fine. Thanks again.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>&#x5d;&#x5d;&gt;</body>
<author>Jai</author>
<email>jai_forums2005@yahoo.co.in</email>
<website/>
<ipAddress>220.225.70.2</ipAddress>
<date>07 Oct 2006 10:19:43:307 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Feeling a little comma-separated? Try opencsv 1.6...</title>
<body><![CDATA[Hi Glen, 
<br />
<br />
A small suggestion. Instead of the constructor which takes in the number of lines to be skipped may be we should have a comment character. Lets say all lines starting with /* should be safely skipped.

<br />
<br />
I have still not tried your library. I will try it and in case some changes are needed, I will make the changes to the code and send you the patch as well.


<br />
<br />
But yeah, seeing  the documentation I feel I am really saved from the drudgeries of writing a CSV parser.

<br />
<br />
Thanks a ton for your great work!

<br />

Sathya
&#x5d;&#x5d;&gt;</body>
<author>Sathya Sayee S</author>
<email>sathya_sayee@yahoo.com</email>
<website/>
<ipAddress>125.16.140.115</ipAddress>
<date>09 Mar 2007 04:54:19:75 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/08/30/1156972120968.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Recoving your iPhoto collection from an Emptied Trash... (there is hope!)</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>So what *do* you do when your small child erases your iPhoto collection? I guess you undelete from the trash... But what happens if you didn't know your photo collection was in the trash and you emptied it? You go to your most recent backup. But what happens when your most recent backup is&nbsp;6 weeks old (you know, just before your newborn arrived?). You panic.</p>
<p>I've had a Mac Mini for over a year, and never had a drama with it. So when all my photos disappeared I felt sick in my stomach. I am so not battletested in this space - I've never had to be. <br />
</p>
<p>Anyways after some frantic hunting on the web I bought a copy of <a href="http://www.subrosasoft.com/OSXSoftware/index.php?main_page=product_info&amp;products_id=1">FileSalvage</a> for OSX. It's $99USD which is quite a sum... but really a very smart pricing model since the only time you need this tool is when you *really* need this tool. RIght Now. Before your OS starts using all of that &quot;empty&quot; space you just created.</p>
<p>Anyways, I set it off and a few hours later I had 23000 undeleted images called File001. I only needed ones from the last six weeks, so I ran the sensational <a href="http://www.pixture.com/software/macosx.php">PhotoToolCM</a> to rename and redate the files based on the EXIF data that the camera stored inside the image and I was in business. </p>
<p>This story has a happy ending (not many of these sorts of things do). The newborn shots are back. All of them. Phew!<br />
</p>
<p>Now I plan to backup weekly...</p>&#x5d;&#x5d;&gt;</body>
<date>30 Aug 2006 21:08:40:968 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/General</category>
<tags></tags>
<comment>
<title>Re: Recoving your iPhoto collection from an Emptied Trash... (there is hope!)</title>
<body><![CDATA[How about considering using scheduled backups instead of manually backing up every week? Could probably do a rsync or something like that to a backup server? Or do you burn DVDs?&#x5d;&#x5d;&gt;</body>
<author>Li-Jie Wong</author>
<email></email>
<website></website>
<ipAddress>59.167.251.19</ipAddress>
<date>01 Sep 2006 00:27:42:848 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/09/11/1158009645204.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Grails: Sending a file to the browser</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>I recently wanted to add the ability to export CSV files from my little Grails app directly to the browser with one of those &quot;Save As...&quot; numbers. Makes it very easy for clients to save a copy of their addressbook directly to their local disk, and reimport it later on. </p>
<p>I'm using <a href="http://opencsv.sf.net">opencsv</a> for the heavy lifting so the CSV bit was a snack. The tricky bit was getting the browser to popup as a &quot;Save As&quot;.&nbsp; Messing with content/type didn't help me, so it was time to do some researching.... and there's just a little magic required which Grails controllers make very simple.</p>
<p>So here's the magic strings you're looking for. </p>
<pre>response.setHeader(&quot;Content-disposition&quot;, &quot;attachment; filename=&quot; + 
    session.userid + &quot;.csv&quot;);
render(contentType: &quot;text/csv&quot;, text: sw.toString());
</pre>
<p>And that will give you: </p>
<p><img alt="Dynamic File Creation Screenshot" src="images/2006/DynamicallyCreatingFiles.gif" /> </p>
<p>Giddy up. Just what I was after...</p>&#x5d;&#x5d;&gt;</body>
<date>11 Sep 2006 21:20:45:204 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Grails: Sending a file to the browser</title>
<body><![CDATA[How are you actually doing this?&nbsp; It's not clear from your blog entry.&nbsp; Do you actually create a file and write to output stream?&nbsp; I need to do this also.&nbsp; Please provide a more complete example thanks.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>manyce400@yahoo.com</email>
<website/>
<ipAddress>72.244.140.151</ipAddress>
<date>28 Sep 2006 14:58:46:701 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Grails: Sending a file to the browser</title>
<body><![CDATA[I created the file I wanted to send to the browser in a StringWriter in memory (you could use a string or whatever). You could substitute that sw.toString() entry with your own String if that suits.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email/>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>29 Sep 2006 08:59:23:671 +0000</date>
<state>approved</state>
<parent>1159455526701</parent>
</comment>
<comment>
<title>Re: Grails: Sending a file to the browser</title>
<body><![CDATA[Just a follow on (google sent me here btw) - I'm doing something similar, but with Spring MVC and have the content type and disposition set as you have, but the file is output with all the inverted commas ('"') interpreted as &#034; (i.e. ampersand, hash/pound, zero three four) <br />
<br />
The output is handled by a properly formatted jsp. The file is interpreted correctly if inline is used and badly if attachment is used. <br />
<br />
Any ideas?<br />&#x5d;&#x5d;&gt;</body>
<author>Colm O'Donaill</author>
<email>colmod@yahoo.com</email>
<website/>
<ipAddress>62.40.38.38</ipAddress>
<date>26 Mar 2007 11:16:33:215 +0000</date>
<state>approved</state>
<parent>1159520363671</parent>
</comment>
</blogEntry>

Importing 2006/09/15/1158326202805.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Implementing SAML 2.0 on the cheap...</title>
<subtitle>with Freemarker and Apache XML Security</subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>This last year I've done more <a href="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=security">SAML</a> than any man should. I've had&nbsp;a&nbsp;couple of clients doing federated identity and single signon stuff, and SAML is all the rage (actually, I've found it pretty great to work with once I got my head around XML C14N).</p>
<p>SAML 2.0 is new and shiny and vendors are still scrabling to build libraries to handle it, so to test interop, I built a little test harness. Originally it just used strings for the messages, but some of the messages are so verbose (with just the odd timestamp or url&nbsp;insertion here or there), it was time to make the switch to a templating language before escaping quote characters inside strings drove me crazy.</p>
<p>I've been meaning to play with <a href="http://www.freemarker.org/">Freemarker</a> for a while, but I finally had a good excuse. I've tinkered with <a href="http://jakarta.apache.org/velocity/">Velocity</a> before, so the paradigm was familiar, but one thing I really like about Freemarker is how it can handle its context being a plain vanilla java.util.Map. It also crashes and burns if you don't provide a value for one of the merge strings in the template (which for me is a good thing, though in the web context it might not be so sweet). </p>
<p>For doing the actual message signing, you can't go past <a href="http://xml.apache.org/security/">Apache XML Security</a>. I've raved about it before, but it is just sensational. Spec complete, and very easy to work with.</p>
<p>So my little test harness scoops up one of my canned templates, merges in some timestamps and urls, output&nbsp;it all as a&nbsp;string, sends it to XML Security for the signatures, then ships it off to the big hairy vendor for validation. It also slurps in responses from the other end, validates the signature, and gives you feelgood output.</p>
<p>In the end I've got a pretty cool little interop app that I can validate a good subset of SAML 2.0 against the big iron. On the very cheap...</p>
<p>Great work Freemarker and XML Security dudes. Your libraries are awesome!</p>
<p>&nbsp;</p>&#x5d;&#x5d;&gt;</body>
<date>15 Sep 2006 13:16:42:805 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/09/19/1158636268647.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>In-Browser functional testing with Selenium</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>I've been wanting to get into functional testing for a while, but have just never worked up the enthusiasm for the whole &quot;writing clicks as code&quot; deal that you get with the current crop of http-based junit-like test frameworks.</p>
<p>But the other day a <a href="http://www.dicamillo.net/blog/">workmate</a> put me onto <a href="http://www.openqa.org/selenium-ide/">Selenium</a>, and I've got to say that its just sensational. I can record my scripts straight in the browser (<a href="http://wiki.openqa.org/display/SIDE/Recording+a+Test"><font color="#800080">screencast</font></a>), do the level of asserts I need (title, button labels, etc) using a familiar right-click metaphor, and save a tiny html file as my script for later use. Plus all the tricky Javascript stuff that fires behind the scenes in our apps &quot;just works&quot; because you're running in a real browser. </p>
<p>They apparently also have stuff for automating the process in your nightly build. Can't wait to look at what we might be able to achieve in nightly functional tests using this bad boy.</p>
<p>Props to the boys at <a href="http://www.openqa.org/">openqa</a> for a stunning bit of work.</p>&#x5d;&#x5d;&gt;</body>
<date>19 Sep 2006 03:24:28:647 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/10/03/1159850700000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Twofish, Cipher Block Chaining, and Bouncy Castle...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[I've been hard at work on the lastest release of <a href="http://www.bytecode.com.au/passwordsafeswt/">PasswordSafeSWT</a>, my Java port of the popular Win32 password manager <a href="http://passwordsafe.sourceforge.net/">PasswordSafe</a>. The biggest change in the new version is a completely overhauled file crypto (which, in part, uses 256bit <a href="http://www.schneier.com/twofish.html">TwoFish</a> in <a href="http://en.wikipedia.org/wiki/Block_cipher_modes_of_operation#Cipher-block_chaining_.28CBC.29">Chaining Block Cipher</a> mode, along with some HMAC-SHA256, and some standard SHA256).<br />
<br />
Now, I've never been exposed to CBC before, so it was quite an interesting bit of work. With a chaining block cipher, &quot;each block of plaintext is XORed with the previous ciphertext block before being encrypted&quot; ... effectively chaining the whole decryption process. Sweet.<br />
<br />
Turns out that <a href="http://www.bouncycastle.org/">BouncyCastle</a> has fantastic support for all the ciphers needed in the PasswordSafe format, but getting there needs some divergency from the standard JCE mechanism I've been used to. Try using it with large keys outside the US, and you'll be greeted with: <br />
<pre>java.lang.SecurityException: Unsupported keysize or algorithm parameters<br />		at javax.crypto.Cipher.init(DashoA6275)</pre>
<br />
I didn't want end users to have to go through downloading unrestricted policy files for the JREs, so I figured I'd just use the lightweight crypto library that comes with Bouncy Castle and bypass the whole JCE thing entirely. <br />
<br />
Using things outside the JCE is a liitle more work, but you can get there if you don't mind digging through the extensive examples they ship with. My TwoFish CBC ended up like this:<br />
<br />
<pre>TwofishEngine tfe = new TwofishEngine();<br />cipher = new CBCBlockCipher(tfe); 	<br />KeyParameter kp = new KeyParameter(key);<br />ParametersWithIV piv = new ParametersWithIV(kp, IV);<br />cipher.init(forEncryption, piv);<br /></pre>
<p> Then the actual crypto was a one liner... </p>
<pre>int len1 = cipher.processBlock(input, 0, out, 0); </pre>
<p> All very doable. Go Bouncy Castle! You guys rock!<br />
</p>&#x5d;&#x5d;&gt;</body>
<date>03 Oct 2006 04:45:00:0 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/10/12/1160649716842.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Doing bytecode Kungfu with Javassist</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>Came across a situation today where I need to mock out a static method on&nbsp;one of Websphere's&nbsp;classes to simulate a certain test case. Normally this kind of bad boy is pretty tricky since you've either got to wrap the vendor's class with your own injectable wrapper, or provide your own impl for their interface. The call in question was:</p>
<p><code>WSSubject.getCallerSubject();</code></p>
<p>with WSSubject being a static and final class for good measure. No mocking of the interface possible, no subclassing tricks available; I thought it might be time to check out what is achievable with the various bytecode manipulation libraries to see if I could just change the single method I was interested in. Had a look at <a href="http://asm.objectweb.org/">ASM</a> and <a href="http://jakarta.apache.org/bcel/">BCEL</a>, and found myself in way too deep in bytecode semantics. In the end I came across <a href="http://www.csg.is.titech.ac.jp/~chiba/javassist/">Javassist</a> which was at just the right level. Worked my way through the <a href="http://www.csg.is.titech.ac.jp/~chiba/javassist/tutorial/tutorial.html">tutorial</a> and I was good to go. </p>
<p>&nbsp;As long as you get to the class before the classloader does, you can go crazy: add methods, substitute in your own methods, add before and after interceptors, change field visibility, the whole nine yards. So I put in a little block in my test case's static initialiser to hook myself into the process:</p>
<p>&nbsp;</p>
<pre>    static {<br />        <br />        try {<br />            ClassPool cp = ClassPool.getDefault();<br />            CtClass cc = cp.get(&quot;com.ibm.websphere.security.auth.WSSubject&quot;); <br />            CtMethod subjMethod = cc.getDeclaredMethod(&quot;getCallerSubject&quot;);<br />            subjMethod.setBody(cp.get(MyTest.class.getName()).getDeclaredMethod(&quot;getCallerSubject&quot;), null);<br />            cc.toClass();<br />        } catch (Exception e) {<br />            e.printStackTrace();<br />        }<br /><br />    }<br /></pre>
<p>Grab a handle to the <code>WSSubject</code> class, grab a handle to the <code>getCallerSubject()</code> method, then use that <code>setBody()</code> call to insert your own method body in the mix. In my case, I call the <code>getCallerSubject()</code> on my test class to manufacture my own subject to return. Two words: Sen Sational.</p>
<p>Would probably have been a lot easier wrap the getSubject() call in my own injectable class, but&nbsp;it's handy to know that all sorts of bytecode kungfu is possible if your motivated.</p>
<p>Big props to <a href="http://www.csg.is.titech.ac.jp/~chiba/javassist/">Javassist</a> dudes.</p>&#x5d;&#x5d;&gt;</body>
<date>12 Oct 2006 10:41:56:842 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/10/28/1162018378955.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>A very Groovy Morning Tea with Confluence, Groovy-XMLRPC and AntBuilder</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[When I found out that Confluence has an <a href="http://confluence.atlassian.com/display/DOC/Remote+API+Specification">XMLRPC interface</a>, and the Groovy had an <a href="http://groovy.codehaus.org/XMLRPC">XMLRPC module</a>, I started to think of a very simple way to make sure people remember when they're rostered on Morning Tea. <br />
<br />
My criteria for the app was &quot;What's the simplest thing that could possible work?&quot; I figured a morning tea page on the Wiki, with a table of dates and names. My script is cronned to run once a week, scrape the page, parse the table, convert names to email addresses, and send em a reminder.<br />
<br />
I told <a href="http://blogs.asman-it.com.au/dasman/">a mate</a> that I reckoned I could put something together inside a lunch hour. 20 minutes later I was good to go.<br />
<br />
Confluence needs a username and password to logon, so just using a scraper was no good. Fortunately the XMLRPC interface is a snack. To slurp down a secure confluence page, you just grab a token, the make the appropriate getPage call:<br />
<pre>import groovy.net.xmlrpc.*; <br />def c = new XMLRPCServerProxy(&quot;http://yourhostname/confluence/rpc/xmlrpc&quot;) <br />def token = c.confluence1.login(&quot;user&quot;,&quot;password&quot;)  <br />def page = c.confluence1.getPage(token, &quot;YourSpaceId&quot; , &quot;Morning Tea Roster&quot;) <br />def content = page[&quot;content&quot;]  </pre>
<br />
Once you've got a handle to the content, it's just a matter of some regular expressions to parse out the names, and you're ready to email. <br />
<br />
Groovy's AntBuilder makes email integration equally straightforward:<br />
<br />
<pre>new AntBuilder().mail(<br />    mailhost: 'yourmailhost', <br />    subject: 'Morning Tea') {  <br />    from(address: 'glen.smith@yourdomain.com.au')  <br />    to (address: 'the.person@yourdomain.com.au') <br />    message( 'morning tea is on you today' ) <br />)<br /> <br /> </pre>
<p> And you're off and emailing. You've just gotta love scripting languages...</p>
<p>Props to Tug for the XMLRCP module, and to the Confluence boys for providing the interface. Top Stuff. If you guys are ever in Canberra, Australia, the next donut's on me.<br />
</p>&#x5d;&#x5d;&gt;</body>
<date>28 Oct 2006 06:52:58:955 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: A very Groovy Morning Tea with Confluence, Groovy-XMLRPC and AntBuilder</title>
<body><![CDATA[<br />
Tug mailed me the following super useful info:
<p>  Hi Glen!</p>
<p>  Glad you found Groovy useful:) </p>
<p>  You can use a couple of Groovy features to make the code slightly less noisy:</p>
<p>  </p>
<pre>def c = new XMLRPCServerProxy('http://yourhostname/confluence/rpc/xmlrpc')<br /><br />c.confluence1.login('user','password')  {token -&gt; <br />	def page = confluence1.getPage(token, 'YourSpaceId' , 'Morning Tea Roster') <br />	def content = page.content<br />	..... <br />}<br /></pre>
<p> 1/ if you pass a closure as the last parameter to an XML-RPC call then that closure is called with the result of the XML-RPC call as a parameter. In addition any calls inside the closure which cannot be resolved in the program scope are made against the XML-RPC server (so we can write 'confluence1.getPage' rather than 'c.confluence1.getPage'). </p>
<p> 2/ page['content'] can be rewritten as page.content </p>
<p>&nbsp;</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>28 Oct 2006 09:20:23:696 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2006/11/07/1162874832656.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Grails presento in Canberra - Win an IntelliJ license!</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>I'll be giving a presentation tomorrow night at our <a href="http://www.cjugaustralia.org/">Canberra Java User Group</a> titled &quot;Impatient Web Development with Grails&quot;.&nbsp; If you're nearby, it's gonna be a great night.<br />
<br />
Thanks to the generous guys at Jetbrains, we're also giving away a copy of the <a href="http://www.jetbrains.com/idea/">IntelliJ IDEA 6.0</a> and <a href="http://www.jetbrains.com/teamcity/">TeamCity</a>&nbsp;to one lucky attendee.&nbsp; And we're also grateful&nbsp;that the dudes from Sun and Borland will be putting on Beer and Pizza. You guys rock!</p>
<p>Should be a sensational night. If you're in the area, make sure you drop by.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>&#x5d;&#x5d;&gt;</body>
<date>07 Nov 2006 04:47:12:656 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/11/09/1163102369153.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Grails 0.3 ships with Freight Train Momentum</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>I figured something must be up when I saw that 31 outstanding bugs were fixed in the last 24 hours, then <a href="http://graemerocher.blogspot.com/">Graeme</a>&nbsp;made the&nbsp;<a href="http://docs.codehaus.org/display/GRAILS/2006/11/09/Grails+0.3+Released">annoucement</a> that Grails 0.3 was released and available for <a href="http://grails.codehaus.org/Download">download</a>.</p>
<p>If you've been on the sidelines waiting to check out Grails, now is an excellent time. There have been enormous functionality enhancements in 0.3 (particularly in GORM - the ORM stuff - which is now *so* cool), the <a href="http://grails.codehaus.org/User+Guide">documentation</a> is just fantastic, and the mailing list is&nbsp;extremely active with tons of input from the actual committers, and heaps of openness to offering your own ideas on how things could be made more groovy.</p>
<p>I gave a talk to the <a href="http://www.cjugaustralia.org/">Canberra JUG</a> in Australia last Wednesday night, and it was packed. There are a lot of people watching Grails right now. It's awesome to see. Someone asked me &quot;How can you feel comfortable building commercial apps on 0.3?&quot; I said, &quot;It's not about the numbers, it's about having an active community that are moving and shaking. You're more likely to get fixes when people are excited....&quot; . The next question was about a paginate tag.... fixed last night in GRAILS-337. </p>
<p>Props to Graeme and all the team. Awesome effort! </p>&#x5d;&#x5d;&gt;</body>
<date>09 Nov 2006 19:59:29:153 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/11/14/1163471354835.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Glassfish, AWStats and Access Log Formats</title>
<subtitle/>
<excerpt/>
<body><![CDATA[I've finally found some time to get <a href="http://awstats.sourceforge.net/">awstats</a> setup to crunch my <a href="https://glassfish.dev.java.net/">Glassfish</a> logs. This turned out to be a little trickier than I expected, so I though I'd write up some gotchas incase other are walking the same path.<br />
<br />
First up, you need to get Glassfish to write log files in a suiteable format for awstats. Glassfish gives you a nice admin GUI in /Configuration/HTTP Service/Access Logs where you can change the format of what's logged. If you access this page, then click the Help menu, you'll get a list of available parameters that you can insert. <br />
<br />
Awstats likes the NCSA combined/XLF/ELF format, which you can whip up in Glassfish using the following format:<br />
<br />
<pre style="border: 1px solid ; padding: 10px;">%client.name% %datetime% %request% %status% %response.length%<br />&nbsp;%header.referer% %header.user-agent%<br /></pre>
<br />
<br />
This is pretty close. It'll get you to something like:<br />
<br />
<pre style="border: 1px solid ; padding: 10px;">&quot;123.456.7.89&quot; &quot;13/Nov/2006:14:22:25 +1000&quot; <br />&quot;GET /common/images/feed-icon-16x16.png HTTP/1.1&quot; 200 764 <br />&quot;<a href="http://www.bytecode.com.au/passwordsafeswt/">http://www.bytecode.com.au/passwordsafeswt/</a>&quot; <br />&quot;Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; <br />rv:1.8.0.7) Gecko/20060911 Camino/1.0.3&quot;<br /></pre>
<br />
<br />
But we're still not quite there. Those quotes around the first ipaddress and date fields will cause you grief. So you need to strip them off. I'm using sed with a command like:<br />
<br />
<pre style="border: 1px solid ; padding: 10px;">LogFile=&quot;sed -e 's/&quot;\([0-9\.]*\)&quot;/\1/g'<br /> -e 's/&quot;\([^&quot;]*+1000\)&quot;/[\1]/g'<br />/path/to/glassfish/domains/domain1/logs/access/<br />www.bytecode.com.au_access_log.%YYYY-0-%MM-0-%DD-12.txt |&quot;<br /></pre>
<br />
<br />
That guy will strip the quotes from the ipaddress, then reformat the datestamp to have no quotes and replace with square brackets. You'll need to change the +1000 to whatever your GMT offset is as it appears in your logs.<br />
<br />
Once you've done all that, you're good to go. Setup a cron job to run awstats_updateall.pl early in the morning, then follow it with a awstats_buildstaticpages.pl to dump your stats into some docroot location and you're ready to crunch. <br />
<br />
Voila! Glassfish logs with funky stats.<br />
<br />
Enjoy!&#x5d;&#x5d;&gt;</body>
<date>14 Nov 2006 02:29:14:835 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Glassfish, AWStats and Access Log Formats</title>
<body><![CDATA[Hello,
I have tried following your example, but the update script complains that sed is not a recognized command. Did you come across that, and if so, how did you resolve it?&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>wbossons@hmdc.harvard.edu</email>
<website/>
<ipAddress>140.247.116.139</ipAddress>
<date>10 Jan 2007 18:01:20:522 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Glassfish, AWStats and Access Log Formats</title>
<body><![CDATA[Please disregard my earlier question regarding sed not being recognized. I had to put it in the path variable for my machine. Thanks.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>wbossons@hmdc.harvard.edu</email>
<website/>
<ipAddress>140.247.116.139</ipAddress>
<date>10 Jan 2007 20:24:25:9 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Some notes</title>
<body><![CDATA[Firstly thanks for the article! You did a great job and it works marvelously. Keep it up.

Just an ammendment to your LogFile bit. Put the 2 minus signs there.... My awStats needed them, and the rest of the line remains the same. Also note that this comes in the awstats.glassfish.conf file under etc/awstats directory
LogFile="sed -e 's/"\([0-9\.]*\)"/\1 - -/g'_________________________

Stunnig stats! Thanks!
Jacobus &#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>jacobus@8.co.za</email>
<website>http://www.locateandtrade.com</website>
<ipAddress>196.25.216.139</ipAddress>
<date>08 Mar 2007 20:52:23:893 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Glassfish, AWStats and Access Log Formats</title>
<body><![CDATA[Will this work with logresolvemerge.pl?  I have the LogFile line as below and need to figure out how to add the sed part.

LogFile=‚Äù/usr/local/awstats64/tools/logresolvemerge.pl /usr/local/apache2059/logs/access_log /usr/local/tomcat5516/logs/localhost_access_log.*.log /opt/SUNWappserver/domains/domain1/logs/access/server_access_log.*.txt |‚Äù&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>willard_thomas@bah.com</email>
<website/>
<ipAddress>164.214.1.55</ipAddress>
<date>13 Aug 2007 18:18:29:949 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2006/11/20/1164049145851.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Creating dmg files from Ant</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[For my little <a href="http://www.bytecode.com.au/passwordsafeswt/">password manager</a>, I've long wanted to be able to automate the task of creating a .dmg file for my osx users. In fact, about <a href="http://blogs.bytecode.com.au/glen/2005/06/14/1118696153401.html">18 months ago</a> when I was linking to a page describing the <a href="http://decaffeinated.org/archives/2003/10/24/dmg">manual process</a>, I was saying this should be ant-able. <br />
<br />
Well since I've been doing a bunch of betas of the new version, I'm finally sick of creating .dmg files by hand and did some research on what's required to drive the process from Ant.<br />
<br />
The guys at Eclipse have done a sensational job of documenting some interesting <a href="http://www.eclipse.org/swt/macosx/">mac integration goodies</a>, including the hdiutil app which drives the commandline creation of dmg files. Wrap that guy in a little exec task, and life is pretty darn fine.<br />
<br />
In the end, you've got something like:<br />
<br />
&lt;exec executable=&quot;hdiutil&quot;&gt;<br />
&lt;arg line=&quot;create -srcfolder ${folder.containing.your.app} ${dist.dmg.file}&quot;/&gt;<br />
&lt;/exec&gt;<br />
<br />
Which creates your dmg file from the folder containing your binary. Does the appropriate compression to ensure the dmg file is only big enough to hold your app. Just the ticket.<br />
<br />
Driving all this from Ant makes the osx distro process *so* much quicker... Big props to the Eclipse dudes for writing this up. Has saved me a ton of time.&#x5d;&#x5d;&gt;</body>
<date>20 Nov 2006 18:59:05:851 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/12/07/1165516535775.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Splash Screens with exe4j</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>I'm a long-time fan of <a href="http://www.ej-technologies.com/products/exe4j/overview.html">exe4j</a> for creating nice .exe launcher for Windows users. It costs a few bucks, and there are some great <a href="http://launch4j.sourceforge.net/">open source alternatives</a>, &nbsp;but exe4j is just so feature packed, I've never had to look elsewhere. Every time I think &quot;It'd be good if exe4j&nbsp; supported..&quot; I find that it does.</p>
<p>This week's adventure centred around designing a splash screen for <a href="http://www.bytecode.com.au/passwordsafeswt">PasswordSafeSWT</a>, my little open source password manager. I've been putting off adding a splash because I've never quite worked out how to get one to display quickly enough to be useful (ie. to give the user feedback that they have in fact launched the app). I'd seen exe4j had a splash tab, so I figure I'd explore more (to at least give the windows users some feedback).</p>
<p>One of the first things I noticed was that you could specify your image file, but also&nbsp; overlay your version numbers onto the image at runtime. How cool is that! After picking a few colours and font sizes, I was happily tinkering:</p>
<p><img alt="exe4j Splash Designer" src="./images/2006/exe4jSplashDesigner.gif" /></p>
<p>exe4j has fantastic Ant integration, so I was already passing my version info for embedding into the final .exe.&nbsp;After a quick rebuild, my splash screen is up and running... with that new version info right where I left it... which still needs some alignment work :-)</p>
<p><img alt="PasswordSafeSWT spash screen in action" src="./images/2006/exe4jSplashResult.gif" /></p>
<p>If you're in the market for a very sharp exe maker, I can give exe4j 5 stars. Great stuff ej-technologies folk!</p>&#x5d;&#x5d;&gt;</body>
<date>07 Dec 2006 18:35:35:775 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2006/12/22/1166781151213.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Generating RSS Feeds with Grails and Rome</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>I'm currently working on a&nbsp;little Grails bug tracking application which should see the light of day on Sourceforge sometime in the new year. One of the features I just love about <a href="http://www.atlassian.com/software/jira/">Jira</a> is the RSS support - I'm always watching the Grails recently closed issues to see what's been fixed in the SVN.</p>
<p>So I decided to see what's involved in generating a feed. I could use the standard Groovy MarkupBuilder for sure, but then I'd have to work out the details for each of the XML formats in the common RSS and Atom formats. There has to be an easier way.</p>
<p>Enter <a href="https://rome.dev.java.net/">ROME</a>, a fantastic little library for generating ALL the common RSS feed formats. My goal was to have a controller action that takes a parameter for feed type so I could set up a bunch of links for the common cases. Turns out there's a great <a href="http://wiki.java.net/bin/view/Javawsxml/Rome05TutorialFeedWriter">tutorial</a> to get you started. Using it from Grails makes it even simpler...</p>
<p>Copy your rome.jar file to your project/lib directory, create a new FeedController, and you're off and running. Here's a sample controller I've whipped up that generates a ton of standard feeds:</p>
<pre style="border: 1px solid; margin: 4px">

import com.sun.syndication.feed.synd.*;
import com.sun.syndication.io.SyndFeedOutput;
            
class FeedController {
	
	def supportedFormats = [ "rss_0.90", "rss_0.91", "rss_0.92", "rss_0.93", "rss_0.94", "rss_1.0", "rss_2.0", "atom_0.3"]

	           
	                         
	
    def rss = {
    		
    		render(text: getFeed("rss_1.0"), contentType:"text/xml", encoding:"UTF-8")
   	
    }
    
    def atom = {
    		
    		render(text: getFeed("atom_1.0"), contentType:"text/xml", encoding:"UTF-8")
    	   			
    }

	// or specify your own feed type
    def all = {
			def format = params.id
			if (supportedFormats.contains(format)) {
	    		render(text: getFeed(format), contentType:"text/xml", encoding:"UTF-8")
			} else {
				response.sendError(response.SC_FORBIDDEN);
			}				
	}
	
	
    def getFeed(feedType) {
    	
    	def issues = Bug.list(max: 5, sort: "created", order: "desc")
          	
        def entries = []
        issues.each { issue ->
        	def desc = new SyndContentImpl(type: "text/plain", value: issue.description);
	        def entry = new SyndEntryImpl(title: issue.name + " - " + issue.summary, 
	        		link: 'http://bugga.sf.net/issues/show/' + issue.name,
	        		publishedDate: issue.created, description: desc);
	        entries.add(entry);

        }
        SyndFeed feed = new SyndFeedImpl(feedType: feedType, title: 'Recently Closed Bugga Issues',
        		link: 'http://bugga.sf.net', description: 'Bugga issues closed in the last few days',
        		entries: entries);
        
        StringWriter writer = new StringWriter();
        SyndFeedOutput output = new SyndFeedOutput();
        output.output(feed,writer);
        writer.close();
        
        return writer.toString();

    	
    }
    
}
</pre>
<p>Then you just need to point your aggregator to http://localhost/bugga/feed/atom and you're in business. Or if you want to use any of the supported feeds, head on over to http://localhost:8080/bugga/feed/all/rss_2.0 or whatever you fancy. </p>
<p>Here's a grab from NewzCrawler:</p>
<p><img src="images/2006/BuggaFeed.gif" alt="Bugga Feed running in NewzCrawler"/></p>
<p>Props to the ROME team for a first class little library that does one thing very well.</p>
&#x5d;&#x5d;&gt;</body>
<date>22 Dec 2006 09:52:31:213 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: Generating RSS Feeds with Grails and Rome</title>
<body><![CDATA[nice posting..  very useful.  Wanted to point out that when I first tried it I got a class not found for org/jdom/Document.  I was able to resolve it with the jar from http://www.jdom.org/.  Would any XML DOM represention package work though?&#x5d;&#x5d;&gt;</body>
<author>Douglas Fils</author>
<email>drfils@gmail.com</email>
<website>http://douglasfils.blogspot.com/</website>
<ipAddress>206.72.14.41</ipAddress>
<date>30 Jan 2007 19:47:59:866 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Generating RSS Feeds with Grails and Rome</title>
<body><![CDATA[Thanks very much - exactly what I was looking for and even easier than Rome from Java!&#x5d;&#x5d;&gt;</body>
<author>Dan Murray</author>
<email>danomurray@gmail.com</email>
<website></website>
<ipAddress>212.74.13.67</ipAddress>
<date>29 Mar 2007 11:56:09:842 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Generating RSS Feeds with Grails and Rome</title>
<body><![CDATA[really a nice article. but when i try your example i get the following error:

groovy.lang.MissingPropertyException: No such property: Bug for class: EntryController 

the problem seems to be the render method:

render( text : getFeed('rss_2.0') , contentType : "text/xml" , encoding : "UTF-8" )

&#x5d;&#x5d;&gt;</body>
<author>breskeby</author>
<email>rene@ragow.de</email>
<website>http://www.breskeby.com</website>
<ipAddress>62.214.246.12</ipAddress>
<date>21 Apr 2007 20:52:02:909 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Generating RSS Feeds with Grails and Rome</title>
<body><![CDATA[<p>
Hi. Looks like you need to change that Bug.list(...) call to be whatever domain class you are using in your grails app.
</p>
<p>For example, if it was a list of Books in your database that you were generating a feed for, change it to Book.list(...).
</p>
&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>22 Apr 2007 19:39:00:431 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1177188722909</parent>
</comment>
<comment>
<title>Re: Generating RSS Feeds with Grails and Rome</title>
<body><![CDATA[Excellent article, only took a few minutes to get an rss feed up and running.    iGoogle and Google Reader have trouble with the feeds klipfolio, Firefox, Sharpreader all take the feeds.  Am I missing something or is this something others have seen?
&#x5d;&#x5d;&gt;</body>
<author>Tim Green</author>
<email>t.green@lse.ac.uk</email>
<website></website>
<ipAddress>91.106.197.74</ipAddress>
<date>21 Nov 2007 21:01:56:859 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/01/09/1168337007669.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Groogle: Adding a Simple Search facility to Grails</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
There's been a some talk on the Grails list from different folk that are having a go at implementing a fulltext Search for their Grails application. Maurice has done a sensational job with <a href="http://www.grails.org/Compass+and+Grails+how+to">integrating Compass</a>, and looks like a fantastic platform for a future integrated Grails search capability.
<p>
Recently I've been using raw <a href="http://lucene.apache.org/">Lucene</a>, and I have my hit hitlighting happening (including ... ellipses for joining multiple hits in a single document), along with some snazzy search paging, and general Google-like goodness. Think of it as a "Cheap and Cheerful" search capability you can implement in a hurry on your current Grails app.
</p>
<p>
Here's a grab of the beast in action. I've slurped in the RSS feeds of recent groovy and grails posts from <a href="http://www.nabble.com/grails---user-f11861.html">Nabble</a> to have some reasonable test data, but the harness lets you add your own documents to search against.
</p>
<p>
<img src="images/2007/groogle.gif" alt="groogle Search Screen"/>
</p>
<p>
My approach, while nowhere near as feature-packed or snazzy, just uses standard Grails domain classes, on which you add an "indexedFields" method. You then need to call index(), reindex(), and unindex() in your Controller classes, but even with those changes, you should be able to add full text search to your app in about 15 minutes.  I thought I'd post up my progress so far which I hope to turn into a simple grails plugin for indexing - Groogle. 
</p>

<p>
Implementing the search consists of a number of components that will be familiar to Grails developers:
<ul>
<li><b>SearchTagLib</b> to give you handy g:searchBox, g:searchResults, and g:searchCrumbs</li>
<li><b>SearchService</b> which does the heavy lifting of indexing, reindex, unindexing and searching your Grails documents using Lucene indexes</li>
<li><b>SearchController</b> which takes the user queries, sends them off to the search service, and then sends the results off to the view
<li><b>search.gsp</b> to put it all on the web
<li>Some supporting Groovy classes to act as holders for the search results, hightlighted hits, and whatnot.
</ul>
</p>
<p>
So how can you implement it for your own application? Well it'd be best to use a Groogle plugin, but we're not there yet, so you'll have to <a href="http://www.bytecode.com.au/downloads/grails/">download</a> the demo app and pull it apart yourself for now. Or wait a couple of weeks for a real plugin :-).
</p>
<p>In general terms, what you'll need to do is:
<ol>
<li> 
Put a copy of lucene-core-2.0.0.jar and lucerne-highlight-2.0.0.jar into your project's lib directory
</li>
<li>
Add a indexedFields() method to domain classes that you want to be searchable. This method should return a map of the field names and values that you want to index. 
</li>
<li>
Add the SearchService to your service classes
</li>
<li>
Copy the supporting Groovy classes out of /src/groovy into your own project's /src/groovy.
</li>
<li>
Inject the SearchService into any controller that creates or updates your domain class
</li>
<li>
When calling save() or updating your domain class, make a call to searchService.index(myObj) or searchService.reindex(myObj)  or searchService.unindex(myObj) as appropriate.
</li>
<li>
Copy the SearchController and search.gsp into appropriate places in your project. Edit the g:searchBox tag in search.jsp to include the fields you want to search on.
</li>
</ol>
As I said, this is the stuff that plugins do oh-so-well... You might be better of waiting a week or two for the plugin. :-)
</p>
<p>
Of course, you'll want a way to populate your indexing service on startup, so the SearchService can also be passes a list of objects for indexing: searchService.indexAll(Book.list()) or whatever.
</p>
<p>
Have fun tinkering with Groogle! 
</p>&#x5d;&#x5d;&gt;</body>
<date>09 Jan 2007 10:03:27:669 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Groogle: Adding a Simple Search facility to Grails</title>
<body><![CDATA[Hi Glen, Very interesting and am keen to see if you had any progress with the plugin? The compass plugin looks good, but it won't work with 0.4.2. Anyway - please keep me posted, you have one interested party here!!!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>robbiej@gmail.com</email>
<website>http://www.aegeon.com.au/</website>
<ipAddress>220.245.178.135</ipAddress>
<date>14 Apr 2007 22:06:17:804 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Groogle: Adding a Simple Search facility to Grails</title>
<body><![CDATA[<p>Sadly the progress has been slow here.</p>
<p> 
It should be very straightforward to integrate the existing SearchService with your code, though. Drop me a line if you're keen and I'll talk you through it.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>15 Apr 2007 20:55:04:173 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1176588377804</parent>
</comment>
<comment>
<title>Re: Groogle: Adding a Simple Search facility to Grails</title>
<body><![CDATA[hey this great...
nice work! i just implemeted it, and it s very clear and working fine!

greetz rainer&#x5d;&#x5d;&gt;</body>
<author>rainer</author>
<email/>
<website/>
<ipAddress>87.162.3.154</ipAddress>
<date>10 Aug 2007 12:40:58:855 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Groogle: Adding a Simple Search facility to Grails</title>
<body><![CDATA[Great stuff, mate! Glad it's working out for you.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>10 Aug 2007 21:00:43:117 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1186749658855</parent>
</comment>
<comment>
<title>Re: Groogle: Adding a Simple Search facility to Grails</title>
<body><![CDATA[Hello all!

I get 

Server failed to start: org.mortbay.util.MultiException[org.codehaus.groovy.runtime.InvokerInvocationException: groovy.lang.Gr
oovyRuntimeException: Cannot add new method [getLog] for arguments [[]]. It already exists!, org.codehaus.groovy.runtime.Invok
erInvocationException: groovy.lang.GroovyRuntimeException: Cannot add new method [getLog] for arguments [[]]. It already exist
s!, org.codehaus.groovy.runtime.InvokerInvocationException: groovy.lang.GroovyRuntimeException: Cannot add new method [getLog]ade
 for arguments [[]]. It already exists!]


after grails upgrade. I run grails 0.5.6.


Thanks,
Christoph&#x5d;&#x5d;&gt;</body>
<author>Christoph</author>
<email>gerstle.christoph@gmx.de</email>
<website/>
<ipAddress>207.105.30.44</ipAddress>
<date>10 Aug 2007 22:37:36:413 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Groogle: Adding a Simple Search facility to Grails</title>
<body><![CDATA[
<p>
Hi Chris. You'll need to remove the "def log = LogFactory..." lines at the top of each file.
</p> 
<p>
Newer versions of Grails now inject a log object into everything automagically.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>11 Aug 2007 02:16:40:850 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1186785456413</parent>
</comment>
<comment>
<title>Re: Groogle: Adding a Simple Search facility to Grails</title>
<body><![CDATA[(Thank you Glen!)

Has anyone tried the Searchable Plugin?

http://grails.codehaus.org/Searchable+Plugin

What are the main differences (because it is also based on Lucene)?&#x5d;&#x5d;&gt;</body>
<author>Christoph</author>
<email>info@christophgerstle.de</email>
<website/>
<ipAddress>207.105.30.45</ipAddress>
<date>16 Aug 2007 00:06:55:839 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Groogle: Adding a Simple Search facility to Grails</title>
<body><![CDATA[hi, i deployed my app using this search on tomcat and under windows the "lucene-index" directory lands under "tomcat/bin/*" and under unix the "lucene-index" lands under "tomcat/*"...

how can i make the directory end up under "tomcat/webapps/myApp/*" ???

thx a lot... i like what u ve done ;)

rainer&#x5d;&#x5d;&gt;</body>
<author>rainer</author>
<email>rainerblumenthal@gmx.de</email>
<website/>
<ipAddress>87.162.28.220</ipAddress>
<date>01 Sep 2007 10:27:13:74 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1187222815839</parent>
</comment>
</blogEntry>

Importing 2007/01/16/1168985753887.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>PasswordSafeSWT 0.6 hits the streets</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
After a year of stuffing around, I've finally released PasswordSafeSWT 0.6 - my little Java port of the popular PasswordSafe password manager. 
</p>

<p>
New in this release is long-awaited support for the v3 PWS database format, along with Mac OSX Universal binary support, and an update to SWT 3.2 which should fix some Linux display manager issues some people were having.
</p>

<p>
<img src="images/2007/PwsStartup.gif" alt="PasswordSafeSWT Startup Dialog" style="border: 1px solid black"/>
</p>


<p>
This release took *sooo* much longer than I thought it would, mostly because I tried to reuse the existing v1/2 classes and extend them to support the (entirely different) v3.0 database format.
</p>


<p>
Along the way I've learned a ton about Chaining Block Ciphers, SHA-256, JCE, and why the Bouncy Castle lightweight API can be a better choice than the standard option (Anyone for an "<a href="http://blogs.bytecode.com.au/glen/2006/10/03/1159850700000.html">Unsupported keysize or algorithm</a>" exception?) 
</p>

<p>
Feel free to <a href="https://sourceforge.net/project/showfiles.php?group_id=41019&package_id=164907">download it</a> from SourceForge, or have a browse of some <a href="http://www.bytecode.com.au/passwordsafeswt/screenshots.html">screenshots</a> on the various platforms.
</p>&#x5d;&#x5d;&gt;</body>
<date>16 Jan 2007 22:15:53:887 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: PasswordSafeSWT 0.6 hits the streets</title>
<body><![CDATA[Congratulations on the release, Glen! And congratulations on being mentioned on Erik's Linkblog!&#x5d;&#x5d;&gt;</body>
<author>Joe Attardi</author>
<email>jattardi@gmail.com</email>
<website>http://thinksincode.blogspot.com/</website>
<ipAddress>66.10.55.2</ipAddress>
<date>17 Jan 2007 21:02:07:725 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2007/01/22/1169458555645.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Hudson is one cool build tool...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've been a long term fan of Anthill. It was always so much easier to configure than Cruise Control and, even though the feature set was slimmer, it did everything I needed in an automated build/continuous integration tool.
</p>
<p>
Lately, however, I've been taking <a href="https://hudson.dev.java.net/">Hudson</a> for a spin as an Anthill replacement, and it has totally blown me away. The cool Ajaxy console window that keeps in sync with your build's stdout as it happens, the RSS feed for builds, ability to easily see CVS mods for a particular build, integrated test reporting, and very easy to use and slick UI all combine for a killer automated build tool.   
</p>
<p>
The other big sell is that there is no Unix command prompt fiddling required. The whole app installs as a single WAR - and *everything* can be configured with from a browser. 
</p>
<p>Just one gotcha for new players, you'll want to set your app server's environment to include a HUDSON_HOME (on Glassfish, use /Configuration/System Properties from the console as shown below), so you don't end up with build artifacts in the scratch area of your deployed Hudson war. Once that's done, just replace with the latest Hudson war as it comes out and all your settings will just keep on trucking.
</p>
<p>
<img src="images/2007/HudsonConfig.gif" alt="Configuring HUDSON_HOME on Glassfish" style="border: 1px solid black"/>
</p>
<p>
Big props to the Hudson guys for a fantastic build tool that's a snap to configure and use. Awesome stuff - my new automated build tool of choice!
</p>&#x5d;&#x5d;&gt;</body>
<date>22 Jan 2007 09:35:55:645 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Hudson is one cool build tool...</title>
<body><![CDATA[woah never heard of Hudson but it looks amazing! thanks for the hint, keep up blogging! cheers :)&#x5d;&#x5d;&gt;</body>
<author>Kristof Jozsa</author>
<email/>
<website/>
<ipAddress>195.56.96.190</ipAddress>
<date>27 Jan 2007 15:59:40:976 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Hudson is one cool build tool...</title>
<body><![CDATA[<p>Hi Kristoff. Hudson is one of java.net's best kept secrets - the best CI tool you've never heard of! I'm sure it will get a lot of traction this year.</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>28 Jan 2007 19:29:06:828 +0000</date>
<state>approved</state>
<parent>1169913580976</parent>
</comment>
<comment>
<title>Re: Hudson is one cool build tool...</title>
<body><![CDATA[Hi Glen - I've just started using hudson - it seems like a fantastic tool, and I've been successful at setting most of it up. The only problem is that the documentation is lacking in many areas - such as artifact archiving, which I can't get to work.

Is there any how-to sites/other docs that you could point me to?

Thanks - happy coding!
&#x5d;&#x5d;&gt;</body>
<author>Curt C</author>
<email>mailsink@aol.com</email>
<website/>
<ipAddress>69.73.18.50</ipAddress>
<date>07 Mar 2007 14:00:09:573 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Hudson is one cool build tool...</title>
<body><![CDATA[<p>Hi Curt. Sorry, but I've not done anything with archiving. Might want to drop the Hudson mailing list a line?</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>07 Mar 2007 20:15:39:495 +0000</date>
<state>approved</state>
<parent>1173276009573</parent>
</comment>
</blogEntry>

Importing 2007/01/25/1169716190445.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Grails on Glassfish is Go!</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
That's right. Grails apps now play nice on Glassfish v1.  <a href="http://graemerocher.blogspot.com/index.html">Graham</a> has been very patient about my regular nagging over <a href="http://jira.codehaus.org/browse/GRAILS-269">GRAILS-269</a> , and true to his word, the new Grails 0.4 will indeed be Glassfish friendly. 
</p>
<p>This is sensational news for me, since I have been busting to run a few of my apps publicly for a while and had to resort to all sorts of dodgy workarounds getting Grails running on Jetty while the rest of my apps run on Glassfish. 
</p>
<p>
For a first taste, try out my little <a href="http://www.bytecode.com.au/groogle">Groogle</a> test harness to see how you can add full text search to your Grails app. You can read more about how Groogle is implemented <A href="http://blogs.bytecode.com.au/glen/2007/01/09/1168337007669.html">here</a> and download the source if you're super keen. 
</p>
<p>
I found I had issues with straight Glassfish V1 b48 on Ubuntu (CPU went to 100% whenever I deployed an app), but I've had great success on the latest update release (UR1 P1) on both Win32 and Linux. Took the opportunity to upgrade to JDK 1.6 at the same time and everything is playing very nicely!
</p>
<p>
Huge props to Graham and the team for making Glassfish a first class option for Grails apps!
</p>&#x5d;&#x5d;&gt;</body>
<date>25 Jan 2007 09:09:50:445 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Grails on Glassfish is Go!</title>
<body><![CDATA[<p>Just a followup on this one. When I deployed CyaThen.com (a pretty large Grails app), I found I was getting "java.lang.OutOfMemoryError: PermGen space" errors even on UR1 P1.</p>
<p>There's a fairly complete <a href="https://glassfish.dev.java.net/issues/show_bug.cgi?id=587">bug report</a> about this issue by others, as well as a long <a href="http://forums.java.net/jive/thread.jspa?threadID=17492&start=0&amp;tstart=0">forum thread</a>, and it seems the accepted wisdom is to change your JVM args (/Application Server/JVM Settings/JVM Options from the console) to include -XX:MaxPermSize=256m. I've done this and  everything is working for me.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>26 Jan 2007 19:47:29:217 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>great blog mate!</title>
<body><![CDATA[Im a newbie with grails, but loved so much since the beginning. thanks for posting code is helping me to understand some basics :)&#x5d;&#x5d;&gt;</body>
<author>Jorge Baroudi</author>
<email>jorgebaroudi@hotmail.com</email>
<website>http://empacarino.blogspot.com</website>
<ipAddress>189.149.15.25</ipAddress>
<date>03 Feb 2007 17:53:40:441 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2007/01/31/1170241907972.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>The Grails 20 hour Challenge...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
So how much of a Community-driven Website could you build in 20 hours, once you've got a good feel for the framework? That's my February Grails challenge...
</p>
<p>
I reckon I can find about 5 hours of "project" time a week (think wife/kids/dog/dayjob/uni/health - so 5 hours might be optimistic). I'm really keen to see what I could build in that timeframe over the course of February that would be useful to the Groovy and Grails community (you'll also be able to download the src to as a good little sample app for learning when I'm done). 
</p>
<p>I'm going to use <a href="http://www.slimtimer.com">Slimtimer</a> to keep my hours honest and get some good non-fudged metrics on my own productivity. I'm also going to be reusing code from my other Grails apps (it's not cheating - you would too :-).
</p>
<p>
The plan is to have a crack at building a blog aggregator - a simple automated aggregator of Groovy and Grails related blogs in the same style as javablogs.com.
</p>
<p>
Not sure there are quite Groovy and Grails bloggers yet for a "hot entries" page, but we'll work that all out as we go. I'm planning to post up grabs of my progress here once a week, so people can see just how much you can build in your spare time. Here's how far I've got so far :-) 
</p>
<p>
<img src="images/2007/GroovyBlogsNotes.jpg" alt="Early sketches of GroovyBlogs ideas" style="border: 1px black solid"/>
</p>&#x5d;&#x5d;&gt;</body>
<date>31 Jan 2007 11:11:47:972 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
<comment>
<title>Re: The Grails 20 hour Challenge...</title>
<body><![CDATA[Good luck with this Glen!  I'm looking forward to seeing how it goes :-)&#x5d;&#x5d;&gt;</body>
<author>bloid</author>
<email/>
<website>http://www.dzone.com</website>
<ipAddress>130.88.233.248</ipAddress>
<date>31 Jan 2007 13:27:45:489 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: The Grails 20 hour Challenge...</title>
<body><![CDATA[Great idea. I'm looking forward to read your experiences!

Cheers,
Marcel&#x5d;&#x5d;&gt;</body>
<author>Marcel Overdijk</author>
<email>marceloverdijk@gmail.com</email>
<website>http://marceloverdijk.blogspot.com/</website>
<ipAddress>85.147.181.131</ipAddress>
<date>31 Jan 2007 21:25:25:584 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: The Grails 20 hour Challenge...</title>
<body><![CDATA[We'll be watching your progress. Grails 0.4 has just released, are you going to use this release?&#x5d;&#x5d;&gt;</body>
<author>James</author>
<email>james_027@yahoo.com</email>
<website/>
<ipAddress>125.5.144.166</ipAddress>
<date>01 Feb 2007 00:37:48:438 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: The Grails 20 hour Challenge...</title>
<body><![CDATA[<p>
For sure. I've been using 0.4 SVN for the last couple of weeks pretty happily for the Glassfish fixes. 
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.13.2.142</ipAddress>
<date>01 Feb 2007 01:20:53:601 +0000</date>
<state>approved</state>
<parent>1170290268438</parent>
</comment>
<comment>
<title>Re: The Grails 20 hour Challenge...</title>
<body><![CDATA[Awesome! I don't know how you find the five hours? wife/kids/dog/commute eats most of my time.&#x5d;&#x5d;&gt;</body>
<author>doyle</author>
<email>doyle@doylecentral.com</email>
<website>http://doylecentral.com</website>
<ipAddress>138.162.0.44</ipAddress>
<date>08 Feb 2007 19:06:21:823 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: The Grails 20 hour Challenge...</title>
<body><![CDATA[<p>
LoL. Yeah. About a year ago I was challenged by a fitness dude to cut my sleep time to 7 hours to (a) improve my wellbeing, and (b) get more stuff done. I can totally vouch for it.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>08 Feb 2007 19:10:22:10 +0000</date>
<state>approved</state>
<parent>1170961581823</parent>
</comment>
</blogEntry>

Importing 2007/02/06/1170734279559.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Grails Challenge: 7 hour update</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Ok. Creeping up on 6.7 hours working on my Grails-based Groovy Blog Aggregator and it's time for an update on what's done so far. 
</p>
<p>Ok. Quite a lot is in:
<ul>
<li>Account creation, forgotten password
<li>Adding a single blog feed to your account (with ajax test/preview)
<li>RSS and Atom parsing of feeds using <a href="https://rome.dev.java.net/">Rome</a>
<li>Scheduled updating of all registered feeds (checking for new entries)
<li>"Recent Entries" page with basic description summary taglib
<li>Hit counting and redirection from "Recent Entries"
<li>Some of the early CSS layout template stuff
</ul>
</p>
<p>
But you probably want pictures...
</p>
<p>
<img src="images/2007/GroovyBlogs7Hours.png" alt="Groovy Blogs home page after 7 hours" />
</p>
<p>
Where have I burnt most of the time? I know a bit has certainly gone to CSS and Photoshop (those damn gradient backdrops...). Also burnt a fair bit of it working out how Rome handles Atom and RSS irregularities (still some XML encoding bugs in there to iron out at my end). 
</p>
<p>
Also came across some issues in the remoteFormLink tag when using Yahoo as the underlying Ajax library. Retreated to Prototype version and life was good (must remember to log an issue on that one). 
</p>
<p>
So things are definitely on track for my 20 hour timeframe... but everyone says that early in a project :-)
</p>&#x5d;&#x5d;&gt;</body>
<date>06 Feb 2007 03:57:59:559 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Grails Challenge: 7 hour update</title>
<body><![CDATA[Hey bigfella, I'm following your progress with great interest. Evaluating Grails for use in our company here in London town. :)

Keep it up mate!

&#x5d;&#x5d;&gt;</body>
<author>Nashie</author>
<email>nash100@gmail.com</email>
<website/>
<ipAddress>89.243.67.244</ipAddress>
<date>06 Feb 2007 22:45:38:534 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Grails Challenge: 7 hour update</title>
<body><![CDATA[you're cool! Do you mind sharing your source code? Or provide tutorials for those grails and web app developer newbies?&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>james_027@yahoo.com</email>
<website/>
<ipAddress>125.5.144.166</ipAddress>
<date>07 Feb 2007 00:40:38:174 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Grails Challenge: 7 hour update</title>
<body><![CDATA[<p>
For sure. When I'm done with the 20 hour challenge all the source will be Apache 2.0 and free for whatever you want (preferrably patches and enhancements :-)
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>07 Feb 2007 08:23:01:956 +0000</date>
<state>approved</state>
<parent>1170808838174</parent>
</comment>
<comment>
<title>Re: Grails Challenge: 7 hour update</title>
<body><![CDATA[picture is too large, scale it down a bit.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>82.181.178.238</ipAddress>
<date>08 Feb 2007 11:40:19:831 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2007/02/10/1171140660000.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Grails Challenge: 15 hour update</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Just back from a week at the beach on hols and feeling fantastic. I must say that progress has been a lot slower in the second set of 7 hours but I'm still pretty on track for my 20 hour deadline. <a href="http://www.slimtimer.com">SlimTimer</a> is reporting 14.8 hours on the clock, so I figure it must be time for an update.
</p>
<p>
RSS and Atom generation of "Recent Entries" is in and happening. Here's a grab from Newzcrawler showing what an Aggregator should see:
</p>
<p>
<img src="images/2007/gbFeed.gif" alt="Feeds in Newzcrawler"/>
</p>
<p>
Full Text Search of entries using my <a href="http://blogs.bytecode.com.au/glen/2007/01/09/1168337007669.html">Groogle</a> code is now in place. Indexer will get tripped as new entry is added to the db, and have put some code in to do a nightly optimize to keep is tight.
</p>
<p>
<img src="images/2007/gbSearch.gif" alt="Searching Indexed Entries"/>
</p>
<p>
The Ajax preview feature of "Add a Blog" is slowly getting there (but still having some grief with <a href="http://script.aculo.us/">Scriptaculous</a> getting my visual effects happening. I'm a bit of a Javascript bunny, so everything takes a lot longer here than it should. It's kinda gratifying to be able to add your URL and see GroovyBlogs nicely rendered a parse of your URL, but I'm not sure it's really that useful. Good sample code, though.)
</p>
<p>
Implementation of "Hot Entries" is now in (which I am planning on making that "last 7 days" rather than "last 24 hours" based on the size of the Groovy blogosphere.). I've also implemented that "suppress more than 3 entries from same author" thing that Javablogs does.
</p>
<p>
I've come up with a nice taglib for doing "3 hours 14 minutes ago" or "30 minutes from now" date transformations. Very useful for the "Just In" and "Hot Entries" pages.
</p>
<p>
Wasted a stack of time on more GUI work including a site logo, a favicon (can recommend <a href="http://tools.dynamicdrive.com/favicon/">DynamicDrive's</a> cool little online tool) and color scheme work. I'm really working on improving my GUI skills, but it's a long walk to freedom.
</p>
<p>
<img src="images/2007/gbFavicon.gif" alt="Favicon in a browser"/>
</p>
<p>
I'm also working on getting one of those coolish looking Web 2.0 site logos happening, but the best I can come up with so far is something like:
</p>
<p>
<img src="images/2007/gbLogo.gif" alt="Attempt at a Web 2.0ish site logo"/>
</p>
<p>
All the standard stuff like on-schedule site aggregation and parsing is all working a treat, but I want to keep some time up my sleeve for load testing. Might end up putting in a little caching service for the home page? But I'll investigate whether it's an issue first.
</p>
<p>
With only a little over 5 hours to go, the biggest thing to finish is the "My Profile" page where you can add/delete/update feeds. The Ajaxy part of this page has been burning a bit of time, but has been a great learning experience. I reckon I could blow another two hours on that getting it right. I'm keen to investigate what might be possible with the JSON builder... Stay tuned.
</p>
<p>
Once that's done, it's just the CSS of the tabs on the front page, a little "login" portlet replacing the current login page, and some serious testing. I'll be working hard to have it out the door before the end of the month. Phew!
</p>
&#x5d;&#x5d;&gt;</body>
<date>10 Feb 2007 20:51:00:0 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Grails Challenge: 15 hour update</title>
<body><![CDATA[Regarding the logo, to make it even groovier, you should dump the semis ;-)
Otherwise, that's a nice idea to do such a challenge! Good luck!&#x5d;&#x5d;&gt;</body>
<author>Guillaume Laforge</author>
<email>glaforge@gmail.com</email>
<website>http://glaforge.free.fr/blog/groovy</website>
<ipAddress>82.244.132.11</ipAddress>
<date>19 Feb 2007 22:41:36:653 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Grails Challenge: 15 hour update</title>
<body><![CDATA[Great thinking. They're gone in the next update.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>20 Feb 2007 01:41:49:381 +0000</date>
<state>approved</state>
<parent>1171924896653</parent>
</comment>
</blogEntry>

Importing 2007/02/26/1172521648562.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Grails Challenge: Pens Down</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Boy that 20 hours certainly went more quickly than expected... Actually SlimTimer is telling me that I'm at 21.3 hours, so it's definitely time for pens down! I'll factor in the final cleanup and deploy time to get a more accurate final figure for the go-live.
</p>
<p>
Tons of new features made it into the final release, though. Lets start with the more boring webby stuff, since that's all part of the development deal too, and quite a time burner. 
</p>
<p>
As promised last time, I ended up getting in those tabs using A List Apart's <a href="http://alistapart.com/articles/slidingdoors/">sliding doors</a> technique. Actually was much quicker than I expected since that technique only needs four images.
</p>
<p>
<img src="images/2007/gbTabs.gif" alt="Tabs in action"/>
</p>
<p>
Then I set to work on some nice box layouts for various things that run down the margin. While I was at it I put in a simple login div as a trial run:
</p>
<p>
<img src="images/2007/gbLogin.gif" alt="Login Window in a spunky div"/>
</p>
<p>
Then came some features I've been wanting for a while. Thanks to the generous folk at <a href="http://www.nabble.com/">Nabble</a>, they have allowed me to integrate their Grails and Groovy RSS feeds into groovyblogs. So I've not got a "List Buzz" tab so you can get a quick glance at what's being talked about on the lists:
</p>

<p>
<img src="images/2007/gbLists.gif" alt="Lists courtesy of Nabble"/>
</p>
<p>
I already had all the infrastructure to parse and present feeds, so it seems a shame not to include the lists in their own tab. I didn't want to persist them, though, so I decided to use an in memory cache. <a href="http://ehcache.sf.net">ehcache</a> is bundled with Grails, so it seemed like a good candidate. Decided to make it generic with a little Grails CacheService. Then I got to thinking...
</p>
<p>
If you've got a generic CacheService, why not cache some other useful stuff? So I now wrap the Popular, Recent and Feed links in the CacheService which means my hits on the db should be through the floor. Must get around to doing some profiling on that one...
</p>
<p>
It was also time to sort out that account management dialog. Decided to scale back some of my Ajax ambitions there and just use Ajax for the feed testing. It's not as spunky, but it ended up much cleaner to implement the rest via standard grails actions.
<p>
<p>
<img src="images/2007/gbAjax.gif" alt="Ajaxing a New Feed parse"/>
</p>
<p>
Ended up having to add configurable http proxy support so groovyblogs works inside a firewall (debugging during lunchtime at a client site, did you say?). Anyways, Commons Http makes it a one liner, so that was a snap.
</p>
<p>
So when is it going out the door? Good question, it's gotta be by the end of Feb, right? I guess it will <a href="http://www.groovyblogs.org/">turn up</a> sometime soon when I get some downtime... Be gentle with it...
</p>&#x5d;&#x5d;&gt;</body>
<date>26 Feb 2007 20:27:28:562 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Grails Challenge: Pens Down</title>
<body><![CDATA[Where's the source? I'd like to take a look at how you did it.

Thanks,
Jbwiv&#x5d;&#x5d;&gt;</body>
<author>jbwiv</author>
<email/>
<website/>
<ipAddress>66.192.236.118</ipAddress>
<date>28 Feb 2007 14:24:04:746 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Grails Challenge: Pens Down</title>
<body><![CDATA[<p>
You can download the complete src my <a href="http://www.bytecode.com.au/downloads/grails/">downloads directory</a>. You'll find the latest groovyblogs.zip in there.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>28 Feb 2007 19:05:21:141 +0000</date>
<state>approved</state>
<parent>1172672644746</parent>
</comment>
</blogEntry>

Importing 2007/02/28/1172662853575.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>24 Hours of groovyblogs.org: source now available</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Well the first 24 hours of <a href="http://www.groovyblogs.org/">groovyblogs.org</a> was a senssational one. Only one outage due to the most fierce electrical storm we've had in Canberra for ages. Note to self: move the router onto the UPS as well.
</p>
<p>
I'm pleased to announce that <a href="http://www.bytecode.com.au/downloads/grails/">the complete source code</a> for the site (including art) is now available, so if you've been wondering how much dodgy-ness can be crammed into 22 hours, now's your chance to find out.
</p>
<p>
Should be a nice sample app for people to learn about fulltext search, RSS aggregation and generation, caching, and some simple Ajax uses.
</p>
<p>
Have updated the site with some fixes today based on the first 23 hours. The first fix was to suppress any entries not containing groovy or grails keywords. I think a lot of people may have thought that groovyblogs.org was just a general java aggregator written in groovy/grails. Fair enough.
</p>
<p>Decided to make that more clear for people when they test their blog (with checkboxes for groovy related stuff). Incidentally, found a <a href="http://www.famfamfam.com/lab/icons/silk/">great site for icons</a> in my quest for an open source tick and cross.
</p>
<p>
<img src="images/2007/gbFilter.gif" alt="Filtering blog entries in the preview screen"/>
</p>
<p>
Anyways, <a href="http://www.bytecode.com.au/downloads/grails/">enjoy the source</a>! And have fun with <a href="http://www.groovyblogs.org">groovyblogs.org</a>!
</p>&#x5d;&#x5d;&gt;</body>
<date>28 Feb 2007 11:40:53:575 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags></tags>
<comment>
<title>Great tutorial on Groovy and Grails</title>
<body><![CDATA[Great stuff Glen ;) Thanks for sharing &#x5d;&#x5d;&gt;</body>
<author>javacola</author>
<email>javacola@gmail.com</email>
<website></website>
<ipAddress>222.252.87.109</ipAddress>
<date>01 Mar 2007 02:36:06:110 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: 24 Hours of groovyblogs.org: source now available</title>
<body><![CDATA[Great job, i will take a look at the source thank you!

Benjamin&#x5d;&#x5d;&gt;</body>
<author>Benja</author>
<email></email>
<website>http://www.benjaweb.be/blog</website>
<ipAddress>212.166.42.105</ipAddress>
<date>01 Mar 2007 07:16:12:310 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: 24 Hours of groovyblogs.org: source now available</title>
<body><![CDATA[Cheers Glen, thanks for the experiment and the source.  New tech like Grails needs people to do stuff like this.&#x5d;&#x5d;&gt;</body>
<author>Tyler</author>
<email>ty@praytothemachine.com</email>
<website>http://www.praytothemachine.com/evil/</website>
<ipAddress>205.205.167.146</ipAddress>
<date>01 Mar 2007 15:06:38:453 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: 24 Hours of groovyblogs.org: source now available</title>
<body><![CDATA[Great work! groovyblogs.org looks fantastic... But, this is just a personal pet peeve of mine, do I have to download and unpack the 2Mb zip file to find out what terms you've licensed the code under? Can you put a LICENSE.txt file in the download folder for folks like me who'd prefer to know that info before downloading?

In any case, thanks for sharing your work! Once I find out what the terms are, I just might download and start using your app.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>204.225.63.10</ipAddress>
<date>02 Mar 2007 20:44:12:696 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: 24 Hours of groovyblogs.org: source now available</title>
<body><![CDATA[<p>Great idea. I was thinking that yesterday. I'll put a licence in the next version. Might be a couple of weeks,  but check back then.</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>02 Mar 2007 23:57:18:619 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1172868252696</parent>
</comment>
<comment>
<title>Re: 24 Hours of groovyblogs.org: source now available</title>
<body><![CDATA[<p>Ok. Have placed a license.txt file in the directory for now. Will place a copy in the source download and comments with the next version. 
</p>
<p>
Like pretty much all my stuff, groovyblogs is licensed under the  commercial-friendly Apache 2.0 license. 
</p>
<p>
Enjoy!
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>03 Mar 2007 00:46:54:146 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1172879838619</parent>
</comment>
<comment>
<title>Re: 24 Hours of groovyblogs.org: source now available</title>
<body><![CDATA[Thank you,
I'm just starting with groovy/grails. 
Thanks for the code!

cheers&#x5d;&#x5d;&gt;</body>
<author>azreal</author>
<email>michal.kuklis@gmail.com</email>
<website>http://michalkuklis.com</website>
<ipAddress>74.71.46.250</ipAddress>
<date>16 Mar 2007 01:45:38:774 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: 24 Hours of groovyblogs.org: source now available</title>
<body><![CDATA[Thanks for this great application, and for making the source code available too.&#x5d;&#x5d;&gt;</body>
<author>Paul</author>
<email>paul@javathinking.com</email>
<website>http://www.javathinking.com</website>
<ipAddress>211.30.89.47</ipAddress>
<date>22 Apr 2007 11:48:22:360 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: 24 Hours of groovyblogs.org: source now available</title>
<body><![CDATA[Hi Glen,

the source code is not available:-( at the link provided&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>mighani@web.de</email>
<website></website>
<ipAddress>80.136.169.33</ipAddress>
<date>27 Sep 2007 13:43:36:713 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: 24 Hours of groovyblogs.org: source now available</title>
<body><![CDATA[Sorry. Check back in a week. Just rebuilding the server from scratch right now... and haven't restored the download section yet. &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>28 Sep 2007 20:29:45:663 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1190900616713</parent>
</comment>
</blogEntry>

Importing 2007/03/05/1173087379831.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Calculating stats for your Grails project</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
After developing in Grails for a while, I went to a Rails talk by <a href="http://madbean.com/">Matt</a>. He demoed developing a little blogging app, and I recognised that I could do most of what he was talking about just as quickly and easily in Grails. 
</p>
<p>
But one cool little thing he demoed was the "rake stats" command. This gave you a bunch of metrics on your project (lines of code, test/code ratios, NCLOC, etc). Check out a <a href="http://www.howtogeek.com/howto/programming/ruby-on-rails/get-stats-on-your-ruby-on-rails-code/">sample run</a>.
</p>
<p> Anyways, I thought it was a neat feature, and I was keen to run a similar thing for <a href="www.groovyblogs.org">groovyblogs</a>, so I set aside a lunch hour putting together a cheap and cheerful version in Groovy. Certainly not anywhere near as feature complete, but it'll get us started, and maybe someone out there will pick up the batton and run with it. Here's my output from a "grails stats" command when run on the groovyblogs source base:
</p>
<p>
<pre style="line-height: 0.99">
 
        +----------------------+-------+-------+
        | Name                 | Files |  LOC  |
        +----------------------+-------+-------+
        | Controllers          |     7 |   588 |
        | Domain Classes       |     3 |   101 |
        | Jobs                 |     3 |    66 |
        | Services             |     6 |   618 |
        | Tag Libraries        |     2 |   207 |
        | Tests                |    11 |    66 |
        | Groovy Helpers       |     5 |   179 |
        +----------------------+-------+-------+
        | Totals               |    37 |  1825 |
        +----------------------+-------+-------+
</pre>
</p>
<p>
Mine is very rudimentary, simply calculating the number of files and total lines of code (sorry, no smart stuff around whitespace or comments). 
</p>
<p>The amazing part is how quick is it to whip this sort of thing up in groovy. Building that table I became acquainted with the String.padRight() and String.padLeft() enhancements. Add the File.eachFileRecurse closure and a sprinkling of Expandos, and voila! You've saved an incredible amount of mucking about! 
</p>
<p>Converting to a command that can integrate with Grails commandline was pretty much a drag and drop to the "scripts" directory along with a few scaffold lines to return the name of the target. A snack!
</p>
<p>
Anyways, I'll talk to the Grails boys and see if I can get it added to a future release. In the meantime, if you're keen to use it in your own project, grab Stats.groovy from the <a href="http://www.bytecode.com.au/downloads/grails">downloads directory</a>, and put it in your $GRAILS_HOME/scripts directory. Then you're only a "grails stats" away from getting a lay of the land.
</p>
&#x5d;&#x5d;&gt;</body>
<date>05 Mar 2007 09:36:19:831 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags/>
<comment>
<title>Re: Calculating stats for your Grails project</title>
<body><![CDATA[Really nice Glen. You keep suprising!

I would say add JIRA issue and attach the patch.

Cheers,
Marcel&#x5d;&#x5d;&gt;</body>
<author>Marcel Overdijk</author>
<email>marceloverdijk@gmail.com</email>
<website>http://marceloverdijk.blogspot.com</website>
<ipAddress>85.147.181.131</ipAddress>
<date>05 Mar 2007 19:22:57:592 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Calculating stats for your Grails project</title>
<body><![CDATA[<p>Good idea, Marcel. Will do it today.</p>
<p>In other news, I decided to filter whitespace in source files for stats calculations (since it's a one-liner). Have updated the download. 
</p>
<p>My linecount has now dropped to 1425.</p>

&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>05 Mar 2007 20:23:02:528 +0000</date>
<state>approved</state>
<parent>1173122577592</parent>
</comment>
<comment>
<title>Re: Calculating stats for your Grails project</title>
<body><![CDATA[Glen - out of interest why use Expandos and not nested maps?

&#x5d;&#x5d;&gt;</body>
<author>Marc Palmer</author>
<email>marc@anyware.co.uk</email>
<website>http://www.anyware.co.uk/</website>
<ipAddress>89.145.198.122</ipAddress>
<date>08 Mar 2007 19:33:18:121 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Calculating stats for your Grails project</title>
<body><![CDATA[<p>Marc, no good reason. I just have a soft spot for Expandos. That whole "assigning a closure to a property" thing just makes me love 'em. But for this script, the map does probably make more sense. Nice pickup.</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>09 Mar 2007 21:00:47:577 +0000</date>
<state>approved</state>
<parent>1173382398121</parent>
</comment>
</blogEntry>

Importing 2007/03/14/1173865740000.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Glen's amazing adventures in the land of UTF-8</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
It's been difficult to miss, but groovyblogs has been having a few issues lately presenting non-english blog entries.  After messing about with various HTML encoding settings, I realised that the problem is not in what is getting sent to the browser, it's what is coming out of the database!
</p>
<p>
Little did I know that if you don't do a "create database groovyblogs with encoding 'UNICODE'" when you create your database in PostgreSQL, you'll be getting an ASCII encoding for all those varchars. Eeeek! Anyways, the migration process is <a href="http://archives.postgresql.org/pgsql-novice/2006-03/msg00195.php">documented</a> but it won't help me with all the existing non-English entries I've stuffed. Oh well. Live and learn.
</p>
<p>
Once I sorted out database encoding stuff, I noticed that Rome wasn't doing the right thing by me either. Entries weren't being UTF8 encoded off the stream, but the do give you <a href="https://rome.dev.java.net/apidocs/0_9/com/sun/syndication/io/XmlReader.html">XmlReader</a> as a simple way of handling all the various character encoding issues in a feed. I ended up with some code like this:
</p>
<p>
So I've been thinking that some of those non-english entries look pretty interesting, there must be some translation APIs out there I can call to do an inplace-translation? You'd think, but you'd be wrong. The best I can manage without violating terms of service is to link you off to Google, for now. But how do you work out what language the source document is written in?
</p>
<p>
At the moment I'm using <a href="http://textcat.sourceforge.net/">textcat</a> which is a cute little library for doing just that. Bundles with a small section of language, but the jar seems to contain signatures for a whole lot more. Just need to work out how to activate them...
</p>&#x5d;&#x5d;&gt;</body>
<date>14 Mar 2007 09:49:00:0 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>unpublished</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2007/03/27/1174960089243.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Getting Jiggy with JFreeChart</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Jim Clark has put together a great little <a href="http://www.jfree.org/jfreechart/">JFreeChart</a> builder for Groovy called <a href="https://groovychart.dev.java.net/">GroovyChart</a>. I've been thinking for a while that I'd love to add some simple charting to <a href="http://www.groovyblogs.org">GroovyBlogs</a>, and I figure this was a great way to get into it. I've had a play, and could generate the demo charts just fine, but once I wanted to go a little deeper, I got a little lost in the builder semantics. It looks like it's going to be a great little library, though.
</p>
<p>
So I retreated to using the standard JFreeChart APIs, working off some of the samples you get with the manual, and I've got my first little chart happening. Still a little work to do on the fonts, but it's travelling very nicely:
</p>
<p>
<img alt="Stats Graph with Alpha Blend" src="images/2007/gbStatsGraph.png" style="border: 1px solid black;"/>
</p>
<p>
That alpha-blending transparency on the png was the only really tricky bit and courtesy of a little of <a href="http://cephas.net/blog/2006/06/09/transparent-png-charts-with-jfreechart/">Aaron's magic</a>, even that is very doable. The final pieces of implementing the magic in my Grails controller ended up being:  
</p>
<p>
<pre>
chart.setBackgroundPaint(new Color(255,255,255,0))
KeypointPNGEncoderAdapter encoder = new KeypointPNGEncoderAdapter()
encoder.setEncodingAlpha(true)
		 
def cb = encoder.encode(chart.createBufferedImage(170, 150,
     BufferedImage.BITMASK, null))
		 
response.setContentType("image/png")		 
response.setContentLength(cb.length)
response.getOutputStream().write(cb)
</pre>
</p>
<p>
Hope to get it deployed to prod groovyblogs later in the week. I've also got some interesting translation functionality in the mix, too. So stay tuned...
</p>

&#x5d;&#x5d;&gt;</body>
<date>27 Mar 2007 01:48:09:243 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags/>
</blogEntry>

Importing 2007/03/28/1175114489031.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Getting Groovy with Language Translation APIs</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
The Groovy community is a very international one... so it's no surprise that <a href="http://www.groovyblogs.org/">GroovyBlogs</a> ends up getting entries in all sorts of languages, particularly Spanish. As someone with no exposure to non-english applications or any i18n stuff (shame on me, I know) all these UTF-8 issues are quite a head spin...
</p>
<p>So I've been thinking that some of those non-english entries look pretty interesting, there must be some Java translation APIs out there I can call to do an inplace-translation? Even a webservice would be nice? You'd think, but you'd be wrong. The best I can manage without violating terms of service is to link you off to Google, for now. But how do you work out what language the source document is written in?
</p>
<p>
At the moment I'm using <a href="http://textcat.sourceforge.net/">textcat</a> which is a cute little library for doing just that. Bundles with a small section of languages, but the jar seems to contain signatures for a whole lot more. Just need to work out how to activate them... The API is a one liner:
</p>
<p>
<pre>
def guesser = new org.knallgrau.utils.textcat.TextCategorizer()
def category = guesser.categorize(yourString)
</pre>
</p>
<p>
which will return the string "spanish". Combine that with Groovy hashmaps, templates and Google linking goodness, and you get something like:
</p>
<p>
<img style="padding: 2px;" src="images/2007/gbTranslate.png" alt="Translation in action at GroovyBlogs"/>
</p>
<p>
where that Translate link will send you off to Google translate with the "Spanish to English" option. Still not so accurate for some languages (notable portuguese), but that may just be activating the correct rulesets that come bundled with the jar. 
</p>
<p>
Anyways, kudos to the textcat guys for a great little library. Now back to working out how to get portuguese happening... And sorting out my current UTF8 encoding woes...
</p>&#x5d;&#x5d;&gt;</body>
<date>28 Mar 2007 20:41:29:31 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Getting Groovy with Language Translation APIs</title>
<body><![CDATA[Hi Glen!
We really appreciate your effort to integrate content in different languanges in your site. Thank you very much and well done!!

Nacho (groovy.org.es)&#x5d;&#x5d;&gt;</body>
<author>Nacho</author>
<email>nacho@imaginaworks.com</email>
<website>http://groovy.org.es</website>
<ipAddress>84.77.121.64</ipAddress>
<date>29 Mar 2007 08:02:38:294 +0000</date>
<state>approved</state>
</comment>
<comment>
<title>Re: Getting Groovy with Language Translation APIs</title>
<body><![CDATA[Unfortunately Russian language is not supported :(

See: "Groovy documentation linkdump" post
&#x5d;&#x5d;&gt;</body>
<author>Vadim Voituk</author>
<email>voituk@ukr.net</email>
<website>http://voituk.kiev.ua</website>
<ipAddress>62.221.51.6</ipAddress>
<date>29 Mar 2007 10:39:34:727 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2007/04/02/1175555357440.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>The Groovy Spaceship Operator</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've been digging into Groovy in Action lately. I read the .75 review copy, which was extremely cool. The final release of the book included a ton of even cooler stuff!
</p>
<p>
One thing that did appear in the final version was a ton of interesting reference information, including very comprehensive tables in the body of the text. One of the operators I hadn't seen before was the "spaceship operator" <=>. Now I remember this bad boy from my Perl days, but I didn't know Groovy had an equivalent. 
</p>
<p>
So when might you use this guy? Whenever you need to implementing sorting in a hurry, like implementing a compareTo(). The spaceship will return -1 if the left side is smaller, 1 if the left side is greater, and 0 if both sides are equal. Perfect for sorting, no? Seeing it in action makes it clearer...
</p>
<p>
<pre>
println 3 <=> 4
println "glen" <=> "dierk"
def d = new Date()
println d <=> d
println d <=> new Date()
</pre>
Which gives you....
<pre>
-1
1
0
-1
</pre>
</p>
<p>
Turns out that I have an immediate use for it. I'm working on fixing some nasty bugs in my dodgy chart generation code for <a href="http://www.groovyblogs.org">groovyblogs</a>. The good old spaceship is going to make some of my sorts one-liners.
</p>
<p>How groovy is that? Beam me up!
</p>
&#x5d;&#x5d;&gt;</body>
<date>02 Apr 2007 23:09:17:440 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags/>
<comment>
<title>Re: The Groovy Spaceship Operator</title>
<body><![CDATA[The spaceship is invisible... at least in some blog aggregators like Bloglines (I guess all tag-like elements are removed... but a look at your blog revealed the full story. 

Thx, great post.
Cheers\ Sven&#x5d;&#x5d;&gt;</body>
<author>Sven</author>
<email>sven.haiges@googlemail.com</email>
<website>http://www.svenhaiges.de</website>
<ipAddress>82.135.112.66</ipAddress>
<date>03 Apr 2007 14:08:42:752 +0000</date>
<state>approved</state>
</comment>
</blogEntry>

Importing 2007/04/06/1175820250338.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Eclipse Tip: Breakpoint on Exception</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've been starting to read up on <a href="http://wiki.eclipse.org/index.php/Rich_Client_Platform">Eclipse Rich Client Platform</a> programming using the excellent <a href="http://eclipsercp.org/book/">RCP Book</a>. Along the way they've introduced me to a few things I didn't know about Eclipse itself.
</p>
<p>
One of the very cool things that I didn't know about is that Eclipse will let you set breakpoints based on where an Exception occurs. This is going to be a huge timesaver! You access the option via the "j!" icon in the debugging window.
</p>
<p>
<img src="images/2007/BreakpointsWindow.png" alt="Getting to the option via the Breakpoing j! icon"/>
</p>
<p>
And if you click on the "j!" icon on the right you are greeted with the magic dialog:
</p>
<p>
<img src="images/2007/AddExceptionWindow.png" alt="Adding a Breakpoint based on an exception"/>
</p>
<p>
Select the exception type you want to breakpoint on, and you're off and running. You can even choose whether you want to breakpoint on uncaught or caught versions! Very funky stuff.
</p>
<p>
This whole RCP exploration thing is actually looking quite promising. A lot to learn, for sure, but there's some very cool stuff in there. I'm also really looking forward to tinkering with <a href="http://groovy.codehaus.org/Groovy+Monkey">Groovy Monkey</a> to do some RCP prototyping once I have a bit of an idea how RCP apps hang together.
</p>
<p>
Anyways, hope you guys all have a sensational easter! For those of you interested in exploring spirituality over the season, I can recommend <a href="http://c3iglobal.org/default.asp">Christian City Church</a> as one of many great places to hang out over Easter. I'll be in <a href="http://www.cccbelconnen.org.au/">Belconnen</a>.
</p>
<p>
Happy breakpointing!
</p>&#x5d;&#x5d;&gt;</body>
<date>06 Apr 2007 00:44:10:338 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2007/04/17/1176803452458.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Antlr, DSLs and Business Grads....</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Truth be known, I've never really been very interested in Computer Science. My undergrad is in Business, and my postgrad is in IT.  I was busy writing COBOL-80 applications while the Comp Sci guys were building logic gates on patch panels. 
</p>
<p>
For the most part it's put me in good stead career-wise since the things you pickup in those HR, Marketing, and Stats units are actually quite useful in the IT space. But there are a few things you miss out on...
</p>
<p>
One unit I never did get a chance to pick up was Compiler design. I've often eyed off that <a href="http://www.amazon.com/Compilers-Principles-Techniques-Tools-2nd/dp/0321486811/ref=sr_11_1/104-1983223-5011908?ie=UTF8&qid=1176457314&sr=11-1">dragon book</a> and wondered what interesting stuff lurks beneath. I've done a little Flex when I was working as a C systems programmer in the early days, and a ton of Perl regular expressions since, but never really got into hardcore lexer/parser goodness.
</p>
<p>
Turns out that I haven't missed out, as the whole space is getting a little resurgence through the whole Domain Specific Language movement. So I'm catching up some missed knowledge in my spare time while tinkering with <a href="http://www.antlr.org/">Antlr</a>.
</p>
<p>
My first little project is to trying to write a very simple lexer for <a href="http://en.wikipedia.org/wiki/Textile_(markup_language)">Textile</a>. I know, I know. There are already a few <a href="http://philwilson.org/projects/jtextile/">Java</a> <a href="http://sourceforge.net/projects/textile4j">parsers</a> already out there, but it's pretty tricky to get all the combinations of nesting right in regexps, so I'm keen to see how far I could get with a full blown parser. Plus it's mainly a learning exercise (but it will end up in a Grail project on my drawing board somewhere down the track).
</p>
<p>
Antlr is quick a beast. But the documentation is growing and I've found a <a href="http://www.cs.usfca.edu/~parrt/course/652/lectures/antlr.html">couple </a>  <a href="http://javadude.com/articles/antlrtut/">of</a>   <a href="http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required">good </a>  <a href="http://supportweb.cs.bham.ac.uk/docs/tutorials/docsystem/build/tutorials/antlr/antlr.html">articles </a> that have been helpful in getting started. Also turns out that Textile is quite like <a href="http://www.antlr.org/TML/index.tml">TML</a>, so there are some grammars to kickstart things. And <a href="http://www.antlr.org/works/index.html">ANTLRWorks</a> is a very cool little IDE. 
</p>
<p>
It's hard yards... but we'll see how I go...
</p>&#x5d;&#x5d;&gt;</body>
<date>17 Apr 2007 09:50:52:458 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Antlr, DSLs and Business Grads....</title>
<body><![CDATA[ANTLR is one of the coolest things out there you can learn. My primary degree wasn't Comp Sci either, and you are really stuck at a certain level if you've never written a proper parser. 

ANTLR is a bit mind-bending, but it's well worth it.
 &#x5d;&#x5d;&gt;</body>
<author>Richard Rodger</author>
<email>richard@ricebridge.com</email>
<website>http://www.richardrodger.com</website>
<ipAddress>193.1.184.254</ipAddress>
<date>17 Apr 2007 12:22:35:186 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Antlr, DSLs and Business Grads....</title>
<body><![CDATA[I've been working with the "other" java textile libraries and have fought with their incompatibilities enough lately.  I agree that a textile grammar is the *only* way to get completely correct, and would be interested in helping of possible.  a new opensource project would be a great playground.  let me know if your interested in publishing the work you've done!&#x5d;&#x5d;&gt;</body>
<author>Ryan Sonnek</author>
<email>ryan@codecrate.com</email>
<website>http://ryan.codecrate.com</website>
<ipAddress>66.41.105.228</ipAddress>
<date>05 May 2007 21:07:02:19 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1176812555186</parent>
</comment>
<comment>
<title>Re: Antlr, DSLs and Business Grads....</title>
<body><![CDATA[Ryan, I'm very interested. I really haven't made much progress since I've still been struggling with Antlr. Will drop you a line to discuss.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>06 May 2007 20:03:52:706 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1178399222019</parent>
</comment>
<comment>
<title>Re: Antlr, DSLs and Business Grads....</title>
<body><![CDATA[A similar idea,

http://www.plink-search.com/blog.html?fetch=developer&amp;get=PLextile

must do somewhat of a proper parse since it lets you export as PDF and RTF, not just HTML.
&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>74.114.167.92</ipAddress>
<date>30 Jul 2007 17:27:10:278 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/04/27/1177707183592.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Scripting the Milk: Powering Outlook from Groovy</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've always been a TODO list kinda guy and the only product that I've found works well with my PocketPC is Outlook. That's cool when I'm on client sites (since they all run Outlook), except that I'd like to be able to use some other tool when I'm hacking away on my Macbook.
</p>
<p>
Well lately I've been tinkering with <a href="http://www.rememberthemilk.com/">Remember The Milk</a> to see what online TODO managers have to offer. I think RTM is even built by a bunch of Aussies, so it gets extra points. The only thing it doesn't do yet is Outlook integration... But they do offer a pretty comprehensive REST-based <a href="http://www.rememberthemilk.com/services/api/">API</a>. You know where I'm heading with this right? How hard could it be?
</p>
<p>
Ok, so a little bit of XmlSlurper action from Groovy and I'm all set and parsing out my tasks straight from RTM method responses. But how am I going to get to my Outlook tasks? Outlook has got some kinda COM story going on...
</p>
<p>
I've used <a href="http://www.teamdev.com/jniwrapper/index.jsf">JNIWrapper</a> in the past for getting to COM based stuff, and it works just great - but the upgrade prices were starting to hurt, so I checked out <a href="https://com4j.dev.java.net/">com4j</a>.  Very neat little project - and an almost entire replacement for JNIWrapper. Pointed it at my outlook tlb file and voila! Full set of Java classes to match with Outlook... but then I remembered that <a href="http://glaforge.free.fr/weblog/">Guillaume</a> had done some funky Groovy/COM library that he wrote up for Groovy In Action. Grabbed my copy of GINA and checked it out...
</p>
<p>
Enter <a href="http://groovy.codehaus.org/COM+Scripting">Scriptom</a>. This is the COM integration library that I've been looking for. No need to generate any classes, just give it a COM object and start calling methods. Takes advantage of Groovy dynamic typing goodness to make it all very easy.
</p>
<p>Need to get to your Outlook tasks? Howse about something like:
</p>
<p>
<pre style="border: 1px solid black; padding: 1em;">
import org.codehaus.groovy.scriptom.ActiveXProxy

def outlook = new ActiveXProxy("Outlook.Application")
def namespace = outlook.GetNamespace("MAPI") 

def taskFolder = namespace.GetDefaultFolder(13) // tasks
def tasks = taskFolder.Items

for (i in 1..tasks.Count.value) {
	def task = tasks.Item(i)
	if (task.Complete.value == false) {
		println task.Subject.value
	}
}

</pre>
</p>
<p>
Sensational. I'm now in a position where I can get my list of Outlook tasks, and my RTM tasks... now the tricky bit around doing the merge. Both support a "last modified" attribute, so it should be ok to handle the actual time mods, but I'm still not sure how I'm going to handle task renames? I guess I'll need to tag the RTM entries with an Outlook task id... That could get interesting...
</p>

<p>
Anways, double thumbs up to Scriptom. Guilluame has done some sensational stuff there. Will post some more when I've got something working...
</p>&#x5d;&#x5d;&gt;</body>
<date>27 Apr 2007 20:53:03:592 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2007/05/10/1178757148338.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Getting Groovy with Hudson and Cobertura</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Gave a talk last night at our local Canberra <a href="http://www.cjugaustralia.org">JUG</a> on using <a href="https://hudson.dev.java.net/">Hudson</a> for continuous integration. (Brief <a href="http://www.cjugaustralia.org/slides/may2007/BetterBuildsWithHudson.pdf">slides</a> available, but it was mostly a "demo" style talk... so not much to show)
</p>
<p>
But to spice it up a little, I used my latest little Groovy project as the demo. I was reading in Groovy in Action about the support Groovy Unit tests have for both IDE integration and coverage tools, so I thought I'd throw that into the mix. Using JUnit from Eclipse works just great...
</p>
<p>
<img src="images/2007/GroovyJUnit.png" alt="Groovy with JUnit in Eclipse"/>
</p>
<p>
I did have some problems getting my tests running from Ant, getting an error like: 
<pre>
groovyc doesn't support the "srcdir" attribute
</pre>
Which turns out to mean that I'd defined my groovyc task incorrectly. It needed to be:
<pre>
&lt;taskdef name="groovyc" 
    classname="org.codehaus.groovy.ant.Groovyc" 
    classpathref="useful.jars"/&gt;
</pre>
</p>
<p>
One thing I have been wanting to try out is <a href="http://cobertura.sourceforge.net/">Cobertura</a> support for Groovy. Turns out to be a snack. The only gotcha is that you must set <code>fork="true"</code> on your JUnit task. If you don't, all your coverage reports will appear blank (ie with 0% coverage).
</p>
<p>
<img src="images/2007/GroovyCobertura.png" alt="Groovy Cobertura in Action"/>
</p>

<p>
If you haven't tinkered with Hudson before... it's definitely time. Everything is configured via the browser, no XML to tinker with, and a it has a great Ajaxy UI. 
</p>
<p>
I wasn't aware that there is now also an <a href="http://braindump.dk/tech/2007/05/03/eclipse-plugin-for-hudson/">Eclipse plugin</a> for Hudson which can poll your build machine every so often and give you an update on the status of things. Very funky.
</p>
<p>
<img src="images/2007/HudsonPlugin.png" alt="Hudson Plugin for Eclipse"/>
</p>
<p>
It was a really fun talk, and people were pretty impressed with how far Hudson has come in such a short time. Interestingly, only a third of the group was doing CI right now, so it was pretty cool to be able to demo to them the  "lunch-time-ability" of getting Hudson installed and configured.
</p>
<p>
Big props to the Hudson guys... and the Cobertura guys... and, of course, the Groovy guys! Very cool stuff!
</p>&#x5d;&#x5d;&gt;</body>
<date>10 May 2007 00:32:28:338 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Getting Groovy with Hudson and Cobertura</title>
<body><![CDATA[Glen, neat stuff. Have you seen the upcoming CI/testing conference in July in Syndey:
http://www.citconf.com/sydney2007/
I am hoping to be there.

Paul.
&#x5d;&#x5d;&gt;</body>
<author>Paul King</author>
<email>paulk@asert.com.au</email>
<website/>
<ipAddress>60.231.116.202</ipAddress>
<date>10 May 2007 12:19:23:502 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Getting Groovy with Hudson and Cobertura</title>
<body><![CDATA[Looks like a great conference, Paul. Look forward to tracking the conference wiki to see what interesting developments comes out of the openspace format!&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>10 May 2007 19:08:55:350 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1178799563502</parent>
</comment>
<comment>
<title>Re: Getting Groovy with Hudson and Cobertura</title>
<body><![CDATA[Small world!  I decided to use your CSV library in my Hudson plot plugin ( https://hudson.dev.java.net/issues/show_bug.cgi?id=219 ), then I came across your Hudson blog entry.&#x5d;&#x5d;&gt;</body>
<author>Nigel</author>
<email>nigelqa@mac.com</email>
<website/>
<ipAddress>216.145.49.15</ipAddress>
<date>13 May 2007 00:08:31:984 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Getting Groovy with Hudson and Cobertura</title>
<body><![CDATA[Great stuff. Love the Open Source ecosystem!&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>13 May 2007 08:41:26:502 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1179014911984</parent>
</comment>
<comment>
<title>Re: Getting Groovy with Hudson and Cobertura</title>
<body><![CDATA[Hi Glen, 
I know you from some posts about Grails :-) Have you tried to use Hudson with a Grails app? If just seen that there is a Gant Plugin, that could work for integration: http://hudson.gotdns.com/wiki/display/HUDSON/Gant+Plugin 
 

Cheers
Mark
&#x5d;&#x5d;&gt;</body>
<author>Mark</author>
<email>markrambow@gmail.com</email>
<website/>
<ipAddress>86.56.31.61</ipAddress>
<date>31 Jul 2007 21:14:11:101 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Getting Groovy with Hudson and Cobertura</title>
<body><![CDATA[No Mark, I haven't. But there's rumours that a future Grails release will have its own CI system build it!
<p>
I've heard a few guys on the list have CruiseControl working, but I haven't heard of any Hudson examples... yet... :-)&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>01 Aug 2007 02:40:58:972 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1185916451101</parent>
</comment>
</blogEntry>

Importing 2007/05/30/1180556726017.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>A First Look at GroovySWT</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I've been working on my little app to Sync Outlook to <a href="http://rememberthemilk.com/">Remember The Milk</a> and having a great time learning <a href="http://groovy.codehaus.org/GroovySWT">GroovySWT</a> along the way. GroovySWT offers a SwtBuilder and JFaceBuilder (simple DSL) for putting together SWT/JFace applications. Now I'm a huge fan of both SWT and JFace, so I was very keen to see what GroovySWT could let me do from straight groovy code. 
</p>
<p>
It's very early days for the GUI, but I've thrown together some scratchy ideas using the <a href="http://tango.freedesktop.org/Tango_Icon_Gallery">Tango Icon Library</a> to get a basic interface underway.
</p>
<p>
<img src="images/2007/SyncTheMilkSWT.png" alt="SyncTheMilk in action on OSX"/>
</p>
<p>
I still think the ideal way to build GUIs is with a tool. Even with the sensational DSLs that SwingBuilder and SwtBuilder give you, nothing beats dragging and dropping stuff around (personal fave is <a href="http://www.swt-designer.com/">SWT Designer</a>, which is unbelievably good - FD: I managed to get a free copy from the early days).
</p>
<p>
But if your GUI is very simple (like the one shown above), it really does seems a shame not to be able to throw something together really quickly using straight groovy, and GroovySWT gives you that in spades. How about a little Preferences dialog for your app which automatically persists user entries to a .properties file?
</p>
<p>
<img src="images/2007/SyncTheMilkPrefs.png" alt="An SWT Preferences dialog"/>
</p>
<p>
<pre style="border: 1px solid black; padding: 3px">
preferenceDialog() {
			
    preferencePage( title:"Proxy Settings", filename:"syncthemilk.properties" ) {
        booleanFieldEditor( propertyName:"proxyEnabled", title:"Enable Proxy" )
        stringFieldEditor( propertyName:"proxyHost", title:"Proxy Host" )
        integerFieldEditor( propertyName:"proxyPort", title:"Proxy Port" )					
    } 		
				
    preferencePage( title:"RTM Settings", filename:"syncthemilk.properties" ) {
        stringFieldEditor( propertyName:"rtmToken", title:"RTM Token" )
    } 
}
</pre>
</p>
<p>
I've found a few little bugs in the current groovy-swt source which I'll bundle up in a patch and submit once I have the full GUI for my app done. That should let me exercise a good part of the library. 
</p>
<p>
The only major shortcoming I've found so far is there is virtually no documentation. There are, however, a ton of good examples that demonstrate many of the cool and interesting parts of the library (including tray integration, properties dialogs, wizards, and more).
I'll update the Groovy wiki with some new info once I've had a chance to get my own GUI done.
</p>
<p>
Huge props to Christiaan ten Klooster for all the fantastic work he has put into GroovySWT. Really a first class effort.
</p>&#x5d;&#x5d;&gt;</body>
<date>30 May 2007 20:25:26:17 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: A First Look at GroovySWT</title>
<body><![CDATA[Hi,

It's my first time to hear about swt &amp; jface. May I know your preferences why not swing?&#x5d;&#x5d;&gt;</body>
<author>James</author>
<email>james_027@yahoo.com</email>
<website>http://james-says.blogspot.com</website>
<ipAddress>125.5.144.166</ipAddress>
<date>31 May 2007 01:05:23:508 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: A First Look at GroovySWT</title>
<body><![CDATA[<p>
Hi James, that actually giant religious war that everyone has pretty much settled their place on one way or the other. Older blog entry <a href="http://blogs.bytecode.com.au/glen/2005/02/12/1108169609271.html">here</a>.
</p>
<p>
For me it's just about a much simpler API and genuine native components on every platform (both look and functionality). Both are just a matter of developer preference. 
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.13.2.142</ipAddress>
<date>31 May 2007 02:35:23:942 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1180573523508</parent>
</comment>
<comment>
<title>Re: A First Look at GroovySWT</title>
<body><![CDATA[I'd agree that I'd prefer to use a tool to build the GUI - it can save so much time and makes modifications much easier. The option of the Groovy builders is fantastic though.
<p>
I worked on a significant RCP and we used the Visual Editor successfully (but it was a *little* flakey). Unfortunately this project seems to be <a href="http://www.coconut-palm-software.com/the_visual_editor/?p=107">abandoned </a>
</p><p>
For pure Swing development (I'm a big fan on just having one binary for all platforms) NetBeans has a good <a href="http://www.netbeans.org/kb/trails/matisse.html">GUI builder</a> (formerly known as Matisse).
</p><p>
I haven't done anything serious with NetBeans yet, but I want to try using it for building the GUI components  and I'll probably stay with eclipse for the rest of the application. 
</p><p>
<a href="http://cld.blog-city.com/netbeans_matisse_versus_eclipses_visual_editor__no_contest.htm">Comparison </a>between Visual Editor and Matisse 
</p>
&#x5d;&#x5d;&gt;</body>
<author>Paul</author>
<email>paul@javathinking.com</email>
<website>http://www.javathinking.com</website>
<ipAddress>203.185.215.144</ipAddress>
<date>01 Jun 2007 00:19:20:148 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: A First Look at GroovySWT</title>
<body><![CDATA[I'm great to see this. I'm a beginner to groovy and swt, i guest "groovyswt" will save me a lot of time to build a gui app.

But it seems that I need to install maven first to make the groovyswt samples ran, is there a standalone package to run the samples?&#x5d;&#x5d;&gt;</body>
<author>flyisland</author>
<email>flyisland@gmail.com</email>
<website></website>
<ipAddress>203.222.183.3</ipAddress>
<date>06 Jun 2007 09:06:20:473 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: A First Look at GroovySWT</title>
<body><![CDATA[<p>Hi. I just imported the project into Eclipse, and grabbed the few jars I needed from my Eclipse plugins directory. Happy to send you my .classpath file if it helps?
</p>
<p>
I've been learning Maven lately, so I'll try and see what's going on with the pom when I get a few minutes.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>06 Jun 2007 21:14:10:349 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1181120780473</parent>
</comment>
<comment>
<title>Re: A First Look at GroovySWT</title>
<body><![CDATA[hi Glen, it certainly helps if I got the .classpath file from you, thanks!

my email address is [flyisland AT gmail DOT com].&#x5d;&#x5d;&gt;</body>
<author>flyisland</author>
<email>flyisland@gmail.com</email>
<website></website>
<ipAddress>203.222.183.3</ipAddress>
<date>07 Jun 2007 03:52:09:142 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
<parent>1181164450349</parent>
</comment>
<comment>
<title>Status of GroovySWT project?</title>
<body><![CDATA[Hi Glen,

Looking at fisheye http://svn.groovy.codehaus.org/browse/groovy/trunk/groovy/modules

It seems the last update to GroovySWT was back in the Aug 2006 :(

http://docs.codehaus.org/display/GROOVY/GroovySWT
Was last updated in Nov 2006 :(

Did you patch and submit your changes?
If so, where can I find it? or do you have a patched version lying around...?

I would very much like to use the latest GroovySWT and perhaps enhance it... for use with Eclipse 3.3x :)

Please advice me!

Kristian&#x5d;&#x5d;&gt;</body>
<author>Kristian Mandrup</author>
<email>kristian@mandrup.dk</email>
<website></website>
<ipAddress>85.81.78.132</ipAddress>
<date>01 Nov 2007 22:07:33:432 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Status of GroovySWT project?</title>
<body><![CDATA[<p>
Kristian, I never did submit any patches... but I think all I updated was the test cases anyway. Will have a hunt around and get back to you.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>09 Nov 2007 18:08:29:342 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1193954853432</parent>
</comment>
</blogEntry>

Importing 2007/06/04/1180956239282.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Setting up a WebDAV Server on Glassfish</title>
<subtitle>or whatever other app server you're into</subtitle>
<excerpt/>
<body><![CDATA[<p>
I've always wanted to have a tinker with WebDAV, but never really had a good excuse to have a look at it. Since I've had to get up to speed with Maven, I've finally had a reason to get a WebDAV server happening locally for a few developers to share a repository. Turns out that running a WebDAV server on Glassfish (or whatever app server you like) is a snack thanks to the good folk at the <a href="http://webdav-servlet.sourceforge.net/">WebDAV-Servlet</a> project.
</p>
<p>
Here's the steps you need to know:
<ol>
<li> Head on over to the <a href="http://sourceforge.net/project/showfiles.php?group_id=156737">downloads</a> page and grab the .war edition</li>
<li>Unjar the war file and edit /WEB-INF/web.xml. Change the "rootpath" parameter to point to a place on your webserver filesystem where you want to store you WebDAV'd files (eg /data/webdav)</li>
<li>Rejar the war and deploy</li>
<li>Point your fave webdav client at your new site</li>
</ol>

</p>
<p>
IE works just fine as a WebDAV client if you just want to browse a repository. Select /File/Open... tick the "Open as Web Folder" setting and point it at your freshly installed WebDAV URL. 
</p>
<p>
<img src="images/2007/WebDavInIEOpen.png" alt="Opening a WebFolder WebDAV URL in IE6"/>
</p>
<p>
Once things fire up, you can happily drag and drop to and from the web folder. Works great!
</p>
<p>
<img src="images/2007/WebDavInIEDisplay.png" alt="Browsing a WebFolder WebDAV URL in IE6"/>
</p>
<p>
Now I'm doing all this on a small intranet, so my security concerns are pretty low... I would be thinking twice before I installed this sort of stuff on my public facing boxes. But very handy for an internal shared Maven repository...
</p>
<p>
Props to the WebDAV servlet folks for a very cool little app!
</p>&#x5d;&#x5d;&gt;</body>
<date>04 Jun 2007 11:23:59:282 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Setting up a WebDAV Server on Glassfish</title>
<body><![CDATA[Hi Glen,

FYI GlassFish as support for WEBDAV by default as well [1]. Tomcat as the same support :-). But this SourceForge project works probably better and portable. Thanks for the blog!

-- Jeanfrancois

[1] http://weblogs.java.net/blog/jfarcand/archive/2006/03/enabling_webdav_1.html&#x5d;&#x5d;&gt;</body>
<author>Jeanfrancois Arcand</author>
<email>jeanfrancois.arcand@sun.com</email>
<website/>
<ipAddress>66.131.225.3</ipAddress>
<date>06 Jun 2007 14:51:17:380 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/06/15/1181877617712.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Upgrade to Glassfish 2, slash your bandwidth usage by half</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I'm a couple of days into making the switch from Glassfish v1 UR1 to Glassfish v2 beta-2 and I've gotta say that, even at beta level, this is a compelling upgrade.
</p>
<p>
There are tons of improvements in v2 (including first class clustering support), but there were two compelling features for me personally in v2 to make me move over to the new beta:
</p>
<ul>
<li>Http Compression Support</li>
<li>Much improved Virtual Domain support</li>
</ul>
<p>
The Http Compression support was a big step up. Tomcat users have had this for a while, but it was only introduced to Glassfish in v2. <a href="http://weblogs.java.net/blog/jfarcand/archive/2006/06/enabling_http_c_1.html">Jean-Francois </a> has documented this ages ago, and you can do it all via the GUI in beta 2 (just put in "compression" equals "on" in the properties of your http-listener-1 page). This has been a killer for me as I creep closer and closer to my ADSL allowance. Check this out:
</p>
<p>
<img src="images/2007/GlassfishCompression.png" alt="Graph showing compression effectiveness" style="border: 1px solid black; margin: 5px"/>
</p>
<p>
The first two days were before enabling compression (and are representative of my standard traffic profile) at just under 400Mb/day, the next two days are once I turned on compression - just under 200Mb/day. Awesome! My traffic cut in half! If I tune the default compressibleMimeTypes I might even be able to improve on that!
</p>
<p>
The other killer feature for me in v2 is much improved Virtual Domain management. I host about 5 different domains on my current server and I had all sorts of issues with default apps on virtual servers under v1.0. I would often get my "default application" for a particular server starting up twice - which led to all sort of dramas (hibernate concurrency issues, excess memory usage, etc). All that has gone away under V2.0 - and I can see from the logs everything is just starting up once! Under v2, I can also bind multiple apps to the "/" context - since they each run on different virtual servers. Awesome!
</p>
<p>
One thing I have also noticed in V2 is *much* snappier performance on both startup and render times. All my Grails apps continue to run just fine - and I took the opportunity to move to <a href="http://www.grails.org">Grails 0.5</a> which is also much faster to startup. 
</p>
<p>The only real gotcha was the need to enable access logs (which are turned off by default), and needing to <a href="http://blogs.bytecode.com.au/glen/2006/11/14/1163471354835.html">tune my log format</a>, but once that was done my awstats continued working just fine. Also need to add -Djava.awt.headless=true to my JVM params to keep my charting stuff working happily.
</p>
<p>
Big props to the Glassfish guys. They've done an awesome job with this upgrade. 
</p>

&#x5d;&#x5d;&gt;</body>
<date>15 Jun 2007 03:20:17:712 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Upgrade to Glassfish 2, slash your bandwidth usage by half</title>
<body><![CDATA[Why couldn't you have rolled your own?  Jason Hunter wrote a servlet filter that does the same thing...like in 2001.  It was 20 to 30 LOC I think&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>212.188.161.8</ipAddress>
<date>15 Jun 2007 13:24:54:499 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Upgrade to Glassfish 2, slash your bandwidth usage by half</title>
<body><![CDATA[<p>
I guess you could do that. But wouldn't you then have to add that filter to every app you deploy on your appserver (both your own and third party)? Sounds like a fair bit of work to me...
</p>
<p>When it's supported at the appserver level, I'm turning it on automatically for everything that's generating content of type text/html, text/xml, etc. in a non-intrusive way. So it's pretty darn convenient.
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>15 Jun 2007 20:20:43:997 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1181913894499</parent>
</comment>
<comment>
<title>Re: Upgrade to Glassfish 2, slash your bandwidth usage by half</title>
<body><![CDATA[15 minutes or less to write it...and another 10 to 15 to deploy.  to deploy you just have to apply to add to your .war(s) and modify web.xml

applying the filter against 3rd party apps would be the same.

I think it's a good thing that Glassfish has incorporated, but I wouldn't upgrade my appserver to a beta as opposed to rolling out the servlet filter.&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email/>
<website/>
<ipAddress>212.188.161.8</ipAddress>
<date>18 Jun 2007 10:06:40:421 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/06/20/1182310542559.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Less is More: Migrating from Grails 0.2 to 0.5.6</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
My very first grails app was a simple SMS gateway called <a href="http://www.cyathen.com">CyaThen.com</a>. It was mostly developed on Grails 0.1 and then later migrated to 0.2 beta before the go live in <a href="http://blogs.bytecode.com.au/glen/2006/08/04/1154638800000.html">August 2006</a> . It's proved very useful for SMSing workmates to remember their squash gear.
</p>
<p>
Anyways, I did a rebuild on the app with Grails 0.4.2 so I could deploy it to Glassfish, but it was pretty unchanged from it's 0.1 Grails glory. I've recently been updating it to 0.5.6 and uncovered some Gems from the "good ol' days"...
</p>
<p>Don't you remember when every GORM class need hibernate ids embedded...
</p>
<pre style="border: 1px solid black; padding: 1em; ">
Long id
Long version
</pre>
<p>
Back then, men were men, and there was one and only one ApplicationDataSource and log4j.properties
</p>
<p>
Back in the old days, if you wanted to def a taglib, you wanted to let the world know with an @Property
</p>
<pre style="border: 1px solid black; padding: 1em; ">
@Property welcome = { attrs ->
...
}
</pre>
</p>
<p>
All the standard taglibs have been banished to plugins now anyways. And who could forget the best friend of every Domain class was a nice hashCode()... and equals()... and toString()...
</p>
<pre style="border: 1px solid black; padding: 1em; ">
String toString() { "${this.class.name} :  $id" }
	
	boolean equals(other) {
		if(other?.is(this))return true
		if(!(other instanceof Account)) return false
		
		if(!id || !other?.id || id!=other?.id) return false
		
		return true
	}
	
	int hashCode() {
		int hashCode = 0
		hashCode = 29 * (hashCode + ( !id ? 0 : id ^ (id >>> 32) ) )
	}
</pre>

<p>
Now I've just got to work at transforming my optionals to nullable constraints and I'll be there...
</p>
<p>
And through all those releases my original PostgreSQL database has just kept on trucking without a line of SQL from my hands.
</p>
<p>Props to Graham and the boys in how far they've come in 10 months. That's right, <b>10 months</b> (And for how forgiving they've been about preserving compatibility through all those releases). My 0.5.6 codebase will be significantly smaller and more meaningful for their efforts.  
</p>&#x5d;&#x5d;&gt;</body>
<date>20 Jun 2007 03:35:42:559 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags/>
<comment>
<title>Re: Less is More: Migrating from Grails 0.2 to 0.5.6</title>
<body><![CDATA[That's a cool web app you've done! How did you get grails to communicate with sms protocol(am I using the right terminology?)?&#x5d;&#x5d;&gt;</body>
<author>james</author>
<email>james_027@yahoo.com</email>
<website>http://james-says.blogspot.com</website>
<ipAddress>125.5.144.166</ipAddress>
<date>20 Jun 2007 06:15:49:927 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Less is More: Migrating from Grails 0.2 to 0.5.6</title>
<body><![CDATA[XML over HTTP, but there's a <a href="http://www.clickatell.com/products/sms_gateway.php">ton of options</a>. There's a great reseller (<a href="http://www.clickatell.com/">Clickatell</a>) in South Africa that has very cheap world coverage and a fantastic API.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.13.2.142</ipAddress>
<date>20 Jun 2007 07:07:15:446 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1182320149927</parent>
</comment>
</blogEntry>

Importing 2007/06/25/1182741843504.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Transparently Feedburning Pebble with UrlRewriteFilter</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've been looking for a chance to play with <a href="http://tuckey.org/urlrewrite/manual/3.0/">UrlRewriteFilter</a> for a while.. and I've finally found my opportunity.
</p>
<p>
A <a href="http://blogs.asman-it.com.au/dasman/">colleague</a> has been talking up <a href="http://www.feedburner.com/">FeedBurner</a> as a very swish feed stats crunching and decoration site, so I was keen to take it for a spin. I was asking how to handle the fact that you would need all your clients to add the new feed address? He mentioned that WordPress can do this with a simple plugin, so I figured I could get Pebble to work the same magic. 
</p>
<p>
Enter UrlRewriteFilter. Catch the old feed address, send a redirect to the FeedBurner address, voila.
</p>
<p>
Deploying UrlRewriteFilter is a snap. Copy the jar file to your /WEB-INF/lib/ directory, copy a urlwrite.xml to your /WEB-INF/ directory, then hack web.xml to enable the filter. If you're doing this for Pebble, insert the following entries after the jsp-config section of your web.xml:
</p>
<p>
<pre style="border:1px solid black; margin: 1em;">
  
   &lt;filter&gt;
        &lt;filter-name&gt;UrlRewriteFilter&lt;/filter-name&gt;
        &lt;filter-class&gt;org.tuckey.web.filters.urlrewrite.UrlRewriteFilter&lt;/filter-class&gt;
        &lt;init-param&gt;
            &lt;param-name>confReloadCheckInterval&lt;/param-name&gt;
            &lt;param-value>3600&lt;/param-value&gt;
        &lt;/init-param&gt;
    &lt;/filter&gt;

</pre>
</p>
<p>
Probably don't need the added "reload every hour" parameter unless you plan on messing with your config. I had it reloading its config file every few seconds when I was messing with pattern matching. 
</p>
<p>
Now to the pattern matching part of the equation. I needed to match a pattern of <code>/glen/rss.xml</code> or <code>/glen/atom.xml</code> and send the user off to <code>http://feeds.feedburner.com/glensmith</code>, but the trick was that I needed to exclude all my category specific feeds in <code>/glen/categories/General/rss.xml</code>. Oh, and I also need to let a User-Agent containing the text "FeedBurner" through to the real feed, while redirecting everyone else. Turns out all that's supported out of the box. Here's my urlrewrite.xml:
</p>

<pre style="border:1px solid black; margin: 1em;">

&lt;rule&gt;
        &lt;note&gt;
            Redirect Root RSS/Atom feed to feedburner
        &lt;/note&gt;
        
        &lt;condition name="user-agent" operator="notequal"&gt;FeedBurner&lt;/condition&gt;
        &lt;condition type="request-uri" operator="notequal"&gt;categories&lt;/condition&gt; 
        &lt;condition type="request-uri" operator="equal"&gt;glen&lt;/condition&gt; 
        &lt;from&gt;.xml$&lt;/from&gt;
        &lt;set type="response-header" name="Location"&gt;http://feeds.feedburner.com/glensmith</set>
        &lt;set type="response-header" name="Pragma"&gt;no-cache&lt;/set&gt;
        &lt;set type="response-header" name="Content-Length"&gt;0&lt;/set&gt;
        &lt;set type="status"&gt;307&lt;/set&gt;
    &lt;/rule&gt;

</pre>
</p>
<p>
Fantastic. I'm now transparently redirecting clients to the new location, and with those pragma settings, I'm able to switch everything off in a flash. And it's a ton more configurable than any ServletFilter that I could have whipped up for the task.
</p>
<p>
Great stuff UrlRewriteFilter folk!
</p>&#x5d;&#x5d;&gt;</body>
<date>25 Jun 2007 03:24:03:504 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2007/06/27/1182913083818.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Cuteness with Commons-Http: proxies and user-agents</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've been wanting to add a custom User-Agent to <a href="http://www.groovyblogs.org">groovyblogs.org</a> for a while, so you know from your logs when I'm coming by to poll. It's not easy to find sample code on this one, but the API does cover it just fine:
</p>
<p>
<pre style="border: 1px solid black; padding: 1em">
def client = new HttpClient()

def clientParams = client.getParams()
clientParams.setParameter(
    org.apache.commons.httpclient.params.HttpClientParams.USER_AGENT,
    "GroovyBlogs/1.0 (http://www.groovyblogs.org)")	
</pre>	
</p>
<p>
If you need to enable your client for proxy support too, you'll need to add a couple of more lines:
</p>
<p>
<pre style="border: 1px solid black; padding: 1em">
def hostConfig = client.getHostConfiguration()
hostConfig.setProxy("yourhost", 8080)	
</pre>	
</p>
<p>
If it's only proxy access you need, and you don't need to mess with custom user agents or POSTed params, then I've found the simple URL class with some groovy enhancements is all I need: (just love that <code>text</code> property!)
</p>
<p>
<pre style="border: 1px solid black; padding: 1em">
System.properties["http.proxyHost"] = "yourhost";
System.properties["http.proxyPort"] = "8080";

def url = new URL("http://www.groovyblogs.org/")
println url.text
</pre>
</p>
<p>
Happy proxying with your new User-Agent!
</p>&#x5d;&#x5d;&gt;</body>
<date>27 Jun 2007 02:58:03:818 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
</blogEntry>

Importing 2007/07/31/1185848298395.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>opencsv 1.8 ships - now with Bean binding</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
For reasons I'll never understand, my little Apache2 open source CSV parser, <a href="http://opencsv.sourceforge.net/">opencsv</a> has recently trucked through the 20,000 download mark. 
</p>
<p>
Thanks to some wonderful work from Kyle Miller, I've just shipped version 1.8 which includes Kyle's neat little Bean binding framework. Using one of Kyle's various binding strategies (column position, column name, custom strategy), you can now bind a CSV file to a list of beans:
</p>
<pre>
      ColumnPositionMappingStrategy strat = new ColumnPositionMappingStrategy();
      strat.setType(YourOrderBean.class);
      String[] columns = new String[] {"name", "orderNumber", "id"}; 
      strat.setColumnMapping(columns);

      CsvToBean csv = new CsvToBean();
      List list = csv.parse(strat, yourReader);
</pre>
<p>
Great stuff, Kyle! 
</p>
<p>
You can grab the new version from the <a href="http://sourceforge.net/project/showfiles.php?group_id=148905&package_id=164539">download page</a>, or checkout the <a href="http://opencsv.sourceforge.net/api/index.html">javadoc</a>, or see some <a href="http://opencsv.sourceforge.net/">sample usage</a> scenarios.
</p>
<p>
Enjoy!
</p>&#x5d;&#x5d;&gt;</body>
<date>31 Jul 2007 02:18:18:395 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags/>
<comment>
<title>Re: opencsv 1.8 ships - now with Bean binding</title>
<body><![CDATA[interesting project, I'm new to the csv, sorry if I asked stupid question, Can I use csv as a lightweight db? I guess it support parser, but is it support update the line, delete the line?&#x5d;&#x5d;&gt;</body>
<author>mmao</author>
<email>maomaode@gmail.com</email>
<website>http://maomaode.bokeland.com</website>
<ipAddress>124.17.14.193</ipAddress>
<date>21 Aug 2007 03:33:43:102 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>How to binding the csv some columns with opencsv 1.8</title>
<body><![CDATA[How to bind some column in the csv file, how to specify the column position?

Thanks in advance!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>stonebox2007@gmail.com</email>
<website/>
<ipAddress>218.1.138.120</ipAddress>
<date>05 Sep 2007 12:50:57:406 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>How to binding the csv some columns with opencsv 1.8</title>
<body><![CDATA[Check out the <a href="http://opencsv.sourceforge.net/api/au/com/bytecode/opencsv/bean/ColumnPositionMappingStrategy.html">ColumnPositionMappingStrategy</a>... just what you're after.

&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>05 Sep 2007 18:45:45:747 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1188996657406</parent>
</comment>
<comment>
<title>Re: opencsv 1.8 ships - now with Bean binding</title>
<body><![CDATA[Great addition.  Any thoughts on a BeanToCSV writer?&#x5d;&#x5d;&gt;</body>
<author>Li</author>
<email>yoliho@gmail.com</email>
<website/>
<ipAddress>76.21.204.167</ipAddress>
<date>13 Sep 2007 15:50:55:320 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/08/06/1186444211733.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>SyncTheMilk: Business logic in Groovy, UI in Java</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I'm getting close to my first release of SyncTheMilk, my little Outlook and <a href="http://www.rememberthemilk.com/">RememberTheMilk</a> task synchronisation tool. Most of the business logic is done, and I'm starting work on the UI makeover right now.
</p>
<p>
One of the interesting features of the app is that while the UI is written completely in Java, and all of the core business logic is in Groovy. 
</p>
<p>
<img src="images/2007/SyncTheMilk.png" alt="SyncTheMilk in progress GUI makeover"/>
</p>
<p>
One of the things that I truly love about the Groovy community is that we are, on the whole, a bunch of pragmatists. We're mostly practitioners. We use Groovy where is makes sense, and makes our life simpler,  and drop back to Java when it doesn't. 
</p>
<p>
For SyncTheMilk, the business logic does tons of xml/http to the RTM API service (<a href="http://groovy.codehaus.org/Reading+XML+using+Groovy%27s+XmlSlurper">XmlSlurper</a> rocks so hard!), a little bit of Crypto, lot of work with the Outlook COM model (via <a href="http://groovy.codehaus.org/COM+Scripting">Scriptom</a>), and has pluggable Sync drivers, so I should, in theory, be able to Sync RememberTheMilk to just about anything!
</p>
<p>
Groovy makes all of those things simple, so it made sense to write all of the Business Logic in Groovy. But when it came to the UI, I've found I'm much more productive with some sort of visual designer, so <a href="http://www.swt-designer.com/">SWT Designer</a> just made so much sense. (FD: I have a free copy, it's not cheap but it is just amazing)
</p>
<p>
Anyways, will have something to show in a couple of weeks. Planning on a free version and a pro version to raise a little money for charity. Not sure if there are other Commercial Groovy desktop apps out there... Should be an interesting experiment!
</p>&#x5d;&#x5d;&gt;</body>
<date>06 Aug 2007 23:50:11:733 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[Are you able to let me know when this is ready to try, please:  rhirsch at smss dot com

Thanks!&#x5d;&#x5d;&gt;</body>
<author>Richard Hirsch</author>
<email>rhirsch@smss.com</email>
<website>http://smss.com</website>
<ipAddress>216.83.13.105</ipAddress>
<date>12 Aug 2007 21:40:37:643 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[Will do. &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.13.2.142</ipAddress>
<date>12 Aug 2007 22:58:07:855 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1186954837643</parent>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[Awesome to see this idea.

Keep me posted arvid(at)oetzitterd.nl even whilling to be a beta-tester and to pay afterwards for the app!&#x5d;&#x5d;&gt;</body>
<author>Arvid</author>
<email>arvid@oetzitterd.nl</email>
<website>http://www.oetzitterd.nl</website>
<ipAddress>15.203.137.76</ipAddress>
<date>23 Aug 2007 10:52:07:113 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[Glenn... I cant wait to get my hands on this!  Thanks in Advance&#x5d;&#x5d;&gt;</body>
<author>Stew</author>
<email></email>
<website></website>
<ipAddress>24.172.113.75</ipAddress>
<date>23 Aug 2007 20:04:59:138 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[add me to your beta list also, please!!

revjscox(at)yahoo(dot)com&#x5d;&#x5d;&gt;</body>
<author>Jeffery Cox</author>
<email></email>
<website></website>
<ipAddress>70.129.190.112</ipAddress>
<date>25 Aug 2007 05:10:51:81 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[Please also add me to your beta tester list!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>deekod@gmail.com</email>
<website></website>
<ipAddress>62.31.132.253</ipAddress>
<date>28 Aug 2007 21:22:59:398 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[Thanks for your intereste guys. I'm working toward a new version for next week. Will keep you all posted. It's not quite "beta" yet... I'm calling it "early access" for now...&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>29 Aug 2007 02:00:04:487 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[Please sign me up! Thanks for doing this!&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>philiptoews@gmail.com</email>
<website></website>
<ipAddress>195.229.236.216</ipAddress>
<date>30 Aug 2007 21:30:20:856 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[count me in too as a beta tester.  i've been looking for this for ages beacause i am a linux user at home and a windoze user at work.

thank you in advance for your efforts

darren&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email>goddarddarren@gmail.com</email>
<website></website>
<ipAddress>82.198.250.9</ipAddress>
<date>05 Sep 2007 11:54:58:148 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[I would be more than happy to "early access" test as well. I am on Outlook 2007 on Vista Ultimate.  This is, without doubt, something I have been waiting to see someone tackle (I would have but I don't have an appropriate skill set).

As an aside, have you considered syncing the various lists, or tags in RTM to Categories in Outlook?&#x5d;&#x5d;&gt;</body>
<author>Chad Jackson</author>
<email>ChadAlanJackson@gmail.com</email>
<website>http://www.ChadAlanJackson.com</website>
<ipAddress>65.60.190.172</ipAddress>
<date>16 Sep 2007 14:56:01:382 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[For sure! That's supported in the current version. You can mark which lists should get synced from RTM and they'll be come categories on the Outlook side. &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>16 Sep 2007 20:04:53:542 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1189954561382</parent>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[Hi Guys, RTM have now released their own Sync client, so you can now download a copy of <a href="http://www.rememberthemilk.com/services/milksync/">MilkSync</a> from there. Obviously, I'm stopping work on SyncTheMilk since RTM now have their own solution. Thanks for your support, it was fun to work on! &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.9</ipAddress>
<date>19 Sep 2007 20:38:27:431 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[My understanding is that MilkSync is for Windows Mobile only.  Have you resumed development on your app that works with Outlook 2003?&#x5d;&#x5d;&gt;</body>
<author>Chris Engel</author>
<email>chris@engelfish.net</email>
<website>http://engelfish.net</website>
<ipAddress>66.64.210.29</ipAddress>
<date>13 Nov 2007 15:02:25:383 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: SyncTheMilk: Business logic in Groovy, UI in Java</title>
<body><![CDATA[Chris, MilkSync is the first in a suite of  RTM products that cover syncing which is likely to include an Outlook version at some time. Third parties are discouraged from working in that space, so I've moved on to other plans. Thanks for your interest.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>13 Nov 2007 18:12:04:3 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1194966145383</parent>
</comment>
</blogEntry>

Importing 2007/08/20/1187605390405.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Dealing with Win32 Dates from Java (and Groovy)</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
I've been working hard on the Sync engine behind SyncTheMilk, which means doing tons of work with the Outlook COM model... it also means getting up to speed with Win32 scripting dates. 
</p>
<p>
If you're in the market for a good discussion of how Win32 scripting dates work, check out Chip Pearson's <a href="http://www.cpearson.com/excel/datetime.htm">article</a>.  If you thought Java dates were ugly..
</p>
<p>
Win32 dates are kept as an offset from an epoch of Jan 0, 1900. Yep, that's no typo. January Zero. They have an integer part which represents the number of days since epoch, and then a fractional part that represents the percentage of the current day. So... in Canberra local time...
</p>
<p style="border: 1px solid black; padding: 4px;">
39220.54722673611 == Fri May 18 13:08:00 EST 2007
</p>
<p>
I know what you're thinking... How about a little code so I can google for this later? Sure... Here's a little quick and dirty Groovy for converting Win32 dates to Java dates:
</p>
<pre style="border: 1px solid; padding: 4px;">
Date winToJavaDate(BigDecimal d) {
		
    if (!d) return null

    def daysSinceEpoch = d.intValue() 
    def percentOfDay = d - daysSinceEpoch		

    Calendar jCal = Calendar.getInstance()
    jCal.set(1900, 0, 0, 0, 0, 0)
    jCal.add(Calendar.DATE, daysSinceEpoch-1)

    def msPerDay = 1000 * 60 * 60 * 24
    def msOffset = msPerDay * percentOfDay

    jCal.add(Calendar.MILLISECOND, msOffset.intValue())
    return jCal.getTime()
		
}
</pre>
<p>
And you're off and running. A little more work on my Syncing robustness and I'll have my first little rich UI  Groovy-powered app to set free... 
</p>
<p>
Stay tuned...
</p>&#x5d;&#x5d;&gt;</body>
<date>20 Aug 2007 10:23:10:405 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags/>
<comment>
<title>Re: Dealing with Win32 Dates from Java (and Groovy)</title>
<body><![CDATA[is it contain the time zone information?&#x5d;&#x5d;&gt;</body>
<author>mmao</author>
<email>maomaode@gmail.com</email>
<website>http://maomaode.bokeland.com</website>
<ipAddress>124.17.14.193</ipAddress>
<date>21 Aug 2007 03:25:16:939 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Dealing with Win32 Dates from Java (and Groovy)</title>
<body><![CDATA[VBA Dates are all in localtime. So... you're on your own with GMT calcs :-)&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.13.1.142</ipAddress>
<date>21 Aug 2007 03:36:53:154 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1187666716939</parent>
</comment>
</blogEntry>

Importing 2007/08/22/1187815560000.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Oops. I just wrote a Grails forum...</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
It started out innoently enough... My wife was out for the night... I just wanted to have a place for my users to post ideas and feedback about my little syncing product... Then one thing led to another...
</p>
<p>
And I wrote a forum. 
</p>
<p>
The feature set so far is:
<ul>
<li>Ajax preview on posts
<li>All comments kept in Textile and rendered to html using Matt's neato <a href="http://blog.secosoft.net/2007/02/24/using-textile-with-grails/">Grails Textile Encoder</a> trick
</p>
<p>
I know I've gotta stop the madness... but Grails is just so addictive...
</p>&#x5d;&#x5d;&gt;</body>
<date>22 Aug 2007 20:46:00:0 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>unpublished</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags/>
</blogEntry>

Importing 2007/09/20/1190281293926.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Goodnight SyncTheMilk: Just not fast enough to market....</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
This blog has been pretty quiet lately since I've been beavering hard on SyncTheMilk, my little Groovy app for syncing Outlook to <a href="http://www.rememberthemilk.com">Remember The Milk</a>.
</p>
<p>
Sadly, though, SyncTheMilk will never make to 1.0, since the guys at RTM have released their own client called <a href="http://www.rememberthemilk.com/services/milksync/">MilkSync</a> which uses their own private SyncML interface. So it's definitely time to call it a day. I came pretty close:
</p>
<p>
<img src="images/2007/SyncTheMilkInAction.png" alt="SyncTheMilk in action at 0.3"/>
</p>
<p>
Anyways, I'll leave 0.3 for <a href="http://www.bytecode.com.au/downloads/syncthemilk/">download</a>  posterity. It was certainly a lot of fun to work on, and gave me a whole new perspective on how tricky the corner cases can be around syncing.
</p>
<p>
From a learning perspective I had a chance to put Groovy through its paces in the Business Domain and was really happy. Using Groovy greatly accelerated the XML/http stuff, and made the Outlook/COM integration easy. I also discovered some of the sync logic was probably better suited to a Java solution (I think Java's static typing could have saved me a lot of time in there and saved me from a couple of hard to track down bugs where I was putting the wrong things into some of the collections).
</p>
<p>
From the Java side, I also had a chance to learn a little about SWT Progress Bars, Custom Field Editors, and Checkbox Listviewers. 
</p>
<p>
Oh well... On to the next big idea... I've got a swag full of Grails ideas that are needing some attention... :-)
</p>&#x5d;&#x5d;&gt;</body>
<date>20 Sep 2007 09:41:33:926 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
<comment>
<title>Re: Goodnight SyncTheMilk: Just not fast enough to market....</title>
<body><![CDATA[RTM's MilkSynch was only about synching with Windows MObile and that too for Pro accounts only, so i would say, that you still have place and chance for continuing SyncTheMilk, for its Outlook Synch capabilities&#x5d;&#x5d;&gt;</body>
<author>Dinesh</author>
<email>dinesh.ms@gmail.com</email>
<website></website>
<ipAddress>59.93.84.72</ipAddress>
<date>28 Sep 2007 18:59:38:588 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Goodnight SyncTheMilk: Just not fast enough to market....</title>
<body><![CDATA[Hi Dinesh. You're right that it's only a mobile solution for now.... but they are in the process of building sync solutions for other platforms... I'm guessing outlook is right up there on that list!&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>28 Sep 2007 20:31:03:782 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1191005978588</parent>
</comment>
<comment>
<title>Re: Goodnight SyncTheMilk: Just not fast enough to market....</title>
<body><![CDATA[Hey Glen, 

I don't like to beat a dead horse here.  But you have to upgrade to the Pro version of RTM to use MilkSync.

Or even if the download link for the unsupported beta still worked, that would be something.

Thanks.&#x5d;&#x5d;&gt;</body>
<author>Chris</author>
<email>cyberhiker@gmail.com</email>
<website></website>
<ipAddress>207.114.17.59</ipAddress>
<date>01 Oct 2007 14:00:28:460 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Goodnight SyncTheMilk: Just not fast enough to market....</title>
<body><![CDATA[Hi Chris,

Download link above should be all good now. Lost my server last week and am still in the process of restoring files from backup.

Thanks for your interest, let me know how you go.

Glen.

&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>01 Oct 2007 20:08:24:394 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1191247228460</parent>
</comment>
<comment>
<title>Re: Goodnight SyncTheMilk: Just not fast enough to market....</title>
<body><![CDATA[Hi,
  Thanks for your good work.
  Because of resource constraints at RTM, my WM2003 and desktop outlook is out of luck. I wonder if you could open source your syncthemilk so that the rest of us can fix the bug for the general non-pro users? Let me know to see if I get some time. Is your app build on syncML or other things? 

ying
&#x5d;&#x5d;&gt;</body>
<author>ying</author>
<email>dongying@gmail.com</email>
<website></website>
<ipAddress>99.233.101.58</ipAddress>
<date>27 Oct 2007 19:42:33:149 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Goodnight SyncTheMilk: Just not fast enough to market....</title>
<body><![CDATA[<p>
Hi! Thanks for your feedback. The problem at the moment is that some of SyncTheMilk internals are not open source (icons, exe builder, etc), so I'd need to do some work to rip out the non-OS bits. 
</p>
<p>
RTM is on the record as saying that Sync Tools are not really a thing that externals should be investing in. (See <a href="http://groups.google.com/group/rememberthemilk-api/browse_thread/thread/84d4e4f323fffc23/2f797c1a4f0d3d66#2f797c1a4f0d3d66">here</a>), which I interpret as meaning that you might not want to invest too much more time in this project...
</p>
&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>29 Oct 2007 07:24:56:378 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1193514153149</parent>
</comment>
<comment>
<title>Re: Goodnight SyncTheMilk: Just not fast enough to market....</title>
<body><![CDATA[Hey, 


Version 0.3 seems to work OK for me when syncing from RTM to Outlook - and that's good enough for me until there's an official MilkSync that can sync with my Symbian phone (nokia n95). 


I can already sync:
- Outlook with my Phone
- My Phone with my Google Calendar
- My Phone with my Google Contacts
- Google Calendar &amp; RTM


Now I can sync the final missing piece:
- RTM &amp; My Phone


Until someone comes up with an all-in-one solution it's all pretty clunky with lots of different apps handling the sync jobs but at least now I have access to the same information wherever I am.


Thanks for the great work Glen and good luck with your future projects!&#x5d;&#x5d;&gt;</body>
<author>vaughan</author>
<email>vevans@digitas.com</email>
<website></website>
<ipAddress>195.75.219.141</ipAddress>
<date>06 Nov 2007 13:43:26:156 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/09/24/1190668659844.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<blogEntry>
<title>Generating Browser Thumbnails... at Grails Exchange!</title>
<subtitle/>
<excerpt/>
<body><![CDATA[<p>
Everything is coming together for <a href="http://www.grails-exchange.com/pcd/1026">Grails Exchange</a> next month in London... it's a long way for this Aussie to travel, and I've never been to the homeland, but I'm super excited about hanging out with all of you over there.
</p>
<p>
I'm presenting a session title <a href="http://www.grails-exchange.com/glen-smith">The Whole Nine Yards</a> which will cover 10 things you can do in 10 minutes that your users will just love. I'll be taking a bunch of ideas from my prod grails apps, along with a few special sauces that I'm yet to reveal..
</p>
<p>
One funky little tip will centre around a quick way of dynamically generating those funky little website previews that you see on <a href="http://www.dzone.com/">DZone</a>. Here's the <a href="http://www.groovyblogs.org">groovyblogs</a> thumbnail which needs less than 10 lines of groovy (and some nice Java library support :-):
</p>
<p>
<img src="images/2007/gbThumbnail.png" alt="A Thumbnail of groovyblogs.org"/>
</p>
<p>
I'll also be talking about waycool PDF generation, all things RSS, Charts and Graphs, and lots of other fun UI stuff. If you're around London, make sure you <a href="http://www.grails-exchange.com/registration-grails-exchange">register</a> and come on over.
</p>
&#x5d;&#x5d;&gt;</body>
<date>24 Sep 2007 21:17:39:844 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags/>
</blogEntry>

Importing 2007/09/26/1190816980374.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Apologies for tonight's groovyblogs outage...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Yes.. Well.. Tonight the server that hosts groovyblogs literally "let the smoke out". I guess three years of 24x7 operations was too much for no-name whitebox hardware... but it was a stellar effort (I think it was around 250 days of uptime when I last checked).
</p>
<p>
Anyways... I've restored the postgres backup from the night before to some lower end hardware I had lying around... so there might be a little weirdness and slowness until I sort out a replacement.
</p>
<p>
Took the opportunity to upgrade Glassfish v2 final. My various demo webapps will come back online at time permits.
</p>
<p>
That was four hours of work that I wasn't planning on... but it's almost all back to square. Apologies for the inconvenience.
</p>
&#x5d;&#x5d;&gt;</body>
<date>26 Sep 2007 14:29:40:374 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
<comment>
<title>Re: Apologies for tonight's groovyblogs outage...</title>
<body><![CDATA[And we're back online again... 
This time with a brand new server: an iMac Core Duo 2. That should give us plenty of horsepower for the forseeable future.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>27 Sep 2007 12:58:27:604 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
</comment>
<comment>
<title>Re: Apologies for tonight's groovyblogs outage...</title>
<body><![CDATA[Ping me if we can do something to help including donating the resources needed to power groovyblogs.org.

(Yes, we use Grails.)&#x5d;&#x5d;&gt;</body>
<author>Matthew Porter</author>
<email>matthew.porter@contegix.com</email>
<website>http://contegix.com</website>
<ipAddress>24.217.118.104</ipAddress>
<date>29 Sep 2007 16:14:21:324 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Apologies for tonight's groovyblogs outage...</title>
<body><![CDATA[Hi Glen,
I'd be very interested to know where you host your grails sites. I'm looking for good Grails hosts for my future Grails app. Thanks.&#x5d;&#x5d;&gt;</body>
<author>Hou</author>
<email>houyongr@gmail.com</email>
<website></website>
<ipAddress>58.41.146.69</ipAddress>
<date>04 Oct 2007 08:42:57:796 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Apologies for tonight's groovyblogs outage...</title>
<body><![CDATA[Hi Hou, all of them are hosted from home.
<p>
Now running on a iMac 17" Core Duo 2, but used to run fine on an old whitebox PC running Linux (albeit much noiser and a little slower).
<p> I'm using Glassfish v2 final, and it's running just great. &#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>04 Oct 2007 10:30:51:61 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1191487377796</parent>
</comment>
</blogEntry>

Importing 2007/10/02/1191316829602.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>My GrailsExchange Slides are in!</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Phew! I'm finally done on my slides for my <a href="http://www.grails-exchange.com/pcd/1026">Grails Exchange</a> presento. It's gonna be a blast. 
</p>
<p>
<img src="images/2007/GrailsExchangeSlides.png" alt="Outline of my Grails Exchange Talk"/>
</p>
<p>
I'm packing a ton of stuff into 60 minutes. There'll be stuff in there around JFreeChart, Rome, ehcache, wiki markup with Textile, scriptaculous, and Yahoo UI. Hopefully something for everyone! 
</p>
<p>
Can't wait! If you're coming, make sure you drop by and say hello! It's a 25 hour flight.. so I'll be the tired-looking guy with the Aussie accent.
</p>
<p>
See you there!
</p>&#x5d;&#x5d;&gt;</body>
<date>02 Oct 2007 09:20:29:602 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
<comment>
<title>Re: My GrailsExchange Slides are in!</title>
<body><![CDATA[I wanna see 'em!!!

Will you post the whole deck after the conference?&#x5d;&#x5d;&gt;</body>
<author>JS</author>
<email>js@jipiju.com</email>
<website>http://js.jipiju.com</website>
<ipAddress>66.131.211.159</ipAddress>
<date>02 Oct 2007 14:38:02:82 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: My GrailsExchange Slides are in!</title>
<body><![CDATA[I'm sure SkillsMatter have something brewing here... Will keep everyone posted...&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>02 Oct 2007 20:18:39:243 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1191335882082</parent>
</comment>
<comment>
<title>Re: My GrailsExchange Slides are in!</title>
<body><![CDATA[Yes, I want the slides too :-)&#x5d;&#x5d;&gt;</body>
<author>Dmitriy Kopylenko</author>
<email></email>
<website>http://dima767.blogspot.com</website>
<ipAddress>68.196.247.15</ipAddress>
<date>06 Oct 2007 18:29:56:703 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/10/05/1191553088761.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Implementing a simple toString() with Apache Commons</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I think I'm only five years behind the rest of the world, but I've recently had need to tinker with <a href="http://commons.apache.org/beanutils/">Commons BeanUtils</a> and <a href="http://commons.apache.org/lang/">Commons Lang</a> and have found some very nice stuff in there...
</p>
<p>
I've always wanted an easy and generic way to dump out the properties of an object in <code>toString()</code> but never had the passion to follow through... Groovy gives you the super-quick <code>obj.dump()</code> to see all the properties of an object... and I've often wished there was a simple way to do that in Java. Well enter the very useful <a href="http://commons.apache.org/lang/api-release/org/apache/commons/lang/builder/ToStringBuilder.html">ToStringBuilder</a> and life gets very simple...
</p>
<p>
If you don't mind coupling your domain classes to commons-lang, they just use it in your toString() method...
</p>
<pre style="border: 1px solid; padding: 3px">
public String toString() {
    return ToStringBuilder.reflectionToString(this);
}
</pre>
<p>
And if you do mind coupling, or it's a third party object you want to dump out from some client code...
</p>
<pre style="border: 1px solid; padding: 3px">
log.info("Current Org: [" +
    ToStringBuilder.reflectionToString(org) 
    + "]");
</pre>
<p>
Either way the output is quite tidy... and arrays are handled nicely... (I've reformatted to fit here, this is all on one line)
</p>
<pre style="border: 1px solid; padding: 3px">
INFO: Current Org: [au.com.bytecode.dto.Org@652295fd[
    groups={Group1,Group2,Group3},
    address=PO Box 123,
    orgName=SampleOrg]]
</pre>
<p>
Top stuff! You can even pass your own formatting objects if there's a particular way you want <code>ToStringBuilder</code> to format your output. Nice.
</p>
<p>
Props to the Commons Lang boys.. I'm not sure I'll need to write a custom <code>toString()</code> method ever again!
</p>&#x5d;&#x5d;&gt;</body>
<date>05 Oct 2007 02:58:08:761 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Java</category>
<tags></tags>
</blogEntry>

Importing 2007/10/08/1191878907313.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Grails Exchange Demo App coming together...</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
I thought I would put together a quick demo app that demonstrated all of the things I'm going to be talking about at <a href="http://www.grails-exchange.com/pcd/1026">Grails Exchange</a> so people have a nice "take-away" to play with at  home.
</p>
<p>
Well... it's a week to go and I'm half done... but a lot can happen on a long flight! For a teaser... here's the home page... based on a little <a href="http://www.dzone.com/">DZone</a> inspiration..
</p>
<p>
<img src="images/2007/gzoneDemo.png" alt="gzone home page"/>
</p>
<p>
And it wouldn't be Web2.0 without CSS rollovers on those images... (technique from <a href="http://moneytreesystems.com/css/picpopup.html">here</a>).
</p>
<p>
<img src="images/2007/gzoneDemoRollover.png" alt="gzone home page with mouse rollovers"/>

</p>
<p>
Hopefully it will be a nice *small* sample app that can help get people started with some interesting grails features (browser thumbnails, pdf generation, rss feeds, and charting) . Will sort out a download link after the conference (hopefully the thing will actually get finished before then :-)
</p>&#x5d;&#x5d;&gt;</body>
<date>08 Oct 2007 21:28:27:313 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
<comment>
<title>Re: Grails Exchange Demo App coming together...</title>
<body><![CDATA[That's a great teaser, man I wish I could make it to the eXchange :( have fun in the Motherland ;)&#x5d;&#x5d;&gt;</body>
<author>Andres almiray</author>
<email>aalmiray@users.sourceforge.net</email>
<website>http://jroller.com/aalmiray</website>
<ipAddress>148.87.1.170</ipAddress>
<date>09 Oct 2007 00:19:29:475 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Grails Exchange Demo App coming together...</title>
<body><![CDATA[I second the above!&#x5d;&#x5d;&gt;</body>
<author>doylecentral</author>
<email>doyle@doylecentral.com</email>
<website>http://doylecentral.com</website>
<ipAddress>138.162.0.41</ipAddress>
<date>10 Oct 2007 12:43:33:597 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Grails Exchange Demo App coming together...</title>
<body><![CDATA[<p>
Thanks guys. I'll be blogging the conference up as much as I can... 
</p>&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>192.168.1.7</ipAddress>
<date>10 Oct 2007 19:37:35:831 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1192020213597</parent>
</comment>
</blogEntry>

Importing 2007/10/16/1192558142006.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Grails Exchange Day 0: iShowU Screencasting Addiction</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Mind the Gap! I'm in London! 33 hours in a plane is worth it to be at Grails Exchange this week. It's gonna be awesome.
</p>
<p>
I'm not sure of what the WiFi story is at the Barbican Centre, so I'm screencasting a few bits and pieces of the presento. I did a little homework on Screencasting stuff for OSX, and ended up settling with <a href="http://www.shinywhitebox.com/home/home.html">iShowU</a> which seem to have awesome bang for buck.
</p>
<p>
<img src="images/2007/GrailsExchangeDay0.png" alt="iShowU Screencast of Grails Exchange Demo"/>
</p>
<p>
You can download a sample <a href="images/2007/GrailsExchangeDay0.mov">screencast</a> (744kb) of my GZone app if you'd like. You can tweak all sorts of settings with iShowU including different capture quality, custom screen sizes, CPU impact, with or without voice-over, awesome! 
</p>
<p>
If you need to trim the Quicktime clips you create, you can grab a free copy of <a href="http://www.squared5.com/svideo/mpeg-streamclip-mac.html">MPEG Streamclip</a> which is the perfect editing companion for quick trims and edits (or just dump it into iMovie if you're super keen).
</p>
<p>
Having a ball seeing the sights in London... and can't wait to hang out with you all at Grails Exchange tomorrow!
</p>&#x5d;&#x5d;&gt;</body>
<date>16 Oct 2007 18:09:02:6 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
<comment>
<title>Re: Grails Exchange Day 0: iShowU Screencasting Addiction</title>
<body><![CDATA[Glen! Welcome to London!!! I work 5 mins walk away from the barbican! drop me a line at my email and maybe I can catch you at the barbican tomorrow!&#x5d;&#x5d;&gt;</body>
<author>nash</author>
<email>nash100@gmail.com</email>
<website>http://www.akqa.com</website>
<ipAddress>78.147.96.108</ipAddress>
<date>16 Oct 2007 21:09:15:326 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/11/02/1194045185806.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Groovyblogs goes Thumbnails!</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Those of you that came to my Grails Exchange talk (<a href="http://www.grails-exchange.com/files/GlenSmith_TheWholeNineYards.pdf">slides</a>) will know that I've been working hard on a strategy for Browser Thumbnail generation. Well I've finally got one that works *fairly* reliably. I took the opportunity to upgrade groovyblogs to Grails 1.0 RC1 at the same time.
</p>
<p>
<img src="images/2007/gbThumbs.png" alt="GroovyBlogs with thumbnails"/>
</p>
<p>
I've tried a few approaches to thumbnails with various Swing libraries, but found the best results came from using the SWT Browser component. This component wraps a real browser (ie on windows, Safari on OSX, and Firefox on Linux). It means I can run my thumbnail server on whatever box I like (though the Linux routines produce a significantly more jagged images...). My Java code launches a new shell containing a browser component, points it at a URL, waited until browser component fires its "all done" event, then grabs an Image of the component and writes it to a JPEG.
</p>
<p>
Why does it generate JPEGs and not PNGs/GIFs? I've tried all the formats, but JPEG is the only one that works with all of the websites I've sampled. I haven't got to the bottom of it yet, but the SWT libraries on OSX seems to write PNGs that have a bit-depth that is too complex for some browsers. And if won't generate GIFs for sites with complex bit-depths at all! Both those cases only happen for a percentage of sites... but enough to be a pain. I haven't found a site that won't JPEG reliably, so I'm sticking with that (and the thumbnails are quite a lot smaller in file size, though there is a little artifacting).
</p>
<p>
When can you get the source? Real soon now... The upgrade to Grails 1.0 RC1 clobbered my build.xml file which builds my distro.zip... and my CVS server is only freshly restored from backup, so I have to hunt down the old version. But I should have something next week for people to download and play with if they're keen.
</p>
<p>
The SWT stuff that does the browser grab is written in Java, but exposed by a XML RPC service written in Groovy. I wanted to do all the funky browser-launching stuff in a separate VM from the app server, and XMLRPC was such an easy option with the <a href="http://groovy.codehaus.org/XMLRPC">Groovy XMLRPC</a> module. Things get even trickier cause my server is OSX, and SWT needs a special JVM switch of -XstartOnFirstThread, so it was pretty compelling to have it as a standalone service. I'll post some more details and sample client code, when I get some downtime...
</p>
<p>
Happy thumbnailing!
</p>
&#x5d;&#x5d;&gt;</body>
<date>02 Nov 2007 23:13:05:806 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
<comment>
<title>Re: Groovyblogs goes Thumbnails!</title>
<body><![CDATA[Are you going to continue posting the source code for groovyblogs.org?

&#x5d;&#x5d;&gt;</body>
<author>Anonymous</author>
<email></email>
<website></website>
<ipAddress>24.217.118.104</ipAddress>
<date>05 Nov 2007 03:01:48:829 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Groovyblogs goes Thumbnails!</title>
<body><![CDATA[For sure. Should have the 1.0 source up by the end of the week.&#x5d;&#x5d;&gt;</body>
<author>Glen Smith</author>
<email>glen@bytecode.com.au</email>
<website>http://blogs.bytecode.com.au/glen</website>
<ipAddress>203.13.1.142</ipAddress>
<date>05 Nov 2007 04:35:22:266 +0000</date>
<state>approved</state>
<authenticated>true</authenticated>
<parent>1194231708829</parent>
</comment>
</blogEntry>

Importing 2007/11/05/1194230711983.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Tiny browser thumbnail client, anyone?</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
While testing out my little browser thumbnail service, I thought I'd throw together a little thumbnail Swing client to tinker with (I was super inspired by <a href="http://blogs.sun.com/geertjan/entry/groovy_web_service">Geertjan's</a> work on Soap clients). You can type in a URL, invoke the Thumbnail service over XMLRPC, then have a look at the image returned:
</p>
<p>
  <img src="images/2007/ThumbnailClient.png" alt="Thumbnail client in action"/>
</p>
<p>
If you're keen for a play, download the latest XML RPC jar (I'm using <a href="http://dist.groovy.codehaus.org/jars/groovy-xmlrpc-0.3.jar">v0.3</a>), and copy it to your ~/.groovy/lib directory (or %USERPROFILE%\.groovy\lib on Windows). Then fire up groovyConsole and cut and paste....
</p>

<p>
<pre style="border: 1px solid black; padding: 5px;">
import groovy.net.xmlrpc.*

def server = new XMLRPCServerProxy("http://www.groovyblogs.org:7999")

def swing=new groovy.swing.SwingBuilder()
	
def frame=swing.frame(title: 'Thumbnail Service', 
    preferredSize: [700, 500], 
    background: java.awt.Color.lightGray) {
  vbox {
    panel {
	label 'Enter URL:'
        textField(id: 'url', columns: 40, "http://www.google.com.au/")
	button(text: "Get Thumb", actionPerformed: { event ->
		println "Retrieving URL: $swing.url.text"
		def thumbs = server.getThumbnail(swing.url.text)
		def large = new javax.swing.ImageIcon(thumbs[0])
		def small = new javax.swing.ImageIcon(thumbs[1])
		swing.smallicon.icon = small
		swing.bigicon.icon = large
	})
    }
    panel {
	label(id: 'smallicon')
	label(id:'bigicon')
    }
  }
}
frame.pack()
frame.show()
</pre>
</p>
<p>
The service only exposes one method, getThumbnail(url) which returns an array of byte[]. The first element is the large thumbnail bytes, the second is the small one. The format returned is jpeg. Be patient, it can take a few seconds to return...
</p>
<p>
Once I have a public download of the thumbnail service code, I'll cut the public API, but it's a fun experiment of what you can do with a few lines of groovy plus some XMLRPC goodness!
</p>&#x5d;&#x5d;&gt;</body>
<date>05 Nov 2007 02:45:11:983 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
<comment>
<title>Re: Tiny browser thumbnail client, anyone?</title>
<body><![CDATA[Very cool Glen! Looking forward to seeing the code for this.&#x5d;&#x5d;&gt;</body>
<author>Tom</author>
<email></email>
<website></website>
<ipAddress>159.182.1.4</ipAddress>
<date>05 Nov 2007 16:40:56:392 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/11/07/1194400360760.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Thumbnail Server src now available (and Groovyblogs src now updated to 1.0 RC1)</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
For those who have been chasing the source to the Browser Thumbnail stuff, it's now available for <a href="http://www.bytecode.com.au/downloads/grails/">download</a> (Apache 2.0 license). It's a little scrappy and needs a tidy up, but we're all friends, right?
</p>
<p>
At the same place you'll find the updated source for groovyblogs that will play nice with Grails 1.0 RC1. This version now makes plenty of use of the way-cool <a href="http://grails.org/Config">Grails Config</a> stuff, so it should be a lot easier to customise to your environment. Make sure you check out the Config.groovy file and customise the paths/proxies/whatnot..
</p>
<p>
The Thumbnail server should be a painless "download and run" for OSX users, others should <strike>upgrade their operating system</strike> check the README.txt...
</p>
<pre style="border: solid 1px black; padding: 1em">
To start the service, do an "ant run" from where 
you unzipped the distro. There is no GUI, just a 
bunch of log messages. :-)

You can create a simple client for testing by following 
the instructions here:

http://blogs.bytecode.com.au/glen/2007/11/05/1194230711983.html


FOR NON OSX USERS!!!!

In order to get this running on your own workstation, 
you'll need to perform the following steps if you're 
not running on OSX:

1. Download the correct SWT libraries for your platform

Head on over to http://www.eclipse.org/swt/ and grab the
download for your platform. Remove the current ones 
from "/lib" in the project and replace them with the 
two matching SWT jars for your platform.

2. Remove the references to -XstartOnFirstThread 
from build.xml and ThumbnailServer.groovy.

3. If running on linux, you'll need to setup the path to 
your browser component.

On Ubuntu, I use something like:

export MOZILLA_FIVE_HOME=/usr/lib/firefox

4. You're done! Do an "ant run" and give it a try
</pre>
<p>
Enjoy the thumbnailing goodness.. 
</p>
&#x5d;&#x5d;&gt;</body>
<date>07 Nov 2007 01:52:40:760 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
<comment>
<title>Re: Thumbnail Server src now available (and Groovyblogs src now updated to 1.0 RC1)</title>
<body><![CDATA[That's great Glen! perhaps a link on the groovy site is in order? Keep on Groovying!&#x5d;&#x5d;&gt;</body>
<author>Andres Almiray</author>
<email>aalmiray@users.sourcefrge.net</email>
<website>http://jroller.com/aalmiray</website>
<ipAddress>67.180.43.228</ipAddress>
<date>07 Nov 2007 16:37:28:143 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/11/07/1194423060000.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Grails Exchange: The Personalities</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>

http://graemerocher.blogspot.com/

http://glaforge.free.fr/weblog/ Guillaume Laforge

http://blackdragsview.blogspot.com/

http://javajeff.blogspot.com/ Jeff Brown

http://www.jroller.com/sclayman/ (http://beta.clipweaver.com)

http://www.svenhaiges.de/

http://www.amazon.com/gp/blog/A368TUB0Q1IE3F (Dierk Koenig)

http://www.davisworld.org/blojsom/blog/ (Scott Davis aboutgroovy)

http://blogs.sun.com/geertjan/ 

http://berndschiffer.blogspot.com/ 

http://grails-exchange.com/scott-hickey

http://roepieblog.blogspot.com/ Ronald Pieterse

http://www.anyware.co.uk/2005/ Marc Palmer

http://jasonrudolph.com/blog  Jason Rudolph

Wendy Skillmatter.

</p>&#x5d;&#x5d;&gt;</body>
<date>07 Nov 2007 08:11:00:0 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>unpublished</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
</blogEntry>

Importing 2007/11/15/1195156311239.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>First experiences with IntelliJ... and its stunning Groovy/Grails support</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
After GrailsExchange, I put it on my TODO list to checkout IntelliJ. Some of the guys were demoing certain features of the JetGroovy plugin and some of the Grails support looked just stunning. So I downloaded the trial, installed the JetGroovy plugin, and created a new Grails app.
</p>
<p>
I'm a hardcore Eclipse user, and have never used Idea before, but the learning curve is pretty nice. So what about the Groovy/Grails stuff? I'm only a week in, but the things I use *all the time* are the quick switch options between Domain/Controller/View/Test for a given object. That saves *so* much time..(in screengrab below I have everything related to the Entry domain class instantly onscreen) 
</p>
<p>
<img src="images/2007/ideaGrailsSwitch.png" alt="Quick switching between stuff"/>
</p>
<p>
The other massive timesaver is the great work they have put into getting Groovy completion happening. The support is still not complete, but it is a long way there. Being able to control-click on a class to jump there is sensational.. and I haven't even started playing with the Groovy Refactor support! Autocomplete also works great on Grails custom taglbs in the gsp view (which is a huge timesaver for me since I have the memory of a goldfish...)
</p>
<p>
They've done some cute stuff with the domain modelling gear too. You can get a nice pick of where your dependencies are setup (which is super helpful in getting a "lay of the land" for the project).  
</p>
<p>
<img src="images/2007/ideaDomainClasses.png" alt="Domain Class Modelling Stuff"/>
</p>
<p>
So first impressions are excellent. The IntelliJ guys have done a really nice <a href="http://docs.codehaus.org/display/GRAILS/IDEA+Integration">What's new</a> page where you can see all the integration points with a ton of screengrabs. 
</p>
<p>
I'll be giving it a solid workout over the next month...
</p>&#x5d;&#x5d;&gt;</body>
<date>15 Nov 2007 19:51:51:239 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<category>/Java</category>
<tags></tags>
<comment>
<title>Re: First experiences with IntelliJ... and its stunning Groovy/Grails support</title>
<body><![CDATA[Glen,
<br />I've been enjoying IntelliJ 7 as well.    I've noticed one small issue though, it seems that the ERD sometimes doesn't see all my domain classes when making the diagram.   Have you had any issues like this?  &#x5d;&#x5d;&gt;</body>
<author>Douglas Fils</author>
<email>drfils@gmail.com</email>
<website>http://douglasfils.blogspot.com/</website>
<ipAddress>129.186.121.156</ipAddress>
<date>15 Nov 2007 22:13:42:508 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: First experiences with IntelliJ... and its stunning Groovy/Grails support</title>
<body><![CDATA[I've been using it since Grails eXchange (nice presentation by the way Glen ;o) and I've started to write an article about it.  I want to show how Intellij makes it easier to develop a Grails app. More on this later... &#x5d;&#x5d;&gt;</body>
<author>Antonio Goncalves</author>
<email>antonio.goncalves@gmail.com</email>
<website>http://www.antoniogoncalves.org</website>
<ipAddress>82.226.95.182</ipAddress>
<date>16 Nov 2007 20:39:41:521 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

Importing 2007/11/28/1196248511519.xml
<?xml version="1.0" encoding="UTF-8"?>
<blogEntry>
<title>Give me 1K LOC and I will move the Earth!</title>
<subtitle></subtitle>
<excerpt></excerpt>
<body><![CDATA[<p>
Well.. maybe not "move the earth"... but I might just be able to come up with a pretty nice little sample blog app. My goal is to have something to add to the Grails samples distro so that people have a nice, gentle, but complete app to cut their teeth on.
</p>
<p>
The humble blog app seems to be low handing fruit, (<a href="http://jameswilliams.be/blog/index.php?itemid=39">some people</a> have already started work on such beasts) so I'm off and running on my next little project. I'm modelling off Simon Brown's way cool <a href="http://pebble.sourceforge.net/">Pebble</a> (which powers this site at the moment), but if I'm to fit it into 1000 Lines of Code, I'm going to have to dispense with a few features... so... may I introduce:
</p>
<p>
<img src="images/2007/gravl.gif" alt="gravl's shiny new logo"/>
</p>
<p>
Gravl - Pebble, but smaller, and without some of the niceties. 
</p>
<p>
Ok. Here are the rules. 
<ul>
<li>Everything(*) must fit into 1000 LOC as returned by the "grails stats" command
<li> That number excludes plugins since users want to learn how the app works, not the plugins (I'm thinking that Searchable and Feeds are going to save a ton of lines there)
<li> That number doesn't include webby view stuff (like gsps/css/javascript) - just the core logic (services/logic/models/taglibs) and related config elements
<li>That number also doesn't include the test cases, since I'd like to have some nice samples for both unit and integration testing to get people up and running there (especially since Dierk sold me on Canoo Webtest stuff... that guy groks testing more than anyone I've ever heard)
</ul>
</p>
<p>
The main aim of the app is as a samples/teaching tool. So I'm cramming a fairly diverse set of stuff in just so people have examples of some of the powerful features in Grails. In my sights right now are:
<ul>
<li> Custom Filters for doing referrer tracking
<li> All the common domain relationship (incl M:N)
<li> Custom UrlMapping for permalinks
<li> Command objects for form processing (incl validation)
<li> Some WebFlow samples around the publishing process
<li> AJAX tags/autocomplete stuff for entry categories
<li> Using the Searchable and Feeds plugin
<li> Using custom configs to make it all tidy
<li> Simple taglibs for pretty Date display
<li> i18n for the core interface features
<li> Unit testing controllers
<li> Integration testing webflows
<li> Some funky layout templates to make it all web2.0
<li> Bonus marks to handle import and export of content (and a Gold Star if we can import my existing Pebble content straight from a Pebble export into a Gravl import).
</ul>
</p>
<p>
Boy.. That all sounds a little ambitious.. Let's see how far I can get by Christmas... It's Grails, right? I'm sure I'll have something to show...
</p>&#x5d;&#x5d;&gt;</body>
<date>28 Nov 2007 11:15:11:519 +0000</date>
<timeZone>Australia/Canberra</timeZone>
<state>published</state>
<author>glen</author>
<staticName/>
<commentsEnabled>true</commentsEnabled>
<trackBacksEnabled>true</trackBacksEnabled>
<category>/Groovy</category>
<tags></tags>
<comment>
<title>Re: Give me 1K LOC and I will move the Earth!</title>
<body><![CDATA[Hy,

Can you include also breadcrumbs in the list ?&#x5d;&#x5d;&gt;</body>
<author>Marius Vasilache</author>
<email></email>
<website></website>
<ipAddress>85.204.29.143</ipAddress>
<date>28 Nov 2007 12:47:24:891 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Give me 1K LOC and I will move the Earth!</title>
<body><![CDATA[LOL! Gravl, love the name, can't wait for the code ;-)

Good luck!&#x5d;&#x5d;&gt;</body>
<author>Graeme Rocher</author>
<email>graeme.rocher@gmail.com</email>
<website>http://grails.org</website>
<ipAddress>81.102.253.64</ipAddress>
<date>28 Nov 2007 17:11:14:306 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
<comment>
<title>Re: Give me 1K LOC and I will move the Earth!</title>
<body><![CDATA[I'm looking forward to this. I still use your rss aggregator app sometimes for reference, so one more will be nice!&#x5d;&#x5d;&gt;</body>
<author>Robert</author>
<email>pocket5s@gmail.com</email>
<website>http://thebull.macsimumweb.com</website>
<ipAddress>206.173.230.2</ipAddress>
<date>30 Nov 2007 18:01:48:763 +0000</date>
<state>approved</state>
<authenticated>false</authenticated>
</comment>
</blogEntry>

]]></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="9" name="ImportServiceTests" package="" tests="1" time="23.598">
  
    <properties></properties>

      <testcase classname="ImportServiceTests" name="testImport" time="22.657"></testcase>

      <system-out><![CDATA[Starting test..
]]></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="10" name="LoginControllerTests" package="" tests="1" time="0.0090">
  
    <properties></properties>

      <testcase classname="LoginControllerTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="11" name="TagControllerTests" package="" tests="1" time="0.0060">
  
    <properties></properties>

      <testcase classname="TagControllerTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" id="12" name="TagTests" package="" tests="1" time="0.0060">
  
    <properties></properties>

      <testcase classname="TagTests" name="testSomething" time="0.0"></testcase>

      <system-out></system-out>

      <system-err></system-err>

  </testsuite>
</testsuites>
